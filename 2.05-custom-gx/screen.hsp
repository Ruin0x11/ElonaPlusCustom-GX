*screen_init
	if ( windoww < 800 ) {
		windoww = 800
	}
	if ( windowh < 600 ) {
		windowh = 600
	}

	// HSP expects the screen resolution to be a multiple of 4, because of the
	// way the canvas is laid out in memory. Anything else can cause crashes.
    if (windoww \ 4 != 0) {
		windoww = windoww - (windoww \ 4)
    }
    if (windowh \ 4 != 0) {
		windowh = windowh - (windowh \ 4)
    }

    maxResolutionX = GetDeviceCaps(hdc, 8)  ; HORZRES
    maxResolutionY = GetDeviceCaps(hdc, 10) ; VERTRES

    if ( (double(windoww) * cfg_highdpi_scaling) > maxResolutionX | (double(windowh) * cfg_highdpi_scaling) > maxResolutionY ) {
        dialog "Invalid screen resolution detected. Custom-GX will attempt to reset to a sane default.", 1
        windoww = 800
        windowh = 600
        cfg_highdpi_scaling = 1.0
    }

	windoww2 = windoww
	windowh2 = windowh

    // BUG: There is an issue with _grotate in the elona.dll module (for which
    // the source is unavailable) which causes crashes when using Windows' system
    // level DPI scaling with larger resolutions. Thankfully, this function is only
    // used in a couple of places related to object shadows, so check if system level
    // scaling is not 100% (96 DPI) and disable object shadows if so.

    dpiX = GetDeviceCaps(hdc, 88) ; LOGPIXELSX
    dpiY = GetDeviceCaps(hdc, 90) ; LOGPIXELSY

    if ( (dpiX == 96) & (dpiY == 96) ) {
        can_objectshadow = TRUE
    } else {
        can_objectshadow = FALSE
    }

	selcur = 0
	inf_clockarrowx = inf_clockx + 62
	inf_clockarrowy = inf_clocky + 48
	inf_barh = 16
	inf_msgh = 72
	inf_verh = inf_barh + inf_msgh
	inf_msgline = 4
	inf_raderx = 1
	inf_raderw = 136
	inf_screenw = windoww / inf_tiles + (windoww \ inf_tiles != 0)
	inf_screenh = (windowh - inf_verh) / inf_tiles
	inf_tilecutoffy = (windowh - inf_verh) \ inf_tiles
	if ( inf_tilecutoffy != 0 ) {
		inf_screenh++
	}
	if ( inf_vertype == 0 ) {
		inf_ver = 0
		inf_bary = 0
		inf_msgy = inf_ver + inf_barh
		inf_screeny = inf_verh
		inf_clocky = windowh - inf_clockh
		inf_radery = 1
	}
	else {
		inf_screeny = 0
		if ( inf_tilecutoffy != 0 ) {
			inf_screeny = 0 - inf_tiles + inf_tilecutoffy
		}
		inf_ver = windowh - inf_verh
		inf_bary = windowh - inf_barh
		inf_msgy = inf_ver
		inf_clocky = 0
		inf_radery = windowh - 86
	}
	scposy = inf_screenh / 2 - 1
	inf_hpx = (windoww - 84) / 2 - 100
	inf_hpy = inf_ver - 12
	inf_mpx = (windoww - 84) / 2 + 40
	inf_mpy = inf_ver - 12
	inf_msgx = inf_raderw
	inf_msgspace = 15
	inf_maxmsglen = (windoww - inf_msgx - 28) / inf_mesfont * 2 - 1
	inf_maxlog = (inf_msgy - 100) / inf_msgspace + 3
	inf_very = windowh - inf_verh
	screenmsgy = inf_screeny + inf_tiles * 2
	prompty = (windowh - inf_verh - 30) / 2 - 4
	promptx = (windoww - 10) / 2 + 3
	return

*screen_txtAdv
	gmode 0
	pos 0, 0
	if ( txtadvscreenupdate == 1 ) {
		gcopy 4, 0, 0, windoww, windowh - inf_verh
	}
	else {
		gcopy 4, 0, 0, windoww, 100
	}
	gmode 2
	repeat 4
		font lang(cfg_font1, cfg_font2), 13 - en * 2, 0
		color 250, 250, 250
		if ( cnt == 0 ) {
			sx = 265
			sy = 8
			pos sx - 30, 5
			gcopy 3, 192, 360, 24, 16
			pos sx + strlen(atxinfon(0)) * 13 / 2 + 14, 5
			gcopy 3, 216, 360, 24, 16
		}
		else {
			sx = 220
			sy = 10 + cnt * 14
		}
		pos sx, sy
		mes atxinfon(cnt)
	loop
	txtadvscreenupdate = 1
	return

*screen_refresh
	redraw 0
	gmode 2
	gosub *screen_draw
	return

*screen_refreshFull
	redraw 0
	gmode 2
	ap = windoww / 192
	repeat ap + 1
		if ( cnt == ap ) {
			sx = windoww \ 192
		}
		else {
			sx = 192
		}
		pos cnt * 192, inf_bary
		gcopy 3, 0, 464 - inf_barh, sx, inf_barh
		pos cnt * 192, inf_msgy
		gcopy 3, 496, 528, sx, inf_msgh
	loop
	pos 0, inf_msgy
	gcopy 3, 120, 504, inf_msgx, inf_verh
	pos inf_raderw + 6, inf_bary
	gcopy 3, 208, 376, 16, 16
	repeat 10
		sx = 0
		if ( cnt == 8 ) {
			sx = 8
		}
		if ( cnt == 9 ) {
			sx = 14
		}
		pos inf_raderw + cnt * 47 + 148 + sx, inf_bary + 1
		gcopy 3, cnt * 16, 376, 16, 16
	loop
	font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0
	color 0, 0, 0
	pos inf_raderw + 24, inf_bary + 3 + vfix - en
	if ( strlen(mdatan(MDATAN_NAME)) > 16 - (maplevel() != "") * 4 ) {
		mes cnven(strmid(mdatan(MDATAN_NAME), 0, 16 - (maplevel() != "") * 4))
	}
	else {
		mes cnven(mdatan(MDATAN_NAME))
	}
	pos inf_raderw + 114, inf_bary + 3 + vfix - en
	mes maplevel()
*screen_raderRefresh
	repeat mdata(MDATA_HEIGHT)
		sy = cnt
		repeat mdata(MDATA_WIDTH)
			sx = cnt
			if ( map(sx, sy, 2) == map(sx, sy, 0) ) {
				gosub *screen_drawRader
			}
		loop
	loop
*screen_draw
	screendrawhack = 1
	gmode 2
	redraw 0
	if ( mode == MODELIST_TXT_ADV ) {
		gosub *screen_txtAdv
	}
	else {
		sxfix = 0
		syfix = 0
		gosub *screen_setPos
		gosub *los
		gosub *los_draw
	}
	screendrawhack = 10
	gosub *screen_drawStatus
	if ( autoturn == 1 ) {
		gosub *screen_drawAutoTurn
	}
	else {
		firstautoturn = 1
		racount = 0
	}
	if ( screenupdate != (-1) ) {
		redraw 1
	}
	screenupdate = 0
	screendrawhack = 0
	return

*screen_sync
	gmode 2
	redraw 0
	gosub *los_draw
	gosub *screen_drawStatus
	redraw 1
	screenupdate = 0
	return

*screen_drawStatus
	font lang(cfg_font1, cfg_font2), 12 - en * 2, 1
	pos inf_hpx, inf_hpy
	gcopy 3, 312, 504, 104, 15
	pos inf_mpx - 10, inf_mpy
	gcopy 3, 312, 504, 104, 15
	if ( cdata(CDATA_HP, CHARA_PLAYER) > 0 ) {
		ap = cdata(CDATA_HP, CHARA_PLAYER) * 84 / cdata(CDATA_MAX_HP, CHARA_PLAYER)
		if ( ap > 100 ) {
			ap = 100
		}
		pos inf_hpx + 16, inf_hpy + 5
		gcopy 3, 412 - ap, 520, ap, 5
	}
	if ( cdata(CDATA_POWER_GAUGE, CHARA_PLAYER) > 0 & cdata(CDATA_POWER_GAUGE, CHARA_PLAYER) <= 100 ) {
		ap = cdata(CDATA_POWER_GAUGE, CHARA_PLAYER) * 84 / 100
		if ( ap > 100 ) {
			ap = 100
		}
		pos inf_hpx + 16, inf_hpy + 10
		gcopy 3, 412 - ap, 525, ap, 2
	}
	if ( cdata(CDATA_POWER_GAUGE, CHARA_PLAYER) > 100 ) {
		ap = (cdata(CDATA_POWER_GAUGE, CHARA_PLAYER) - 100) * 84 / 100
		if ( ap > 100 ) {
			ap = 100
		}
		pos inf_hpx + 16, inf_hpy + 10
		gcopy 3, 1439 - ap, 492, ap, 2
	}
	if ( cdata(CDATA_DRAIN_HP, CHARA_PLAYER) > 0 & cdata(CDATA_DRAIN_HP, CHARA_PLAYER) <= 100 ) {
		apg = cdata(CDATA_DRAIN_HP, CHARA_PLAYER) * 84 / 100
		if ( apg > 100 ) {
			apg = 100
		}
		pos inf_mpx + 6, inf_mpy + 10
		gcopy BUFFER_INF, 532 - apg, 525, apg, 2
	}
	if ( cdata(CDATA_DRAIN_HP, CHARA_PLAYER) > 100 ) {
		apg = 84
		pos inf_mpx + 6, inf_mpy + 10
		gcopy BUFFER_INF, 1439 - apg, 585, apg, 2
	}
	if ( cdata(CDATA_MP, CHARA_PLAYER) > 0 ) {
		ap = cdata(CDATA_MP, CHARA_PLAYER) * 84 / cdata(CDATA_MAX_MP, CHARA_PLAYER)
		if ( ap > 100 ) {
			ap = 100
		}
		pos inf_mpx + 6, inf_mpy + 5
		gcopy BUFFER_INF, 532 - ap, 520, ap, 5
	}
	if ( gdata(GDATA_RIDER) != 0 ) {
		if ( cdata(CDATA_EXIST, gdata(GDATA_RIDER)) == CHAR_STATE_ALIVE ) {
			pos inf_hpx - 120, inf_hpy
			gcopy 3, 312, 504, 104, 15
			ap = cdata(CDATA_HP, gdata(GDATA_RIDER)) * 84 / cdata(CDATA_MAX_HP, gdata(GDATA_RIDER))
			if ( ap > 100 ) {
				ap = 100
			}
			pos inf_hpx - 120 + 16, inf_hpy + 5
			if ( cdata(CDATA_HUNGER, gdata(GDATA_RIDER)) > 10000 ) {
				gcopy 3, 1440 - ap, 487, ap, 5
			}
			else {
				gcopy 3, 412 - ap, 520, ap, 5
			}
			if ( cdata(CDATA_POWER_GAUGE, gdata(GDATA_RIDER)) > 0 & cdata(CDATA_POWER_GAUGE, gdata(GDATA_RIDER)) <= 100 ) {
				ap = cdata(CDATA_POWER_GAUGE, gdata(GDATA_RIDER)) * 84 / 100
				if ( ap > 100 ) {
					ap = 100
				}
				pos inf_hpx - 120 + 16, inf_hpy + 10
				gcopy 3, 412 - ap, 525, ap, 2
			}
			if ( cdata(CDATA_POWER_GAUGE, gdata(GDATA_RIDER)) > 100 ) {
				ap = (cdata(CDATA_POWER_GAUGE, gdata(GDATA_RIDER)) - 100) * 84 / 100
				if ( ap > 100 ) {
					ap = 100
				}
				pos inf_hpx - 120 + 16, inf_hpy + 10
				gcopy 3, 1439 - ap, 492, ap, 2
			}
		}
	}
	sx = inf_hpx + 16
	sy = inf_hpy - 8
	color 0, 0, 0
	pos sx + 4, sy
	bmes "" + cdata(CDATA_HP, CHARA_PLAYER) + "(" + cdata(CDATA_MAX_HP, CHARA_PLAYER) + ")", 255, 255, 255
	sx = inf_mpx + 6
	sy = inf_mpy - 8
	color 0, 0, 0
	pos sx + 4, sy
	bmes "" + cdata(CDATA_MP, CHARA_PLAYER) + "(" + cdata(CDATA_MAX_MP, CHARA_PLAYER) + ")", 255, 255, 255
	sx = inf_hpx + 102
	sy = inf_hpy + 3
	color 0
	pos sx + 4, sy - 2
	bmes "" + cdata(CDATA_POWER_GAUGE, CHARA_PLAYER) + "%", 255, 255, 255
	sx = inf_mpx + 92
	sy = inf_mpy + 3
	color 0
	pos sx + 4, sy - 2
	bmes "" + cdata(CDATA_DRAIN_HP, CHARA_PLAYER) + "%", 255, 255, 255
	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0
	color 0, 0, 0
	sy = inf_bary + 2 + vfix
	repeat STARTING_SKILL_ATTR
		sx = inf_raderw + cnt * 47 + 168 - 2
		if ( cnt < MAX_SKILL_ATTR_BASIC ) {
			if ( cdata(STARTING_CDATA_ATTR + cnt, CHARA_PLAYER) < 0 ) {
				color 200, 0, 0
			}
			else {
				color 0, 0, 0
			}
			pos sx, sy
			gcopy 3, 0, 440, 28, 16
			mes sdata(STARTING_SKILL_ATTR + cnt, CHARA_PLAYER)
		}
		else {
			if ( cnt == MAX_SKILL_ATTR_BASIC ) {
				pos sx + 8, sy
				gcopy 3, 0, 440, 34, 16
				if ( gspdorg > gspd ) {
					color 200, 0, 0
				}
				else {
					if ( gspdorg < gspd ) {
						color 0, 120, 0
					}
					else {
						color 0, 0, 0
					}
				}
				mes "" + gspd
			}
			else {
				color 0, 0, 0
				pos sx + 14, sy
				gcopy 3, 0, 440, 64, 16
				dvfix = cdata(CDATA_DV_FIX, CHARA_PLAYER)
				pvfix = cdata(CDATA_PV_FIX, CHARA_PLAYER)
				if ( cdata(CDATA_DV, CHARA_PLAYER) < 0 ) {
					dvfix = 100
				}
				if ( cdata(CDATA_PV, CHARA_PLAYER) < 0 ) {
					pvfix = 100
				}
				dvpc = cdata(CDATA_DV, CHARA_PLAYER) * dvfix / 100 + dvfix - 100
				pvpc = (cdata(CDATA_PV, CHARA_PLAYER) + pvfix / 25) * pvfix / 100
				if ( cdata(CDATA_DRAIN_HP, CHARA_PLAYER) >= 100 ) {
					dvpc = 0
					pvpc = 0
				}
				mes "" + dvpc + "/" + pvpc
			}
		}
	loop
	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0
	sy = inf_ver - 16
	sx = windoww - 220
	pos sx, sy - 4
	gcopy 3, 0, 392, 24, 24
	color 0
	pos sx + 28, sy + 2
	bmes "" + cdata(CDATA_GOLD, CHARA_PLAYER) + " gp", 255, 255, 255
	sx = windoww - 90
	pos sx, sy - 4
	gcopy 3, 24, 392, 24, 24
	color 0
	pos sx + 28, sy + 2
	bmes "" + cdata(CDATA_PLATINUM, CHARA_PLAYER) + " pp", 255, 255, 255
	sx = windoww - 320
	sy = inf_ver - 16
	color 0
	pos sx + 38, sy - 5
	bmes "Sp" + cdata(CDATA_SP, CHARA_PLAYER) + "/" + cdata(CDATA_MAX_SP, CHARA_PLAYER), 255, 255, 255
	color 0, 0, 0
	pos 4, inf_ver - 16 - 4
	gcopy 3, 48, 392, 24, 24
	pos 32, inf_ver - 14
	bmes "Lv" + cdata(CDATA_LEVEL, CHARA_PLAYER) + "/" + (cdata(CDATA_EXP_TO_NEXT_LVL, CHARA_PLAYER) - cdata(CDATA_EXP, CHARA_PLAYER)), 255, 255, 255
	if ( cdata(CDATA_X, CHARA_PLAYER) < 6 ) {
		if ( mode != MODELIST_TXT_ADV ) {
			if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
				if ( cdata(CDATA_ROW_ACT, CHARA_PLAYER) == ACTION_NONE ) {
					gmode 4, , , 150
				}
			}
		}
	}
	sx = 8
	sy = inf_ver - 50
	if ( cdata(CDATA_HUNGER, CHARA_PLAYER) >= 12000 ) {
		color 0, 0, 0
		pos sx, sy
		gcopy 3, 0, 416, 65 + en * 15, 15
		pos sx + 6, sy + 1
		mes _hunger(12)
		sy -= 20
	}
	else {
		if ( cdata(CDATA_HUNGER, CHARA_PLAYER) >= 1000 ) {
			if ( cdata(CDATA_HUNGER, CHARA_PLAYER) <= 4000 ) {
				color 200, 0, 0
			}
			else {
				color 0, 0, 0
			}
			if ( _hunger(cdata(CDATA_HUNGER, CHARA_PLAYER) / 1000) != "" ) {
				pos sx, sy
				gcopy 3, 0, 416, 65 + en * 15, 15
				pos sx + 6, sy + 1
				mes _hunger(cdata(CDATA_HUNGER, CHARA_PLAYER) / 1000)
				sy -= 20
			}
		}
		else {
			color 250, 0, 0
			pos sx, sy
			gcopy 3, 0, 416, 65 + en * 15, 15
			pos sx + 6, sy + 1
			mes _hunger(0)
			sy -= 20
		}
	}
	if ( cbit(CHARA_BIT_ANOREXIA, CHARA_PLAYER) ) {
		color 200, 100, 50
		if ( cdata(CDATA_VOMIT, CHARA_PLAYER) > 0 ) {
			pos sx, sy
			gcopy BUFFER_INF, 0 + en * 84, 416, 65 + en * 30, 15
			pos sx + 6, sy + 1
			mes _vomit(limit(cdata(CDATA_VOMIT, CHARA_PLAYER) / 3, 0, length(_vomit) - 1))
			sy -= 20
		}
		else {
			pos sx, sy
			gcopy BUFFER_INF, 0 + en * 84, 416, 65 + en * 30, 15
			pos sx + 6, sy + 1
			mes _vomit(0)
			sy -= 20
		}
	}
	if ( TweakData(TWEAK_GAMEPLAY_CG_DISABLE_THIRST, TWEAK_CATEGORY_GAMEPLAY) == FALSE ) {
		if ( cdata(CDATA_THIRST, CHARA_PLAYER) >= 12000 ) {
			color 0, 0, 80
			pos sx, sy
			gcopy BUFFER_INF, 0 + en * 84, 416, 65 + en * 30, 15
			pos sx + 6, sy + 1
			mes _thirsty(12)
			sy -= 20
		}
		else {
			if ( cdata(CDATA_THIRST, CHARA_PLAYER) >= 1000 ) {
				if ( cdata(CDATA_THIRST, CHARA_PLAYER) <= 4000 ) {
					color 200, 0, 0
				}
				else {
					color 0, 0, 80
				}
				if ( _thirsty(cdata(CDATA_THIRST, CHARA_PLAYER) / 1000) != "" ) {
					pos sx, sy
					gcopy BUFFER_INF, 0 + en * 84, 416, 65 + en * 30, 15
					pos sx + 6, sy + 1
					mes _thirsty(cdata(CDATA_THIRST, CHARA_PLAYER) / 1000)
					sy -= 20
				}
			}
			else {
				color 250, 0, 0
				pos sx, sy
				gcopy BUFFER_INF, 0 + en * 84, 416, 65 + en * 30, 15
				pos sx + 6, sy + 1
				mes _thirsty(0)
				sy -= 20
			}
		}
	}
	if ( cbit(CHARA_BIT_MAGNETISM_S_POLE, CHARA_PLAYER) ) {
		color 0, 0, 100
		pos sx, sy
		gcopy BUFFER_INF, 0 + en * 84, 416, 65 + en * 30, 15
		pos sx + 6, sy + 1
		mes _conmags
		sy -= 20
	}
	if ( cbit(CHARA_BIT_MAGNETISM_N_POLE, CHARA_PLAYER) ) {
		color 100, 0, 0
		pos sx, sy
		gcopy BUFFER_INF, 0 + en * 84, 416, 65 + en * 30, 15
		pos sx + 6, sy + 1
		mes _conmagn
		sy -= 20
	}
	if ( cdata(CDATA_CONDITION_SICK, CHARA_PLAYER) != 0 ) {
		color 80, 120, 0
		if ( cdata(CDATA_CONDITION_SICK, CHARA_PLAYER) >= 30 ) {
			pos sx, sy
			gcopy 3, 0, 416, 65 + en * 15, 15
			pos sx + 6, sy + 1
			mes _consick(1)
			sy -= 20
		}
		else {
			pos sx, sy
			gcopy 3, 0, 416, 65 + en * 15, 15
			pos sx + 6, sy + 1
			mes _consick
			sy -= 20
		}
	}
	if ( cdata(CDATA_CONDITION_POISON, CHARA_PLAYER) != 0 ) {
		color 0, 150, 0
		if ( cdata(CDATA_CONDITION_POISON, CHARA_PLAYER) >= 30 ) {
			pos sx, sy
			gcopy 3, 0, 416, 65 + en * 15, 15
			pos sx + 6, sy + 1
			mes _conpoison(1)
			sy -= 20
		}
		else {
			pos sx, sy
			gcopy 3, 0, 416, 65 + en * 15, 15
			pos sx + 6, sy + 1
			mes _conpoison
			sy -= 20
		}
	}
	if ( cdata(CDATA_CONDITION_MPOISON, CHARA_PLAYER) != 0 ) {
		color 0, 0, 100
		if ( cdata(CDATA_CONDITION_MPOISON, CHARA_PLAYER) >= 30 ) {
			pos sx, sy
			gcopy 3, 0, 416, 65 + en * 15, 15
			pos sx + 6, sy + 1
			mes _conmpoison(1)
			sy -= 20
		}
		else {
			pos sx, sy
			gcopy 3, 0, 416, 65 + en * 15, 15
			pos sx + 6, sy + 1
			mes _conmpoison
			sy -= 20
		}
	}
	if ( cdata(CDATA_CONDITION_SLEEP, CHARA_PLAYER) > 0 ) {
		color 0, 50, 50
		if ( cdata(CDATA_CONDITION_SLEEP, CHARA_PLAYER) >= 30 ) {
			pos sx, sy
			gcopy 3, 0, 416, 65 + en * 15, 15
			pos sx + 6, sy + 1
			mes _consleep(1)
			sy -= 20
		}
		else {
			pos sx, sy
			gcopy 3, 0, 416, 65 + en * 15, 15
			pos sx + 6, sy + 1
			mes _consleep
			sy -= 20
		}
	}
	if ( cdata(CDATA_CONDITION_BLIND, CHARA_PLAYER) != 0 ) {
		color 100, 100, 0
		pos sx, sy
		gcopy 3, 0, 416, 65 + en * 15, 15
		pos sx + 6, sy + 1
		mes _conblind
		sy -= 20
	}
	if ( cdata(CDATA_CONDITION_PARALYZE, CHARA_PLAYER) > 0 ) {
		color 0, 100, 100
		pos sx, sy
		gcopy 3, 0, 416, 65 + en * 15, 15
		pos sx + 6, sy + 1
		mes _conparalyze
		sy -= 20
	}
	if ( cdata(CDATA_CONDITION_SUFFOCATION, CHARA_PLAYER) != 0 ) {
		color 0, 100, 100
		if ( cdata(CDATA_CONDITION_SUFFOCATION, CHARA_PLAYER) >= 15 ) {
			pos sx, sy
			gcopy 3, 0, 416, 65 + en * 15, 15
			pos sx + 6, sy + 1
			mes _conmochi(1)
			sy -= 20
		}
		else {
			pos sx, sy
			gcopy 3, 0, 416, 65 + en * 15, 15
			pos sx + 6, sy + 1
			mes _conmochi
			sy -= 20
		}
	}
	if ( cdata(CDATA_CONDITION_CONFUSE, CHARA_PLAYER) != 0 ) {
		color 100, 0, 100
		pos sx, sy
		gcopy 3, 0, 416, 65 + en * 15, 15
		pos sx + 6, sy + 1
		mes _conconfuse
		sy -= 20
	}
	if ( cdata(CDATA_CONDITION_FEAR, CHARA_PLAYER) != 0 ) {
		color 100, 0, 100
		pos sx, sy
		gcopy 3, 0, 416, 65 + en * 15, 15
		pos sx + 6, sy + 1
		mes _confear
		sy -= 20
	}
	if ( cdata(CDATA_CONDITION_DIM, CHARA_PLAYER) != 0 ) {
		color 0, 100, 100
		if ( cdata(CDATA_CONDITION_DIM, CHARA_PLAYER) >= 60 ) {
			pos sx, sy
			gcopy 3, 0, 416, 65 + en * 15, 15
			pos sx + 6, sy + 1
			mes _condim(2)
			sy -= 20
		}
		else {
			if ( cdata(CDATA_CONDITION_DIM, CHARA_PLAYER) >= 30 ) {
				pos sx, sy
				gcopy 3, 0, 416, 65 + en * 15, 15
				pos sx + 6, sy + 1
				mes _condim(1)
				sy -= 20
			}
			else {
				pos sx, sy
				gcopy 3, 0, 416, 65 + en * 15, 15
				pos sx + 6, sy + 1
				mes _condim
				sy -= 20
			}
		}
	}
	if ( cdata(CDATA_CONDITION_ANGRY, CHARA_PLAYER) != 0 ) {
		color 150, 0, 0
		if ( cdata(CDATA_CONDITION_ANGRY, CHARA_PLAYER) >= 30 ) {
			pos sx, sy
			gcopy 3, 0, 416, 65 + en * 15, 15
			pos sx + 6, sy + 1
			mes _conangry(1)
			sy -= 20
		}
		else {
			pos sx, sy
			gcopy 3, 0, 416, 65 + en * 15, 15
			pos sx + 6, sy + 1
			mes _conangry
			sy -= 20
		}
	}
	if ( cdata(CDATA_CONDITION_METAL, CHARA_PLAYER) != 0 ) {
		color 0, 0, 160
		pos sx, sy
		gcopy 3, 0, 416, 65 + en * 15, 15
		pos sx + 6, sy + 1
		mes _conmatou
		sy -= 20
	}
	if ( cdata(CDATA_CONDITION_BLEED, CHARA_PLAYER) != 0 ) {
		color 150, 0, 0
		if ( cdata(CDATA_CONDITION_BLEED, CHARA_PLAYER) >= 20 ) {
			pos sx, sy
			gcopy 3, 0, 416, 65 + en * 15, 15
			pos sx + 6, sy + 1
			mes _conbleed(2)
			sy -= 20
		}
		else {
			if ( cdata(CDATA_CONDITION_BLEED, CHARA_PLAYER) >= 10 ) {
				pos sx, sy
				gcopy 3, 0, 416, 65 + en * 15, 15
				pos sx + 6, sy + 1
				mes _conbleed(1)
				sy -= 20
			}
			else {
				pos sx, sy
				gcopy 3, 0, 416, 65 + en * 15, 15
				pos sx + 6, sy + 1
				mes _conbleed
				sy -= 20
			}
		}
	}
	if ( cdata(CDATA_CONDITION_INSANE, CHARA_PLAYER) != 0 ) {
		color 150, 100, 0
		if ( cdata(CDATA_CONDITION_INSANE, CHARA_PLAYER) >= 50 ) {
			pos sx, sy
			gcopy 3, 0, 416, 65 + en * 15, 15
			pos sx + 6, sy + 1
			mes _coninsane(2)
			sy -= 20
		}
		else {
			if ( cdata(CDATA_CONDITION_INSANE, CHARA_PLAYER) >= 25 ) {
				pos sx, sy
				gcopy 3, 0, 416, 65 + en * 15, 15
				pos sx + 6, sy + 1
				mes _coninsane(1)
				sy -= 20
			}
			else {
				pos sx, sy
				gcopy 3, 0, 416, 65 + en * 15, 15
				pos sx + 6, sy + 1
				mes _coninsane
				sy -= 20
			}
		}
	}
	if ( cdata(CDATA_CONDITION_DRUNK, CHARA_PLAYER) != 0 ) {
		color 100, 0, 100
		pos sx, sy
		gcopy 3, 0, 416, 65 + en * 15, 15
		pos sx + 6, sy + 1
		mes _condrunk
		sy -= 20
	}
	if ( cdata(CDATA_CONDITION_ATROPHY, CHARA_PLAYER) != 0 ) {
		color 100, 0, 100
		pos sx, sy
		gcopy 3, 0, 416, 65 + en * 15, 15
		pos sx + 6, sy + 1
		mes _conbrowbeat
		sy -= 20
	}
	if ( cdata(CDATA_CONDITION_BRAINWASH, CHARA_PLAYER) != 0 ) {
		color 100, 0, 100
		pos sx, sy
		gcopy 3, 0, 416, 65 + en * 15, 15
		pos sx + 6, sy + 1
		mes _conwash
		sy -= 20
	}
	if ( gdata(GDATA_FLAG_DUPLICANE) != 0 ) {
		color 0, 0, 160
		pos sx, sy
		gcopy 3, 0, 416, 65 + en * 15, 15
		pos sx + 6, sy + 1
		mes _condupli
		sy -= 20
	}
	if ( gdata(GDATA_FLAG_INVULNERABLE_TURNS) != 0 ) {
		color 100, 80, 0
		pos sx, sy
		gcopy 3, 0, 416, 65 + en * 15, 15
		pos sx + 6, sy + 1
		mes _conmuteki
		sy -= 20
	}
	if ( cbit(CHARA_BIT_VINDALIAN_JIUJITSU_ACTIVE, CHARA_PLAYER) == TRUE ) {
		color 10, 10, 10
		pos sx, sy
		gcopy 3, 0, 416, 65 + en * 15, 15
		pos sx + 6, sy + 1
		mes _conjudo
		sy -= 20
	}
	if ( gdata(GDATA_FLAG_MAIN) >= 875 & gdata(GDATA_FLAG_MAIN) < 900 ) {
		color 120, 120, 120
		pos sx, sy
		gcopy BUFFER_INF, 0 + en * 84, 416, 65 + en * 30, 15
		pos sx + 6, sy + 1
		mes _conash
		sy -= 20
	}
	if ( gdata(GDATA_FLAG_MAIN) >= 900 & gdata(GDATA_FLAG_MAIN) < 1000 ) {
		color 160, 160, 0
		pos sx, sy
		gcopy BUFFER_INF, 0 + en * 84, 416, 65 + en * 30, 15
		pos sx + 6, sy + 1
		mes _conovergods
		sy -= 20
	}
	if ( cdata(CDATA_ADVANCED_CASTING_ENABLED, CHARA_PLAYER) != 0 ) {
		color 0, 0, 200
		pos sx, sy
		gcopy BUFFER_INF, 0 + en * 84, 416, 65 + en * 30, 15
		pos sx + 6, sy + 1
		mes _conadvance
		sy -= 20
	}
	if ( cdata(CDATA_CONDITION_WINCE, CHARA_PLAYER) != 0 ) {
		color 160, 0, 0
		pos sx, sy
		gcopy 3, 0, 416, 65 + en * 15, 15
		pos sx + 6, sy + 1
		mes _conkaen
		sy -= 20
	}
	if ( cdata(CDATA_CONDITION_CHILLS, CHARA_PLAYER) != 0 ) {
		color 0, 0, 160
		pos sx, sy
		gcopy 3, 0, 416, 65 + en * 15, 15
		pos sx + 6, sy + 1
		mes _conreiki
		sy -= 20
	}
	if ( cdata(CDATA_CONDITION_BIND, CHARA_PLAYER) != 0 ) {
		color 0, 150, 0
		if ( cdata(CDATA_CONDITION_BIND, CHARA_PLAYER) >= 20 ) {
			pos sx, sy
			gcopy 3, 0, 416, 65 + en * 15, 15
			pos sx + 6, sy + 1
			mes _conbind(1)
			sy -= 20
		}
		else {
			pos sx, sy
			gcopy 3, 0, 416, 65 + en * 15, 15
			pos sx + 6, sy + 1
			mes _conbind
			sy -= 20
		}
	}
	if ( cdata(CDATA_CONDITION_OIL, CHARA_PLAYER) != 0 ) {
		color 160, 0, 0
		pos sx, sy
		gcopy 3, 0, 416, 65 + en * 15, 15
		pos sx + 6, sy + 1
		mes _conoil
		sy -= 20
	}
	if ( cdata(CDATA_CONDITION_INVERT, CHARA_PLAYER) != 0 ) {
		color 80, 30, 30
		pos sx, sy
		gcopy 3, 0, 416, 65 + en * 15, 15
		pos sx + 6, sy + 1
		mes _coninvert
		sy -= 20
	}
	if ( cdata(CDATA_CONDITION_WET, CHARA_PLAYER) != 0 ) {
		color 0, 0, 160
		pos sx, sy
		gcopy 3, 0, 416, 65 + en * 15, 15
		pos sx + 6, sy + 1
		mes _conwet
		sy -= 20
	}
	if ( cdata(CDATA_CONDITION_GRAVITY, CHARA_PLAYER) != 0 ) {
		color 0, 80, 80
		pos sx, sy
		gcopy 3, 0, 416, 65 + en * 15, 15
		pos sx + 6, sy + 1
		mes _congravity
		sy -= 20
	}
	if ( gdata(GDATA_SLEEP) >= 15 ) {
		if ( gdata(GDATA_SLEEP) >= 50 ) {
			color 255, 0, 0
			pos sx, sy
			gcopy 3, 0, 416, 65 + en * 15, 15
			pos sx + 6, sy + 1
			mes _sleep(2)
			sy -= 20
		}
		else {
			if ( gdata(GDATA_SLEEP) >= 30 ) {
				color 100, 100, 0
				pos sx, sy
				gcopy 3, 0, 416, 65 + en * 15, 15
				pos sx + 6, sy + 1
				mes _sleep(1)
				sy -= 20
			}
			else {
				color 0, 0, 0
				pos sx, sy
				gcopy 3, 0, 416, 65 + en * 15, 15
				pos sx + 6, sy + 1
				mes _sleep
				sy -= 20
			}
		}
	}
	if ( cdata(CDATA_SP, CHARA_PLAYER) < 50 ) {
		if ( cdata(CDATA_SP, CHARA_PLAYER) < 0 ) {
			color 120, 120, 0
			pos sx, sy
			gcopy 3, 0, 416, 65 + en * 15, 15
			pos sx + 6, sy + 1
			mes _confatigue(2)
			sy -= 20
		}
		else {
			if ( cdata(CDATA_SP, CHARA_PLAYER) < 25 ) {
				color 80, 80, 0
				pos sx, sy
				gcopy 3, 0, 416, 65 + en * 15, 15
				pos sx + 6, sy + 1
				mes _confatigue(1)
				sy -= 20
			}
			else {
				color 60, 60, 0
				pos sx, sy
				gcopy 3, 0, 416, 65 + en * 15, 15
				pos sx + 6, sy + 1
				mes _confatigue
				sy -= 20
			}
		}
	}
	if ( cdata(CDATA_BURDEN, CHARA_PLAYER) != 0 ) {
		color 0, cdata(CDATA_BURDEN, CHARA_PLAYER) * 40, cdata(CDATA_BURDEN, CHARA_PLAYER) * 40
		pos sx, sy
		gcopy 3, 0, 416, 65 + en * 15, 15
		pos sx + 6, sy + 1
		mes _burden(cdata(CDATA_BURDEN, CHARA_PLAYER))
		sy -= 20
	}
	color 0
	if ( navi == (-1) ) {
		navi = 0
		gosub *screen_raderRefresh
	}
	if ( navi != 0 ) {
		cdata(CDATA_CAN_REVIVE, CHARA_PLAYER) = 0
		gsel BUFFER_BUF
		pos 0, 200
		picload exedir + "guide\\ie_guide.bmp", 1
		gsel BUFFER_SCREEN
		pos (windoww - 600) / 2 + inf_screenx, windowh - 133 - 5
		gcopy BUFFER_BUF, 0, 200, 600, 51
		font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
		color 50, 50, 50
		valn = "" + navis
		gosub *guide_talk
		talk_conv buffg, 68 - en * 10
		buffg += "\n"
		pos (windoww - 600) / 2 + inf_screenx + 80, windowh - 133
		mes "" + buffg
		if ( cdata(CDATA_CAN_REVIVE, CHARA_PLAYER) == 0 ) {
			cdata(CDATA_CAN_REVIVE, CHARA_PLAYER) = 1
		}
		gsel BUFFER_BUF
		pos 0, 0
		picload exedir + "guide\\guide" + cdata(CDATA_CAN_REVIVE, CHARA_PLAYER) + ".bmp", 1
		gsel BUFFER_SCREEN
		pos 0, windowh - 200
		gcopy BUFFER_BUF, 0, 0, 110, 200
		navi = -1
		navis = ""
	}
	pos inf_clockx, inf_clocky
	gcopy 3, 448, 408, inf_clockw, inf_clockh
	pos inf_clockx + 78, inf_clocky + 8
	gcopy 3, 448, 376, 128, 24
	gmode 4, , , 180
	sx = windoww - 40
	sy = inf_ver - 40
	repeat MAX_BLESSINGS + MAX_HEXES
		if ( cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, CHARA_PLAYER) == 0 ) {
			break
		}
		if ( cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, CHARA_PLAYER) < 49 ) {
			pos sx, sy
			gcopy 1, cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, CHARA_PLAYER) * 32, 1536, 32, 32
		}
		if ( cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, CHARA_PLAYER) >= 49 ) {
			pos sx, sy
			gcopy 1, (cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, CHARA_PLAYER) - 49) * 32, 1568, 32, 32
		}
		color 0, 0, 0
		pos sx + 3, sy + 19
		mes cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF + 2, CHARA_PLAYER)
		color 255, 255, 255
		pos sx + 2, sy + 18
		mes cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF + 2, CHARA_PLAYER)
		sy -= 32
	loop
	color 0
	pos inf_clockarrowx, inf_clockarrowy
	gmode 2, 48, 48
	grotate 3, 0, 288, 0.0174532925199433 * (gdata(GDATA_HOUR) * 30), 48, 48
	pos inf_clockw - 3, inf_clocky + 17 + vfix
	mes "" + gdata(GDATA_YEAR) + "/" + gdata(GDATA_MONTH) + "/" + gdata(GDATA_DAY)
	if ( gdata(GDATA_AREA) == AREA_AMUR_CAGE & gdata(GDATA_LEVEL) >= 20 ) {
		pos inf_clockw + 6, inf_clocky + 35
		bmes lang("赤い雨", "Blood"), 235, 35, 35
	}
	else {
		pos inf_clockw + 6, inf_clocky + 35
		bmes _time(gdata(GDATA_HOUR) / 4) + " " + _weather(gdata(GDATA_WEATHER)), 255, 255, 255
	}
	if ( gdata(GDATA_WIZARD) == 1 ) {
		pos inf_clockw + 6, inf_clocky + 50
		color 0, 0, 0
		bmes "*debug*", 235, 235, 235
		pos inf_clockw + 6, inf_clocky + 65
		color 0, 0, 0
		bmes "loop" + looplev + "、sub" + sublev + " ", 235, 235, 235
	}
	if ( casino == 0 ) {
		pos inf_clockw + 80, inf_clocky + 17
		if ( gdata(GDATA_FLAG_DESTINY_LETTERS) < 7 ) {
			color 0, 0, 0
		}
		else {
			color 0, 80, 180
		}
		locvar_s = ""
		if ( TweakData(TWEAK_GAMEPLAY_DISABLE_STUDY_DAYS, TWEAK_CATEGORY_GAMEPLAY) == FALSE ) {
			locvar_s += _biyori(gdata(GDATA_FLAG_STUDY_BONUS_KIND))
		}
		if ( TweakData(TWEAK_GAMEPLAY_DISABLE_STUDY_DAYS, TWEAK_CATEGORY_GAMEPLAY) == FALSE & TweakData(TWEAK_GAMEPLAY_DISABLE_DESTINY, TWEAK_CATEGORY_GAMEPLAY) == FALSE ) {
			locvar_s += " / "
		}
		if ( TweakData(TWEAK_GAMEPLAY_DISABLE_DESTINY, TWEAK_CATEGORY_GAMEPLAY) == FALSE ) {
			locvar_s += _destiny(gdata(GDATA_FLAG_DESTINY_LETTERS))
		}
		bmes locvar_s, 255, 255, 255
	}
	if ( cdata(CDATA_FRIENDSHIP, CHARA_PLAYER) == (-2) ) {
		pos inf_clockw + 6, inf_clocky + 50
		color 0, 0, 0
		if ( jp ) {
			bmes "<混沌の秩序>", 235, 5, 155
		}
		if ( en ) {
			bmes "<Order of Chaos>", 235, 5, 155
		}
	}
	if ( cdata(CDATA_FRIENDSHIP, CHARA_PLAYER) == (-1) ) {
		pos inf_clockw + 6, inf_clocky + 50
		color 0, 0, 0
		if ( jp ) {
			bmes "<終末の空>", 235, 235, 235
		}
		if ( en ) {
			bmes "<Doomsday sky>", 235, 235, 235
		}
	}
	if ( cdata(CDATA_FRIENDSHIP, CHARA_PLAYER) == 1 ) {
		pos inf_clockw + 6, inf_clocky + 50
		color 0, 0, 0
		if ( jp ) {
			bmes "[電磁獄]", 235, 235, 5
		}
		if ( en ) {
			bmes "[E-Mag Cage]", 235, 235, 5
		}
	}
	if ( cdata(CDATA_FRIENDSHIP, CHARA_PLAYER) == 2 ) {
		pos inf_clockw + 6, inf_clocky + 50
		color 0, 0, 0
		if ( jp ) {
			bmes "[弦葬世界]", 235, 235, 235
		}
		if ( en ) {
			bmes "[Wire World]", 235, 235, 235
		}
	}
	if ( cdata(CDATA_FRIENDSHIP, CHARA_PLAYER) == 3 ) {
		pos inf_clockw + 6, inf_clocky + 50
		color 0, 0, 0
		if ( jp ) {
			bmes "[暴虐の庭園]", 5, 235, 5
		}
		if ( en ) {
			bmes "[Violent Garden]", 5, 235, 5
		}
	}
	if ( cdata(CDATA_FRIENDSHIP, CHARA_PLAYER) == 4 ) {
		pos inf_clockw + 6, inf_clocky + 50
		color 0, 0, 0
		if ( jp ) {
			bmes "[ロックラッシュ]", 235, 135, 5
		}
		if ( en ) {
			bmes "[Rocrush]", 235, 135, 5
		}
	}
	if ( cdata(CDATA_FRIENDSHIP, CHARA_PLAYER) == 5 ) {
		pos inf_clockw + 6, inf_clocky + 50
		color 0, 0, 0
		if ( jp ) {
			bmes "[狂気満ちる劇場]", 235, 5, 235
		}
		if ( en ) {
			bmes "[Crazy Theater]", 235, 5, 235
		}
	}
	if ( gdata(GDATA_FLAG_NEFIA_FEVER_ACTIVE) == 100 ) {
		pos 10, 0
		gcopy 3, 1338, 385, 102, 100
	}
	if ( gdata(GDATA_AREA) == AREA_PET_ARENA ) {
		if ( jp ) {
			pos inf_clockw + 380, inf_clocky + 37
			color 0, 0, 0
			bmes "ESCキーで棄権できる", 235, 235, 235
		}
		else {
			pos inf_clockw + 380, inf_clocky + 37
			color 0, 0, 0
			bmes "You can surrender by pressing the ESC key.", 235, 235, 235
		}
	}
	if ( dbg_subAmurdad ) {
		paraa = tlocx
		parab = tlocy
		parac = gdata(GDATA_FLAG_COLLECTED_WISHES)
		if ( jp ) {
			pos inf_clockw + 380, inf_clocky + 37
			color 0, 0, 0
			bmes "確認" + paraa + "、" + parab + "、" + parac + "。", 235, 235, 235
		}
	}
	if ( gdata(GDATA_AREA) == AREA_AMUR_CAGE ) {
		if ( gdata(GDATA_LEVEL) >= 10 ) {
			if ( soulimit > 0 ) {
				pos inf_clockw + 230, inf_clocky + 37
				color 0, 0, 0
				bmes "Soul-Limit < " + soulimit + " > ", 235, 35, 35
				soulimit--
				if ( soulimit == 0 ) {
					gdata(GDATA_FLAG_SUB_AMURDAD) += 9
					txt lang("ネヘルタード「間に合わなかった…。救済するべき魂はもう助からない…。君だけでも逃げて…」", "Amurdad: " + cnvtalk("We couldn't make it in time... The souls that needed to be saved can no longer be saved.... Escape with your life... I can't lose you either..."))
				}
			}
		}
	}
	if ( gdata(GDATA_FLAG_MAIN) >= 875 & gdata(GDATA_FLAG_MAIN) < 1000 ) {
		pos inf_clockw + 280, inf_clocky + 37
		color 0, 0, 0
		bmes " < " + gdata(GDATA_FLAG_COLLECTED_WISHES) + " > ", 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 1 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 100 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_1)++
		pos inf_clockw + 80, inf_clocky + 50
		color 0, 0, 0
		bmes lang("ゼーム「さぁ、神との戦いを見せてもらおう！私の知的探求心を満たしてくれ！」", "Zeome laughs, " + cnvtalk("Show me the battle of the gods! Satisfy my intellectual curiosity!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 200 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 400 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_1)++
		if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 200 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 300 ) {
			pos inf_clockw + 80, inf_clocky + 50
			color 0, 0, 0
			bmes lang("エリステア「どうか、イルヴァの歴史を守って…！」", "Erystia prays, " + cnvtalk("Please protect the history of Irva!")), 235, 235, 35
		}
		if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 250 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 350 ) {
			pos inf_clockw + 30, inf_clocky + 65
			color 0, 0, 0
			bmes lang("ガベラ「死ぬなよ" + cdatan(CDATAN_NAME, CHARA_PLAYER) + "…もう俺にあんな思いをさせないでくれ」", "Gavela mutters, " + cnvtalk("Don't die, " + cdatan(CDATAN_NAME, CHARA_PLAYER) + "! I don't want any more tragedies...")), 235, 235, 35
		}
		if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 300 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 400 ) {
			pos inf_clockw + 80, inf_clocky + 80
			color 0, 0, 0
			bmes lang("ソピアー「アカシックネットワークに光が流れ込んでいる…？」", "Sophia wonders, " + cnvtalk("Light is flowing into the Akashic Network...?")), 235, 235, 35
		}
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 500 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 700 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_1)++
		if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 500 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 600 ) {
			pos inf_clockw + 80, inf_clocky + 50
			color 0, 0, 0
			bmes lang("ノルン「君の旅は…こんなところで終わっちゃいけない」", "Norne mutters, " + cnvtalk("Your journey... shouldn't end here...")), 235, 235, 35
		}
		if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 550 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 650 ) {
			pos inf_clockw + 30, inf_clocky + 65
			color 0, 0, 0
			bmes lang("ヴェセル「希望はまだあるはずだ」", "Vessel says, " + cnvtalk("There should still be hope.")), 235, 235, 35
		}
		if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 600 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 700 ) {
			pos inf_clockw + 80, inf_clocky + 80
			color 0, 0, 0
			bmes lang("オルフェ「私が決戦因子として至らなかったばかりに、後任がこのような…」", "Orphe apologizes, " + cnvtalk("Because of my failure, my junior is suffering...")), 235, 235, 35
		}
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 850 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 900 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_1)++
		pos inf_clockw + 80, inf_clocky + 50
		color 0, 0, 0
		bmes lang("エヘカトル「死なにゃいで！死なにゃいって約束して！して！」", "Ehekatl shouts, " + cnvtalk("Don't die! Promise you don't die!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 900 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 1400 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_1)++
		if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 900 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 1000 ) {
			pos inf_clockw + 80, inf_clocky + 50
			color 0, 0, 0
			bmes lang("イツパロトル「願いの力が、回廊と来光の牙を通じて集いつつあるのか…？」", "Itzpalt mutters, " + cnvtalk("Is the light of wishes gathering to Origin of Light?")), 235, 235, 35
		}
		if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 950 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 1050 ) {
			pos inf_clockw + 30, inf_clocky + 65
			color 0, 0, 0
			bmes lang("ヤカテクト「よっしゃ！ウチらの残りの神力もまとめて投資したるっ！」", "Yacatect says, " + cnvtalk("OK! OK! We will also invest the remaining power in you!")), 235, 235, 35
		}
		if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 1000 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 1100 ) {
			pos inf_clockw + 80, inf_clocky + 80
			color 0, 0, 0
			bmes lang("オパートス「フハハハハッフハー！！！」", "Opatos laughs, " + cnvtalk("Muwahahahahahaha!")), 235, 235, 35
		}
		if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 1050 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 1150 ) {
			pos inf_clockw + 80, inf_clocky + 50
			color 0, 0, 0
			bmes lang("ルルウィ「戦いなさい、子猫ちゃん。今こそ私の役に立つ時よ」", "Lulwy sneers, " + cnvtalk("Fight, kitty. Now is the time to help me.")), 235, 235, 35
		}
		if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 1100 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 1200 ) {
			pos inf_clockw + 30, inf_clocky + 65
			color 0, 0, 0
			bmes lang("クミロミ「…大丈夫…だよね？」", "Kumiromi worries, " + cnvtalk("Are you...okay..?")), 235, 235, 35
		}
		if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 1150 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 1250 ) {
			pos inf_clockw + 80, inf_clocky + 80
			color 0, 0, 0
			bmes lang("マニ「長引かせるな。お前の身体は既に限界を超えている」", "Mani warns., " + cnvtalk("Hurry. Your body is already over the limit.")), 235, 235, 35
		}
		if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 1200 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 1300 ) {
			pos inf_clockw + 80, inf_clocky + 50
			color 0, 0, 0
			bmes lang("ジュア「バカ！これで死んだりしたら許さないんだから…！」", "Jure cries, " + cnvtalk("Stupid! If you die then I will not forgive you...!")), 235, 235, 35
		}
		if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 1250 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 1350 ) {
			pos inf_clockw + 30, inf_clocky + 65
			color 0, 0, 0
			bmes lang("ミクラネシス「「「アカシックネットワークがこのように動作するとは想定外だね…」」」", "Mikraanesis says, " + cnvtalk("Akashic Network is unexpected to work this way.")), 235, 235, 35
		}
		if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 1300 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 1400 ) {
			pos inf_clockw + 80, inf_clocky + 80
			color 0, 0, 0
			bmes lang("テスカトリポカ「我の魂もここにある。共に戦うぞ、" + cdatan(CDATAN_NAME, CHARA_PLAYER) + "！」", "Tezcatlipoca cheers, " + cnvtalk("My soul is also here. I will fight together!")), 235, 235, 35
		}
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 1500 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 1650 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_1)++
		if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 1500 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 1600 ) {
			pos inf_clockw + 80, inf_clocky + 50
			color 0, 0, 0
			bmes lang("ラーネイレ「いけない。このままでは…手遅れになってしまうわ…！」", "Larneire cries, " + cnvtalk("No...before it is too late...!")), 235, 235, 35
		}
		if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) >= 1550 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_1) < 1650 ) {
			pos inf_clockw + 30, inf_clocky + 65
			color 0, 0, 0
			bmes lang("ロミアス「まだまだ、これからだろう！？」", "Lomias encourages, " + cnvtalk("It hasn't even started yet... hasn't it!?")), 235, 235, 35
		}
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 100 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 190 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("シナア「この猫蛇野郎が生み出す不幸を、アタシは認めないのニャ！」", "Sinaha growls, " + cnvtalk("I don't approve of the misery this cat-snake creates meow!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 200 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 290 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ラシエル「失敗したらお仕置きよ」", "Arasiel laughs, " + cnvtalk("I will punish you if you fail!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 300 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 390 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ネヘルタード「今こそ、星の光の祝福を…」", "Amurdad prays, " + cnvtalk("May you have the blessing of the Starlight...")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 400 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 490 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ウリカグアル「フハハ！根性見せな！」", "Urcaguary laughs, " + cnvtalk("Muwahaha! Show your guts!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 500 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 590 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("カラヴィカ「イェーイ！愛してるぜベイベー！」", "Karavika shouts, " + cnvtalk("Yeahhhhh! I love you, baby!!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 600 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 690 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ガルジエム「貴君の戦いは勲章ものだ」", "Garziem praises, " + cnvtalk("I want to give your battle a medal!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 700 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 790 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ロヴィト「君は大勢の想いに守られているのですね…」", "Rovid nods, " + cnvtalk("You are protected by many wishes...")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 2000 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2090 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ミシェス「冒険者さん、お願いだから、負けないで」", "Miches prays, " + cnvtalk("I beg of you adventurer, don't lose...")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 2100 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2190 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("シーナ「お客さま、大丈夫ですか？！」", "Shena panics, " + cnvtalk("Ahhh! Are you alright sir?")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 2200 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2290 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ロイター「おい。この脳裏に流れてくる悪夢を早く終わらせろ」", "Loyter orders " + cnvtalk("Hey you! End the nightmare that runs through my brain early!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 2300 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2390 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("パエル「悪い神様なんていらない！」", "Pael cries, " + cnvtalk("I don't need a bad god!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 2400 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2490 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ラファエロ「負けるんじゃないぞ。お前さんから貰った嫁が悲しむからな」", "Raphael worries, " + cnvtalk("The wife I got from you seems to cry...")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 2500 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2590 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("リリアン「今、ポピーといっしょに冒険者さんを応援しているの！」", "Rilian encourages, " + cnvtalk("I support adventurer with Poppy!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 2600 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2690 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("タム「こんな猫顔の怪物と戦ってくれていたんですね…」", "Tam moans, " + cnvtalk("You were fighting a cat-faced monster like this!?")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 2700 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2790 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ギルバート「おお、勇者よ！諦めないでくれ！フハハハア！」", "Gilbert laughs, " + cnvtalk("Ah, the bravest of the brave! Don't give up! Muwahaha!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 2800 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2890 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("アインク「私にはできないことも、あなたならきっとできるはずです！」", "Ainc encourages, " + cnvtalk("You can do things I can't do!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 2900 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2990 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("アーノルド「どうか、この死地を切り抜けて生還してください！」", "Arnord wishes, " + cnvtalk("Please survive this battlefield!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 3000 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3090 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ミーア「にゃんこ溢れるこの世界を〜守ってほしいでありますぅ！」", "Mia prays, " + cnvtalk("Mia want nyou to protect this world full of cats!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 3100 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3190 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("レントン「君には生きる価値がある…私と違って」", "Renton mutters, " + cnvtalk("You are worth living...unlike me...")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 3200 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3290 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("マークス「フッ。泥棒に応援される気分はどうです？」", "Marks laughs, " + cnvtalk("Heh, how do you feel about being supported by a thief?")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 3300 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3390 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ノエル「そいつに勝ったらカミゴロシくんって呼んであげるわ」", "Noel laughs, " + cnvtalk("If you win, I'll call you god-killer!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 3400 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3490 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("イコール「おうおう、諦めたらそこで実験終了じゃぞ」", "Icolle yells, " + cnvtalk("Oh oh oh! If you give up, the experiment is over!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 3500 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3590 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("バルザック「世界規模のゴミ野郎を片づけちまいな！」", "Balzak shouts, " + cnvtalk("Clean up world-class trash!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 3600 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3690 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("レヴラス「あなたなら勝ってくれると信じていますよ」", "Revlus says, " + cnvtalk("I believe you will win!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 3700 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3790 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("フレイ「神だろうと鍛えれば打倒できる。そうだろう？」", "Fray laughs, " + cnvtalk("You can kill even god if you train!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 3800 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3890 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("シン「生きろ。命を奪われるくらいなら先に奪え」", "Sin orders, " + cnvtalk("Survive! Don't lose your life...")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 4200 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 4290 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("コネリー「おぬしはわしらの誇りだ！」", "Conery encourages, " + cnvtalk("You are our pride!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 4300 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 4390 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("謎の科学者「お願い。あの子達には希望が必要なの」", "Strange scientist says, " + cnvtalk("Little sisters need hope...")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 4500 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 4590 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("犬のおまわりさん「この世界のためにも、どうかよろしくお願いなのです！」", "Dog cop asks, " + cnvtalk("Good luck for this world!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 4600 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 4690 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ミーリス「もはや軍では対処できない…！貴方に託します」", "Milis exclaims, " + cnvtalk("The military is finding themselves in over their heads!! I leave this to you.")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 4700 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 4790 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("オービル「ちょっ、あんたならなんとかできるだろ？そう言ってくれ！」", "Orville asks, " + cnvtalk("Hey, you can handle this, can't you? Tell me!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 4800 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 4890 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ザナード「よう。俺様はお前を信じてるぜ！」", "Zernard laughs, " + cnvtalk("Hey. I believe in you, man!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 4900 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 4990 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("豹頭の戦士「俺などの力が何かになるものならば、いくらでも力になってやりたいと思う」", "The leopard warrior says, " + cnvtalk("If I were able to, I would help in any way I could.")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 5000 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 5090 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("メファン「すまない！報酬は出せないが頑張ってほしい！」", "Mefan apologizes, " + cnvtalk("Apologies! I can't pay you back for this, but do your best!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 5100 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 5190 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ルーネ「ご主人様、メイドの皆で勝利を願っています！」", "Lune cheers, " + cnvtalk("Master, all the maids wish you victory!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 5200 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 5290 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("たけのこ「世界全土が焼き払われちゃかなわないからな！」", "Bamboo Sprout laughs, " + cnvtalk("We can't afford to have the whole world burn to the ground!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 5300 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 5390 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("カイル「父さま、冒険者さんの無事を一緒に祈ろう」", "Kyle prays, " + cnvtalk("Father, let us pray together for the adventurer's safety.")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 5400 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 5490 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("姉「お姉ちゃんを泣かせないでね？」", "Older sister requests, " + cnvtalk("Don't make my big sister cry, okay?")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 6400 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 6490 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ライエ「君が、平穏な生活を取り戻せますように…」", "Eila prays, " + cnvtalk("May you find peace in your life.")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 6600 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 6690 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("シラハ「" + _onii(cdata(CDATA_SEX, CHARA_PLAYER)) + "さん、負けないで！」", "Siraha cries, " + cnvtalk("Don't lose, " + name(CHARA_PLAYER) + "!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 7100 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 7190 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ナプラス「私、あなたの持つ可能性を信じてるよ」", "Naplus says, " + cnvtalk("I have faith in your potential.")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 7300 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 7390 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ナズナ「もっと鍛えておくべきだったな」", "Nazuna remarks, " + cnvtalk("I should have trained you even harder.")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 7600 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 7690 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("アリス「死中ニ活アリッス」", "Alice says, " + cnvtalk("There is life in death, Alice.")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 7700 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 7790 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ネイン「よく分からないけど…負けるんじゃないわよ！」", "Nein cheers, " + cnvtalk("I have no idea what's going on, but... you'd better not lose!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 7900 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 7990 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ガージンド「この星にこんな怪物が潜んでいたとは…」", "Jin remarks, " + cnvtalk("I had no idea such a monster was lurking on this planet...")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 8000 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 8090 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("イルマ「どんな力も、どんな技術も、全ては使う者次第なんじゃ！」", "Irma laughs, " + cnvtalk("It doesn't matter how much power or skill you have - it's all about how you use it!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 8100 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 8190 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("スピファル「なんだ、半竜じゃなくて半蛇か…あなたに任せるね」", "Spipha orders, " + cnvtalk("So it's half snake instead of half dragon... I leave this to you.")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 8400 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 8490 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ミヅキ「わしは…おぬしに勝ってほしいっ！」", "Abyss Princess cheers, " + cnvtalk("I... want you to win!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 9100 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 9190 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("エユル「横でレナイも応援しているよ」", "Regulus says, " + cnvtalk("Renai is cheering for you at my side.")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 9200 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 9290 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ライゼル「…！」", "Raizel gasps, " + cnvtalk("!!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 9300 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 9390 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("シュライダ「忘れるな、生きて帰るまでが仕事だ」", "Shuraida states, " + cnvtalk("Don't forget - it's your job to make it out of this alive.")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 9400 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 9490 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("マルカ「そいつが何を企んでるのか知らないけど、やっちゃえ！」", "Marka cheers, " + cnvtalk("I don't know what that guy is up to, but get him good!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 10500 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 10590 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("シズル「いひひ…少しばかり介入させてもらいますのじゃ」", "Ssil snickers, " + cnvtalk("Heehee... Looks like I'll have to intervene for a bit.")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 10900 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 10990 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ベルファート「君はクロやんと再会させてくれた恩人だ！無事を祈っている！」", "Belphat prays, " + cnvtalk("You're the one who reunited me with Kuro-chan! I hope you'll be okay!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 11500 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 11590 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("ランカータ「母上…あの人をお守りください…！」", "Lankata pleads, " + cnvtalk("Mother... please protect this adventurer!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 12600 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 12690 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("カラ太「ゼミでやったところを思い出して！」", "Karata pleads, " + cnvtalk("Remember all of your training back in the seminars!")), 235, 235, 35
	}
	if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) >= 13500 & gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 13590 ) {
		gdata(GDATA_FLAG_CUT_IN_MESSAGE_2)++
		pos inf_clockw + 80, inf_clocky + 95
		color 0, 0, 0
		bmes lang("カルラ「Etherwindの因果が、あなたの力になるわ」", "Karura reassures, " + cnvtalk("The fate of the Etherwind will give you strength.")), 235, 235, 35
 	}

	if ( TweakData(TWEAK_GAMEPLAY_CG_DISABLE_CURTAIN_CALL, TWEAK_CATEGORY_GAMEPLAY) == FALSE ) {
		if ( gdata(GDATA_FLAG_CURTAIN_CALL) > 9999 * 2 / 3 & gdata(GDATA_FLAG_CURTAIN_CALL) <= 9999 ) {
			if ( jp ) {
				pos inf_clockw + 380, inf_clocky + 17
				color 0, 0, 0
				bmes "早くこの場を離れたほうがいい気がする…", 235, 35, 35
			}
			if ( en ) {
				pos inf_clockw + 380, inf_clocky + 17
				color 0, 0, 0
				bmes "You had better leave this place as soon as possible.", 235, 35, 35
			}
		}
		if ( gdata(GDATA_FLAG_CURTAIN_CALL) < 0 ) {
			if ( jp ) {
				pos inf_clockw + 380, inf_clocky + 17
				color 0, 0, 0
				bmes "*カーテンコール*", 235, 35, 35
			}
			if ( en ) {
				pos inf_clockw + 380, inf_clocky + 17
				color 0, 0, 0
				bmes " *Curtain Call* ", 235, 35, 35
			}
		}
	}

	ap3 = 0
	repeat 15

		/********** ORIGINAL - BEGINNING **********

		ap = gdata(STARTING_GDATA_DISPLAY_SKILL + cnt) \ 10000
		if ( ap == 0 ) {
			continue
		}
		ap2 = gdata(STARTING_GDATA_DISPLAY_SKILL + cnt) / 10000
		if ( cdata(CDATA_EXIST, ap2) != CHAR_STATE_ALIVE ) {
			if ( ap2 != 0 ) {
				gdata(STARTING_GDATA_DISPLAY_SKILL + cnt) = 0
			}
			continue
		}
		pos 16, inf_clocky + 105 + ap3 * 16
		color 0, 0, 0
		bmes "" + strmid(skillname(ap), 0, 6), 255, 255, 255
		skilltmps = "" + sdata(STARTING_SKILL_SPACT + ap, ap2) / 1000
		pos 66, inf_clocky + 105 + ap3 * 16
		color 0, 0, 0
		bmes "" + sorg(ap, ap2) + "." + strmid(skilltmps, -1, 3), 255, 255, 255
		ap3++

		 ********** ORIGINAL - ENDING **********/

		/********** ANNA CUSTOM - BEGINNING **********/ // Filter Skill Tracker By Potential

		ap = gdata(STARTING_GDATA_DISPLAY_SKILL + cnt) \ 10000
		if ( ap == 0 ) {
			continue
		}
		ap2 = gdata(STARTING_GDATA_DISPLAY_SKILL + cnt) / 10000
		if ( TweakData(TWEAK_UI_FILTER_SKILL_TRACKER_BY_POTENTIAL, TWEAK_CATEGORY_UI) != 0 & sgrowth(ap, ap2) > TweakData(TWEAK_UI_FILTER_SKILL_TRACKER_BY_POTENTIAL, TWEAK_CATEGORY_UI) ) {
			continue
		}
		if ( cdata(CDATA_EXIST, ap2) != CHAR_STATE_ALIVE ) {
			if ( ap2 != 0 ) {
				gdata(STARTING_GDATA_DISPLAY_SKILL + cnt) = 0
			}
			continue
		}
		pos 16, inf_clocky + 105 + ap3 * 16
		color 0, 0, 0
		bmes "" + strmid(skillname(ap), 0, 6), 255, 255, 255
		skilltmps = "" + sdata(STARTING_SKILL_SPACT + ap, ap2) / 1000
		pos 66, inf_clocky + 105 + ap3 * 16
		color 0, 0, 0
		TrackerString = "" + sorg(ap, ap2) + "." + strmid(skilltmps, -1, 3)
		if ( TweakData(TWEAK_UI_POTENTIALS_IN_SKILL_TRACKER, TWEAK_CATEGORY_UI) == 1 ) { // Add Potentials To Skill Tracker
			TrackerString = TrackerString + " (" + sgrowth(ap, ap2) + "%)"
		}
		if ( TweakData(TWEAK_UI_SHOW_SPELLSTOCK_IN_SKILL_TRACKER, TWEAK_CATEGORY_UI) == 1 & ap >= STARTING_SKILL_SPELL ) { // Show Spell Stock In Tracker
			TrackerString = TrackerString + " (" + spell(ap - STARTING_SKILL_SPELL) + ")"
		}
		bmes TrackerString, 255, 255, 255
		ap3++

		/********** ANNA CUSTOM - ENDING **********/

	loop
	if ( evochat != 0 ) {
		gsel selbufh
		pos 0, 0
		picload exedir + "graphic\\bg33.bmp", 1
		pos 0, 0
		gzoom windoww, windowh - 88, selbufh, 0, 0, 640, 480
		gsel 0
	}

	/********** RUIN0X11 CUSTOM - BEGINNING **********/

	if ( cfg_dmgpopups == 1 ) {
		gosub *DamagePopupsDraw
	}

    if ( cfg_showfps == 1 ) {
    	color 0, 0, 0
    	pos windoww - 16, 0
    	bmes "" + cfps@d3m, 255, 255, 255
    }

	/********** RUIN0X11 CUSTOM - ENDING **********/

	return

*autoTurn_pic
	gsel 9
	pos 0, 0
	if ( cdata(CDATA_ROW_ACT, CHARA_PLAYER) == ACTION_DIG ) {
		picload exedir + "\\graphic\\anime1.bmp"
	}
	if ( cdata(CDATA_ROW_ACT, CHARA_PLAYER) == ACTION_FISH ) {
		if ( rowactre ) {
			picload exedir + "\\graphic\\anime2.bmp"
		}
	}
	if ( cdata(CDATA_ROW_ACT, CHARA_PLAYER) == ACTION_PLANT ) {
		picload exedir + "\\graphic\\anime3.bmp"
	}
	if ( cdata(CDATA_ROW_ACT, CHARA_PLAYER) == ACTION_SEARCH ) {
		picload exedir + "\\graphic\\anime4.bmp"
	}
	gsel 0
	return

*screen_drawAutoTurn
	if ( racount == 0 ) {
		gosub *autoTurn_pic
	}
	if ( msgtemp != "" | (cdata(CDATA_ROW_ACT, CHARA_PLAYER) == ACTION_FISH & rowactre == 0 & fishanime == 0) ) {
		gosub *los_draw
		msgtemp = ""
	}
	gosub *screen_drawStatus
	if ( cdata(CDATA_ROW_ACT, CHARA_PLAYER) == ACTION_FISH ) {
		if ( rowactre == 0 ) {
			gosub *fishing_draw
		}
	}
	sx = windoww - 156
	sy = inf_ver - 30
	w = 148
	h = 25
	window2 sx, sy, w, h, 0, 5
	font lang(cfg_font1, cfg_font2), 13 - en * 2, 1
	pos sx + 43, sy + 6
	color 0, 0, 0
	bmes "AUTO TURN", 235, 235, 235
	pos sx + 18, sy + 12
	gmode 2, 24, 24
	grotate 3, 72, 392, 0.0174532925199433 * (gdata(GDATA_MIN) / 4 \ 2 * 90)
	if ( cdata(CDATA_ROW_ACT, CHARA_PLAYER) == ACTION_SEARCH | cdata(CDATA_ROW_ACT, CHARA_PLAYER) == ACTION_DIG | cdata(CDATA_ROW_ACT, CHARA_PLAYER) == ACTION_PLANT | (cdata(CDATA_ROW_ACT, CHARA_PLAYER) == ACTION_FISH & rowactre != 0) ) {
		window2 sx, sy - 104, 148, 101, 0, 5
		if ( racount \ 15 == 0 ) {
			repeat 10
				redraw 0
				gmode 0
				pos sx + 2, sy - 102
				if ( cdata(CDATA_ROW_ACT, CHARA_PLAYER) == ACTION_DIG ) {
					if ( cnt == 2 ) {
						snd SOUNDLIST_DIG1
					}
					gcopy 9, cnt / 2 \ 5 * 144, 0, 144, 96
					await 40
				}
				if ( cdata(CDATA_ROW_ACT, CHARA_PLAYER) == ACTION_FISH ) {
					if ( racount == 0 ) {
						if ( cnt == 0 ) {
							snd SOUNDLIST_WATER
						}
					}
					gcopy 9, cnt / 3 \ 3 * 144, 0, 144, 96
					await 50
				}
				if ( cdata(CDATA_ROW_ACT, CHARA_PLAYER) == ACTION_PLANT ) {
					if ( cnt == 4 ) {
						snd SOUNDLIST_BUSH1
					}
					gcopy 9, cnt / 2 \ 3 * 144, 0, 144, 96
					await 55
				}
				if ( cdata(CDATA_ROW_ACT, CHARA_PLAYER) == ACTION_SEARCH ) {
					if ( cnt == 2 ) {
						snd SOUNDLIST_DIG2
					}
					gcopy 9, cnt / 2 \ 4 * 144, 0, 144, 96
					await 60
				}
				redraw 1
			loop
		}
		else {
			gcopy 9, 0, 0, 144, 96
		}
		racount++
		redraw 1
	}
	if ( firstautoturn == 1 ) {
		redraw 1
		firstautoturn = 0
	}
	gmode 2
	return

*screen_drawMsg2
	gmode 0
	font lang(cfg_font1, cfg_font2), 16 - en * 2, 0
	color 245, 245, 245
	msgx = 20
	msgy = 30
	sx = 760
	sx = strlen(s) * 8 + 45
	if ( sx > 760 ) {
		sx = 760
	}
	ap = sx / 128 + 1
	repeat ap
		if ( cnt == sx / 128 ) {
			ap = sx \ 128
		}
		else {
			ap = 128
		}
		pos cnt * 128 + msgx, msgy
		gcopy 3, 672, 477, ap, 3
		pos cnt * 128 + msgx, msgy + 2
		gcopy 3, 672, 480, ap, 22
		pos cnt * 128 + msgx, msgy + 22
		gcopy 3, 672, 477, ap, 2
	loop
	pos msgx + 18, msgy + 4
	mes s
	gmode 2
	return

*anime
	if ( mode == MODELIST_TXT_ADV ) {
		return
	}
	if ( cfg_animewait == 0 ) {
		return
	}
	if ( animeid != ANIMATION_RAGNA & animeid != ANIMATION_STARS & animeid != ANIMATION_FIREWORK & animeid != ANIMATION_GAMEWIN3 & animeid != ANIMATION_EVOCHAT_GENTLY ) {
		gosub *screen_draw
	}
	redraw 0
	gmode 2, inf_tiles, inf_tiles
	anicol = 0
	anisound = 0
	if ( animeid < ANIMATION_TAIL | animeid == ANIMATION_PARTICLE_CANNON ) {
		anicol = eleinfo(ele, 0)
		anisound = eleinfo(ele, 1)
	}
	_switch_val = animeid
	if ( _switch_val == ANIMATION_FIZZLE | _switch_sw ) {
		_switch_sw = 0
		if ( synccheck(cc, -1) == 0 ) {
			goto *anime_SWEND1
		}

		preparePicItem 10, anicol

		anidx = (cdata(CDATA_X, cc) - scx) * inf_tiles + inf_screenx
		anidy = (cdata(CDATA_Y, cc) - scy) * inf_tiles + inf_screeny
		gsel 4
		gmode 0
		pos 0, 0
		gcopy 0, anidx - inf_tiles / 2, anidy - inf_tiles / 2, inf_tiles * 2, inf_tiles * 2
		gmode 2
		gsel 0
		snd SOUNDLIST_FIZZLE
		repeat 12
			redraw 0
			pos anidx - inf_tiles / 2, anidy - inf_tiles / 2
			gcopy 4, 0, 0, inf_tiles * 2, inf_tiles * 2
			pos anidx + inf_tiles / 2, anidy + 16
			grotate 1, 0, 960, 5 * cnt, cnt + 40, cnt + 40
			redraw 1
			await cfg_animewait
		loop
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_CURSE | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_JALDABAOTH | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_HEAL | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_OFFER | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_HEAL_FAST | _switch_sw ) {
		_switch_sw = 0
		if ( synccheck(tc, -1) == 0 ) {
			goto *anime_SWEND1
		}
		if ( animeid == ANIMATION_CURSE ) {
			gsel 1
			color 0
			boxf 0, 960, chipi(CHIPI_WIDTH, xy2pic(8, 0)), chipi(CHIPI_HEIGHT, xy2pic(8, 0)) + 960
			pos 0, 960
			gcopy 1, chipi(CHIPI_X, xy2pic(8, 0)), chipi(CHIPI_Y, xy2pic(8, 0)), chipi(CHIPI_WIDTH, xy2pic(8, 0)), chipi(CHIPI_HEIGHT, xy2pic(8, 0))
			gfini chipi(CHIPI_WIDTH, xy2pic(8, 0)), chipi(CHIPI_HEIGHT, xy2pic(8, 0))
			gfdec2 c_col(0, anicol), c_col(1, anicol), c_col(2, anicol)
			gsel selcur
			snd SOUNDLIST_CURSE1
		}
		if ( animeid == ANIMATION_HEAL | animeid == ANIMATION_HEAL_FAST ) {
			gsel 1
			color 0
			boxf 0, 960, chipi(CHIPI_WIDTH, xy2pic(7, 0)), chipi(CHIPI_HEIGHT, xy2pic(7, 0)) + 960
			pos 0, 960
			gcopy 1, chipi(CHIPI_X, xy2pic(7, 0)), chipi(CHIPI_Y, xy2pic(7, 0)), chipi(CHIPI_WIDTH, xy2pic(7, 0)), chipi(CHIPI_HEIGHT, xy2pic(7, 0))
			gfini chipi(CHIPI_WIDTH, xy2pic(7, 0)), chipi(CHIPI_HEIGHT, xy2pic(7, 0))
			gfdec2 c_col(0, anicol), c_col(1, anicol), c_col(2, anicol)
			gsel selcur
			snd SOUNDLIST_HEAL1
		}
		if ( animeid == ANIMATION_OFFER ) {
			gsel 1
			color 0
			boxf 0, 960, chipi(CHIPI_WIDTH, xy2pic(9, 0)), chipi(CHIPI_HEIGHT, xy2pic(9, 0)) + 960
			pos 0, 960
			gcopy 1, chipi(CHIPI_X, xy2pic(9, 0)), chipi(CHIPI_Y, xy2pic(9, 0)), chipi(CHIPI_WIDTH, xy2pic(9, 0)), chipi(CHIPI_HEIGHT, xy2pic(9, 0))
			gfini chipi(CHIPI_WIDTH, xy2pic(9, 0)), chipi(CHIPI_HEIGHT, xy2pic(9, 0))
			gfdec2 c_col(0, anicol), c_col(1, anicol), c_col(2, anicol)
			gsel selcur
		}
		ax = (cdata(CDATA_X, tc) - scx) * inf_tiles + inf_screenx
		ay = (cdata(CDATA_Y, tc) - scy) * inf_tiles + inf_screeny
		gsel 4
		gmode 0
		pos 0, 0
		gcopy 0, ax - inf_tiles / 2, ay - inf_tiles / 2, inf_tiles * 2, inf_tiles * 2
		gmode 2
		gsel 0
		repeat 15
			ax2(cnt) = rnd(inf_tiles)
			ay2(cnt) = rnd(inf_tiles) - 8
			ap(cnt) = (rnd(4) + 1) * (-1)
			if ( animeid == ANIMATION_CURSE | animeid == ANIMATION_JALDABAOTH ) {
				ap(cnt) *= -1
			}
		loop
		repeat 10
			if ( animeid == ANIMATION_HEAL_FAST ) {
				await 1
			}
			else {
				await cfg_animewait
			}
			acnt2 = cnt * 2
			redraw 0
			pos ax - inf_tiles / 2, ay - inf_tiles / 2
			gcopy 4, 0, 0, inf_tiles * 2, inf_tiles * 2
			repeat 15
				pos ax + ax2(cnt), ay + ay2(cnt) + acnt2 / ap(cnt)
				grotate 1, 0, 960, acnt2 * ap(cnt), inf_tiles - acnt2 * 2, inf_tiles - acnt2 * 2
			loop
			redraw 1
		loop
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_BREATH | _switch_sw ) {
		_switch_sw = 0

		preparePicItem 5, anicol

		snd SOUNDLIST_BREATH1
		gsel 7
		picload exedir + "graphic\\anime7.bmp"
		pos 0, 0
		gfini 480, 48
		gfdec2 c_col(0, anicol), c_col(1, anicol), c_col(2, anicol)
		gsel 4
		pos 0, 0
		gmode 0
		gcopy 0, 0, 0, windoww, windowh
		gsel 0
		repeat 6
			cnt2 = cnt
			redraw 0
			pos 0, 0
			gmode 0
			gcopy 4, 0, 0, windoww, windowh
			repeat maxbreath
				anidx = breathlist(0, cnt)
				anidy = breathlist(1, cnt)
				if ( fov_los(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), anidx, anidy) == 0 ) {
					continue
				}
				if ( (anidx - scx) * inf_tiles + inf_screenx + inf_tiles / 2 < windoww ) {
					if ( (anidy - scy) * inf_tiles + inf_screeny + 16 < inf_screenh * inf_tiles + inf_screeny - inf_tiles / 2 ) {
						pos (anidx - scx) * inf_tiles + inf_screenx + inf_tiles / 2, (anidy - scy) * inf_tiles + inf_screeny + 16
						gmode 2, inf_tiles, inf_tiles
						grotate 7, cnt2 * 48, 0, atan(tlocx - cdata(CDATA_X, cc), cdata(CDATA_Y, cc) - tlocy), inf_tiles, inf_tiles
					}
				}
			loop
			await cfg_animewait
			redraw 1
		loop
		if ( anisound ) {
			snd anisound, 0, 1
		}
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_SAND_CANNON | _switch_sw ) {
		_switch_sw = 0
		anicol = 0
		gsel BUFFER_ITEM
		color 0
		boxf 0, 960, chipi(CHIPI_WIDTH, xy2pic(5, 0)), chipi(CHIPI_HEIGHT, xy2pic(5, 0)) + 960
		if ( 5 == 528 ) {
			gmode 2
			pos 0, 960
			gcopy BUFFER_ITEM, 0, 768, inf_tiles, inf_tiles
			pos 0, 1008
			gzoom 22, 20, 5, chipc(CHIPC_X, anicol) + 8, chipc(CHIPC_Y, anicol) + 4 + (chipc(CHIPC_HEIGHT, anicol) > inf_tiles) * 8, chipc(CHIPC_WIDTH, anicol) - 16, chipc(CHIPC_HEIGHT, anicol) - 8 - (chipc(CHIPC_HEIGHT, anicol) > inf_tiles) * 10, 1
			pos 6, 974
			gcopy BUFFER_ITEM, 0, 1008, 22, 20
			gsel selcur
		}
		else {
			if ( 5 == 1119 ) {
				pos 0, 1055 - chipc(CHIPC_HEIGHT, anicol)
				gcopy BUFFER_CHR, chipc(CHIPC_X, anicol), chipc(CHIPC_Y, anicol), chipc(CHIPC_WIDTH, anicol), chipc(CHIPC_HEIGHT, anicol)
				gmode 2
				gsel selcur
			}
			else {
				if ( 5 == 1206 ) {
					pos 0, 1055 - chipc(CHIPC_HEIGHT, anicol)
					gcopy BUFFER_CHR, chipc(CHIPC_X, anicol), chipc(CHIPC_Y, anicol), chipc(CHIPC_WIDTH, anicol), chipc(CHIPC_HEIGHT, anicol)
					gfini chipi(CHIPI_WIDTH, xy2pic(5, 0)), chipi(CHIPI_HEIGHT, xy2pic(5, 0))
					gfdec2 0, 0, 255
					gsel selcur
				}
				else {
					if ( 5 == 531 ) {
						pos 8, 1058 - chipc(CHIPC_HEIGHT, anicol)
						gcopy BUFFER_CHR, chipc(CHIPC_X, anicol) + 8, chipc(CHIPC_Y, anicol) + 2, chipc(CHIPC_WIDTH, anicol) - 16, chipc(CHIPC_HEIGHT, anicol) - 8
						gmode 4, , , 150
						color 0, 0, 0
						pos 0, 960 + (chipc(CHIPC_HEIGHT, anicol) == inf_tiles) * 48
						gcopy BUFFER_ITEM, 144, 768 + (chipc(CHIPC_HEIGHT, anicol) > inf_tiles) * 48, inf_tiles, chipc(CHIPC_HEIGHT, anicol) + (chipc(CHIPC_HEIGHT, anicol) > inf_tiles) * 48 * 0
						gmode 2
						gsel selcur
					}
					else {
						pos 0, 960
						gcopy BUFFER_ITEM, chipi(CHIPI_X, xy2pic(5, 0)), chipi(CHIPI_Y, xy2pic(5, 0)), chipi(CHIPI_WIDTH, xy2pic(5, 0)), chipi(CHIPI_HEIGHT, xy2pic(5, 0))
						gfini chipi(CHIPI_WIDTH, xy2pic(5, 0)), chipi(CHIPI_HEIGHT, xy2pic(5, 0))
						gfdec2 c_col(0, anicol), c_col(1, anicol), c_col(2, anicol)
						gsel selcur
					}
				}
			}
		}
		gsel BUFFER_PIC
		picload exedir + "graphic\\anime86.bmp"
		pos 0, 0
		gfini 480, 48
		gfdec2 c_col(0, anicol), c_col(1, anicol), c_col(2, anicol)
		gsel BUFFER_BUF
		pos 0, 0
		gmode 0
		gcopy BUFFER_SCREEN, 0, 0, windoww, windowh
		gsel BUFFER_SCREEN
		repeat 6
			cnt2 = cnt
			redraw 0
			pos 0, 0
			gmode 0
			gcopy BUFFER_BUF, 0, 0, windoww, windowh
			repeat maxbreath
				anidx = breathlist(0, cnt)
				anidy = breathlist(1, cnt)
				if ( fov_los(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), anidx, anidy) == 0 ) {
					continue
				}
				if ( (anidx - scx) * inf_tiles + inf_screenx + inf_tiles / 2 < windoww ) {
					if ( (anidy - scy) * inf_tiles + inf_screeny + 16 < inf_screenh * inf_tiles + inf_screeny - inf_tiles / 2 ) {
						pos (anidx - scx) * inf_tiles + inf_screenx + inf_tiles / 2, (anidy - scy) * inf_tiles + inf_screeny + 16
						gmode 2, inf_tiles, inf_tiles
						grotate BUFFER_PIC, cnt2 * 48, 0, atan(tlocx - cdata(CDATA_X, cc), cdata(CDATA_Y, cc) - tlocy), inf_tiles, inf_tiles
					}
				}
			loop
			await cfg_animewait
			redraw 1
		loop
		goto *anime_SWEND1
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_MP_BREATH | _switch_sw ) {
		_switch_sw = 0

		preparePicItem 5, anicol

		snd SOUNDLIST_BREATH1
		if ( ele != SKILL_NONE ) {
			gsel 7
			picload exedir + "graphic\\anime51.bmp"
		}
		if ( ele == SKILL_NONE ) {
			gsel 7
			picload exedir + "graphic\\anime34.bmp"
		}
		pos 0, 0
		gfini 576, 96
		gfdec2 c_col(0, anicol), c_col(1, anicol), c_col(2, anicol)
		gsel 4
		pos 0, 0
		gmode 0
		gcopy 0, 0, 0, windoww, windowh
		gsel 0
		repeat 6
			cnt2 = cnt
			redraw 0
			pos 0, 0
			gmode 0
			gcopy 4, 0, 0, windoww, windowh
			repeat maxbreath
				anidx = breathlist(0, cnt)
				anidy = breathlist(1, cnt)
				if ( (anidx - scx) * inf_tiles + inf_screenx + inf_tiles / 2 < windoww ) {
					if ( (anidy - scy) * inf_tiles + inf_screeny + 16 < inf_screenh * inf_tiles + inf_screeny - inf_tiles / 2 ) {
						pos (anidx - scx) * inf_tiles + inf_screenx + inf_tiles / 2, (anidy - scy) * inf_tiles + inf_screeny + 16
						gmode 2, 96, 96, 250 - cnt2 * cnt2 * 2
						grotate 7, cnt2 * 96, 0, 0, 96, 96
					}
				}
			loop
			await cfg_animewait
			redraw 1
		loop
		if ( anisound ) {
			snd anisound, 0, 1
		}
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_BALL_NUKE | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_BALL | _switch_sw ) {
		_switch_sw = 0
		snd SOUNDLIST_BALL1
		if ( animeid == ANIMATION_BALL ) {
			if ( ele == SKILL_NONE ) {
				if ( efid == SKILL_SPELL_BUBBLE_STORM ) {
					anicol = 21
				}
			}
		}
		gsel 7
		picload exedir + "graphic\\anime5.bmp"
		pos 0, 96
		gfini 480, 48
		gfdec2 c_col(0, anicol), c_col(1, anicol), c_col(2, anicol)
		aniw = 360
		anih = 360
		anidx = (anix - scx) * inf_tiles + inf_screenx + 24
		anidy = (aniy - scy) * inf_tiles + inf_screeny + 24
		gsel 4
		gmode 0
		pos 0, 0
		gcopy 0, 0, 0, windoww, windowh
		gmode 2
		gsel 0
		color 0, 0, 0
		repeat 10
			anip = cnt
			repeat aniref * 2 + 1
				anidy = aniy - aniref + cnt
				sy = anidy - scy
				if ( sy < 0 | sy >= inf_screenh ) {
					continue
				}
				if ( anidy < 0 | anidy >= mdata(MDATA_HEIGHT) ) {
					continue
				}
				repeat aniref * 2 + 1
					anidx = anix - aniref + cnt
					sx = anidx - scx
					if ( sx < 0 | sx >= inf_screenw ) {
						continue
					}
					if ( anidx < 0 | anidx >= mdata(MDATA_WIDTH) ) {
						continue
					}
					anip(1) = dist(anix, aniy, anidx, anidy)
					if ( anip(1) > aniref ) {
						continue
					}
					anip(1) = 48 - (anip - 4) * (anip - 4) * 2
					if ( animeid == ANIMATION_BALL ) {
						if ( fov_los(anix, aniy, anidx, anidy) == 0 ) {
							continue
						}
					}
					if ( sx * inf_tiles + inf_screenx < windoww ) {
						if ( sy * inf_tiles + inf_screeny < inf_screenh * inf_tiles + inf_screeny - inf_tiles / 2 ) {
							pos sx * inf_tiles + inf_screenx, sy * inf_tiles + inf_screeny
							gmode 2, 48, 48
							gcopy 7, anip * 48, 96, 48, 48
						}
					}
				loop
			loop
			anidx = (anix - scx) * inf_tiles + inf_screenx + 24
			anidy = (aniy - scy) * inf_tiles + inf_screeny + 24
			if ( anidx < windoww ) {
				if ( anidy < inf_screenh * inf_tiles + inf_screeny - inf_tiles / 2 ) {
					pos anidx, anidy
					gmode 4, 96, 96, 250 - cnt * cnt * 2
					grotate 7, cnt * 96, 0, 0, 96, 96
				}
			}
			redraw 1
			redraw 0
			gmode 0
			pos 0, 0
			gcopy 4, 0, 0, windoww, windowh
			await cfg_animewait
		loop
		if ( animeid == ANIMATION_BALL ) {
			if ( ele == SKILL_NONE ) {
				if ( efid == SKILL_SPELL_BUBBLE_STORM ) {
					snd SOUNDLIST_BUBLE
					snd SOUNDLIST_MIZU
				}
			}
		}
		if ( anisound ) {
			snd anisound, 0, 1
		}
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_BOLT | _switch_sw ) {
		_switch_sw = 0
		if ( ele == SKILL_NONE ) {
			anicol = 17
		}
		if ( efid == SKILL_SPACT_BLOOD_STREAM ) {
			anicol = 22
		}

		preparePicItem 3, anicol

		if ( zannku != 100 ) {
			snd SOUNDLIST_BOLT1
		}
		anidx = cdata(CDATA_X, cc)
		anidy = cdata(CDATA_Y, cc)
		if ( zannku == 10 | gdata(GDATA_TEMPORARY_FLAGS) == 666 ) {
			if ( zannku == 10 ) {
				gsel 7
				picload exedir + "graphic\\anime37.bmp"
			}
			if ( gdata(GDATA_TEMPORARY_FLAGS) == 666 ) {
				gsel 7
				picload exedir + "graphic\\anime47.bmp"
			}
		}
		else {
			if ( zannku == 100 ) {
				gsel 7
				picload exedir + "graphic\\anime7.bmp"
			}
			else {
				gsel 7
				picload exedir + "graphic\\anime6.bmp"
			}
		}
		pos 0, 0
		gfini 480, 48
		gfdec2 c_col(0, anicol), c_col(1, anicol), c_col(2, anicol)
		gsel 4
		gmode 0
		pos 0, 0
		gcopy 0, 0, 0, windoww, windowh
		gsel 0
		ap(20) = -1
		repeat 20
			if ( ap(20) == (-1) ) {
				route_info anidx, anidy, cnt
				if ( stat == (-1) ) {
					ap(cnt) = -1
					continue
				}
				else {
					if ( stat == 0 ) {
						ap(cnt) = -2
						ap(20) = 4
						continue
					}
				}
				if ( dist(anidx, anidy, cdata(CDATA_X, cc), cdata(CDATA_Y, cc)) > sdataref(SKILL_DATAREF_TG_RANGE, efid) \ EXT_SDATAREF + 1 ) {
					ap(cnt) = -2
					ap(20) = 4
					continue
				}
				if ( fov_los(anidx, anidy, cdata(CDATA_X, cc), cdata(CDATA_Y, cc)) == 0 ) {
					ap(cnt) = -2
					ap(20) = 4
					continue
				}
				ax(cnt) = (anidx - scx) * inf_tiles + inf_screenx + inf_tiles / 2
				ay(cnt) = (anidy - scy) * inf_tiles + inf_screeny + 8
				ap(cnt) = 0
			}
			else {
				ap(20)--
				if ( ap(20) == 0 ) {
					break
				}
			}
			redraw 0
			pos 0, 0
			gmode 0
			gcopy 4, 0, 0, windoww, windowh
			cnt2 = cnt
			repeat cnt2 + 1
				if ( ap(cnt) == (-1) ) {
					continue
				}
				if ( ap(cnt) == (-2) ) {
					break
				}
				if ( ap(cnt) < 5 ) {
					if ( ax(cnt) < windoww ) {
						if ( ay(cnt) < inf_screenh * inf_tiles + inf_screeny - inf_tiles / 2 ) {
							pos ax(cnt), ay(cnt)
							gmode 2, inf_tiles, inf_tiles
							grotate 7, ap(cnt) * 48, 0, atan(tlocx - cdata(CDATA_X, cc), cdata(CDATA_Y, cc) - tlocy), 48, 48
						}
					}
				}
				ap(cnt)++
				if ( gdata(GDATA_TEMPORARY_FLAGS) == 666 ) {
					snd SOUNDLIST_BOLT1
				}
			loop
			if ( zannku == 100 ) {
				await 1
			}
			else {
				await cfg_animewait + 15
			}
			redraw 1
		loop
		if ( ele == SKILL_NONE ) {
			if ( zannku != 10 ) {
				snd SOUNDLIST_MIZU
			}
		}
		if ( zannku != 100 ) {
			if ( anisound ) {
				snd anisound, 0, 1
			}
		}
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_THROW | _switch_sw ) {
		_switch_sw = 0
		if ( synccheck(cc, -1) == 0 ) {
			goto *anime_SWEND1
		}
		gsel 1
		color 0
		boxf 0, 960, chipi(CHIPI_WIDTH, aniref), chipi(CHIPI_HEIGHT, aniref) + 960
		if ( aniref == xy2pic(0, 16) ) {
			gmode 2
			pos 0, 960
			gcopy 1, 0, 768, inf_tiles, inf_tiles
			pos 0, 1008
			gzoom 22, 20, 5, chipc(CHIPC_X, aniref(1)) + 8, chipc(CHIPC_Y, aniref(1)) + 4 + (chipc(CHIPC_HEIGHT, aniref(1)) > inf_tiles) * 8, chipc(CHIPC_WIDTH, aniref(1)) - 16, chipc(CHIPC_HEIGHT, aniref(1)) - 8 - (chipc(CHIPC_HEIGHT, aniref(1)) > inf_tiles) * 10, 1
			pos 6, 974
			gcopy 1, 0, 1008, 22, 20
			gsel selcur
		}
		else {
			if ( aniref == xy2pic(30, 33) ) {
				pos 8, 1058 - chipc(CHIPC_HEIGHT, aniref(1))
				gcopy 5, chipc(CHIPC_X, aniref(1)) + 8, chipc(CHIPC_Y, aniref(1)) + 2, chipc(CHIPC_WIDTH, aniref(1)), chipc(CHIPC_HEIGHT, aniref(1))
				gmode 2
				gsel selcur
			}
			else {
				if ( aniref == xy2pic(3, 16) ) {
					pos 8, 1058 - chipc(CHIPC_HEIGHT, aniref(1))
					gcopy 5, chipc(CHIPC_X, aniref(1)) + 8, chipc(CHIPC_Y, aniref(1)) + 2, chipc(CHIPC_WIDTH, aniref(1)) - 16, chipc(CHIPC_HEIGHT, aniref(1)) - 8
					gmode 4, , , 150
					color 0, 0, 0
					pos 0, 960 + (chipc(CHIPC_HEIGHT, aniref(1)) == inf_tiles) * 48
					gcopy 1, 144, 768 + (chipc(CHIPC_HEIGHT, aniref(1)) > inf_tiles) * 48, inf_tiles, chipc(CHIPC_HEIGHT, aniref(1)) + (chipc(CHIPC_HEIGHT, aniref(1)) > inf_tiles) * 48
					gmode 2
					gsel selcur
				}
				else {
					pos 0, 960
					gcopy 1, chipi(CHIPI_X, aniref), chipi(CHIPI_Y, aniref), chipi(CHIPI_WIDTH, aniref), chipi(CHIPI_HEIGHT, aniref)
					gfini chipi(CHIPI_WIDTH, aniref), chipi(CHIPI_HEIGHT, aniref)
					gfdec2 c_col(0, aniref(1)), c_col(1, aniref(1)), c_col(2, aniref(1))
					gsel selcur
				}
			}
		}
		ax = (cdata(CDATA_X, cc) - scx) * inf_tiles
		ay = (cdata(CDATA_Y, cc) - scy) * inf_tiles
		ap = dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), anix, aniy) / 2 + 1
		repeat ap
			ax -= (cdata(CDATA_X, cc) - anix) * inf_tiles / ap
			ay -= (cdata(CDATA_Y, cc) - aniy) * inf_tiles / ap
			gsel 4
			gmode 0
			pos 0, 0
			gcopy 0, ax, ay - inf_tiles / 2, inf_tiles, inf_tiles
			gmode 2
			gsel 0
			gmode 2, inf_tiles, inf_tiles
			if ( ax + inf_tiles / 2 < windoww ) {
				if ( ay < inf_screenh * inf_tiles + inf_screeny - inf_tiles / 2 ) {
					pos ax + inf_tiles / 2, ay
					grotate 1, 0, 960, atan(anix - cdata(CDATA_X, cc), cdata(CDATA_Y, cc) - aniy), inf_tiles, inf_tiles
				}
			}
			redraw 1
			redraw 0
			gmode 0
			pos ax, ay - inf_tiles / 2
			gcopy 4, 0, 0, inf_tiles, inf_tiles
			gmode 2
			if ( gdata(GDATA_TEMPORARY_FLAGS) != 300 ) {
				await cfg_animewait
			}
		loop
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_UNUSED4 | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_UNUSED3 | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_UNUSED1 | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_UNUSED2 | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_ARROW | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_SPORE | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_INNERVATION | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_DISTANT_ATK | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_GOLDENSTORM | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_POTION_PLUG_1 | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_POTION_PLUG_2 | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_POTION_PLUG_3 | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_POTION_PLUG_4 | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_POTION_PLUG_5 | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_BURN_SCROLLS | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_LINEAR_LAUNCHER | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_SHINING_THROW | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_POLLEN_CANNON | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_LASER_BAZOOKA | _switch_sw ) {
		_switch_sw = 0
		if ( synccheck(cc, -1) == 0 ) {
			goto *anime_SWEND1
		}

		preparePicItem 6, anicol

		if ( animeid == ANIMATION_LINEAR_LAUNCHER ) {
			preparePicItem inv(INV_ITEM_PIC, aniref), inv(INV_ITEM_COL, aniref)
			snd SOUNDLIST_BOLT1
		}
		if ( animeid == ANIMATION_BURN_SCROLLS ) {
			preparePicItem xy2pic(22, 36), COLOR_DEFAULT
			snd SOUNDLIST_ATK_FIRE
		}
		if ( animeid == ANIMATION_GOLDENSTORM ) {
			preparePicItem xy2pic(5, 0), COLOR_DEFAULT
			snd SOUNDLIST_GETGOLD1
		}
		if ( animeid == ANIMATION_SPORE ) {
			preparePicItem xy2pic(23, 0), COLOR_DEFAULT
			snd SOUNDLIST_BOW1
		}
		if ( animeid == ANIMATION_INNERVATION ) {
			preparePicItem xy2pic(31, 33), COLOR_DEFAULT
			snd SOUNDLIST_SWING39
		}
		if ( animeid == ANIMATION_DISTANT_ATK ) {
			preparePicItem xy2pic(32, 33), COLOR_DEFAULT
			snd SOUNDLIST_BOW1
		}
		if ( animeid == ANIMATION_POTION_PLUG_1 ) {
			preparePicItem xy2pic(25, 36), COLOR_DEFAULT
			snd SOUNDLIST_TM2_HIT000
		}
		if ( animeid == ANIMATION_POTION_PLUG_2 ) {
			preparePicItem xy2pic(26, 36), COLOR_DEFAULT
			snd SOUNDLIST_TM2_HIT000
		}
		if ( animeid == ANIMATION_POTION_PLUG_3 ) {
			preparePicItem xy2pic(25, 36), potionc
			snd SOUNDLIST_BOLT1
		}
		if ( animeid == ANIMATION_POTION_PLUG_4 ) {
			preparePicItem xy2pic(26, 36), potionc
			snd SOUNDLIST_BOLT1
		}
		if ( animeid == ANIMATION_POTION_PLUG_5 ) {
			preparePicItem xy2pic(27, 36), potionc
			snd SOUNDLIST_BOLT1
		}
		if ( animeid == ANIMATION_SHINING_THROW ) {
			preparePicItem xy2pic(15, 36), COLOR_DEFAULT
			snd SOUNDLIST_BOLT1
		}
		if ( animeid == ANIMATION_POLLEN_CANNON ) {
			preparePicItem xy2pic(12, 36), COLOR_DEFAULT
			snd SOUNDLIST_BOLT1
		}
		if ( animeid == ANIMATION_LASER_BAZOOKA ) {
			preparePicItem xy2pic(1, 36), COLOR_DEFAULT
			snd SOUNDLIST_GUN10
		}
		if ( animeid == ANIMATION_UNUSED1 ) {
			preparePicItem xy2pic(1, 0), aniciol
			snd SOUNDLIST_BOW1
		}
		if ( animeid == ANIMATION_UNUSED2 ) {
			stype = 0
			if ( inv(INV_ITEM_ID, aniref) == ITEM_ID_REPEATING_BOW | inv(INV_ITEM_ID, aniref) == ITEM_ID_FLASH_CROSSBOW | inv(INV_ITEM_ID, aniref) == ITEM_ID_RINKHALS ) {
				stype = 1
			}
			if ( stype == 0 ) {
				preparePicItem xy2pic(1, 0), anicol
			}
			if ( stype == 1 ) {
				preparePicItem xy2pic(21, 35), anicol
			}
			snd SOUNDLIST_BOW1
		}
		if ( animeid == ANIMATION_UNUSED3 ) {
			ap = refitem(inv(INV_ITEM_ID, aniref), DBSPEC_TYPE_MINOR)
			if ( ap == FILTER_RANGE_LASER ) {
				preparePicItem xy2pic(13, 0), anicol
				snd SOUNDLIST_LASER1
			}
			if ( ap == FILTER_RANGE_PISTOL ) {
				stype = 0
				if ( inv(INV_ITEM_ID, aniref) == ITEM_ID_GAU_17_CUSTOM | inv(INV_ITEM_ID, aniref) == ITEM_ID_MACHINE_GUN ) {
					stype = 1
				}
				if ( inv(INV_ITEM_ID, aniref) == ITEM_ID_GUN_PAIR | inv(INV_ITEM_ID, aniref) == ITEM_ID_GRIFFON | inv(INV_ITEM_ID, aniref) == ITEM_ID_GEMINI ) {
					stype = 2
				}
				if ( inv(INV_ITEM_ID, aniref) == ITEM_ID_AA_12_ADVANCE | inv(INV_ITEM_ID, aniref) == ITEM_ID_WINCHESTER_PREMIUM | inv(INV_ITEM_ID, aniref) == ITEM_ID_SHOT_GUN ) {
					stype = 3
				}
				if ( stype == 0 ) {
					preparePicItem xy2pic(2, 0), anicol
				}
				if ( stype == 1 ) {
					preparePicItem xy2pic(22, 35), anicol
				}
				if ( stype == 2 ) {
					preparePicItem xy2pic(23, 35), anicol
				}
				if ( stype == 3 ) {
					preparePicItem xy2pic(24, 35), anicol
				}
				snd SOUNDLIST_GUN1
			}
		}
		if ( animeid == ANIMATION_UNUSED4 ) {
			if ( inv(INV_ITEM_PIC, aniref) / COLOR_TINT_MULT < 1 ) {
				preparePicItem inv(INV_ITEM_PIC, aniref) \ COLOR_TINT_MULT, inv(INV_ITEM_COL, aniref)
			}
			if ( inv(INV_ITEM_PIC, aniref) / COLOR_TINT_MULT >= 1 ) {
				preparePicItem inv(INV_ITEM_PIC, aniref), inv(INV_ITEM_COL, aniref)
			}
			kaiten = 0
			if ( inv(INV_ITEM_ID, aniref) == ITEM_ID_ION_CAKRAM | inv(INV_ITEM_ID, aniref) == ITEM_ID_SLASH_JOKER | inv(INV_ITEM_ID, aniref) == ITEM_ID_GERBERA_CROSS | inv(INV_ITEM_ID, aniref) == ITEM_ID_SHENAS_PANTY | inv(INV_ITEM_ID, aniref) == ITEM_ID_SHURIKEN | inv(INV_ITEM_ID, aniref) == ITEM_ID_PANTY ) {
				kaiten = 1
			}
			if ( refitem(inv(INV_ITEM_ID, aniref), DBSPEC_TYPE_MINOR) == FILTER_SHIELD_SMALL | refitem(inv(INV_ITEM_ID, aniref), DBSPEC_TYPE_MINOR) == FILTER_WEAPON_SMALL_AXE | refitem(inv(INV_ITEM_ID, aniref), DBSPEC_TYPE_MINOR) == FILTER_WEAPON_LARGE_AXE | refitem(inv(INV_ITEM_ID, aniref), DBSPEC_TYPE_MINOR) == FILTER_WEAPON_SICKLE ) {
				kaiten = 1
			}
			if ( gdata(GDATA_TEMPORARY_FLAGS) == 100 ) {
				kaiten = 1
			}
			snd SOUNDLIST_THROW1
		}
		if ( gdata(GDATA_TEMPORARY_FLAGS) == 100 ) {
			snd SOUNDLIST_BOLT1
		}
		if ( gdata(GDATA_TEMPORARY_FLAGS) == 200 ) {
			snd SOUNDLIST_SWING
		}
		if ( animeid == ANIMATION_ARROW ) {
			snd SOUNDLIST_ARROW1
		}
		ax = (cdata(CDATA_X, cc) - scx) * inf_tiles
		ay = (cdata(CDATA_Y, cc) - scy) * inf_tiles - 12
		ap = dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), cdata(CDATA_X, tc), cdata(CDATA_Y, tc)) / 2 + 1
		if ( kaiten == 0 ) {
			repeat ap
				ax -= (cdata(CDATA_X, cc) - cdata(CDATA_X, tc)) * inf_tiles / ap
				ay -= (cdata(CDATA_Y, cc) - cdata(CDATA_Y, tc)) * inf_tiles / ap
				gsel 4
				gmode 0
				pos 0, 0
				gcopy 0, ax, ay - inf_tiles / 2, inf_tiles, inf_tiles
				gmode 2
				gsel 0
				gmode 2, inf_tiles, inf_tiles
				pos ax + inf_tiles / 2, ay
				grotate 1, 0, 960, atan(cdata(CDATA_X, tc) - cdata(CDATA_X, cc), cdata(CDATA_Y, cc) - cdata(CDATA_Y, tc)), inf_tiles, inf_tiles
				redraw 1
				redraw 0
				gmode 0
				pos ax, ay - inf_tiles / 2
				gcopy 4, 0, 0, inf_tiles, inf_tiles
				gmode 2
				hoseiwait = cfg_animewait
				if ( ammoproc == ENCHANT_AMMO_BURST ) {
					hoseiwait = 0
				}
				if ( gdata(GDATA_TEMPORARY_FLAGS) != 300 ) {
					await hoseiwait
				}
			loop
		}
		else {
			repeat ap
				ax -= (cdata(CDATA_X, cc) - cdata(CDATA_X, tc)) * inf_tiles / ap
				ay -= (cdata(CDATA_Y, cc) - cdata(CDATA_Y, tc)) * inf_tiles / ap
				repeat 7
					gsel 4
					gmode 0
					pos 0, 0
					gcopy 0, ax, ay - inf_tiles / 2, inf_tiles, inf_tiles
					gmode 2
					gsel 0
					gmode 2, inf_tiles, inf_tiles
					pos ax + inf_tiles / 2, ay
					grotate 1, 0, 960, cnt * (-1), inf_tiles, inf_tiles
					redraw 1
					redraw 0
					gmode 0
					pos ax, ay - inf_tiles / 2
					gcopy 4, 0, 0, inf_tiles, inf_tiles
					gmode 2
				loop
				if ( gdata(GDATA_TEMPORARY_FLAGS) != 100 ) {
					snd SOUNDLIST_THROW1
				}
			loop
			kaiten = 0
		}
		if ( anisound ) {
			snd anisound, 0, 1
		}
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_NUCLEAR | _switch_sw ) {
		_switch_sw = 0
		if ( synccheck(cc, -1) == 0 ) {
			goto *anime_SWEND1
		}
		gsel 1
		color 0
		boxf 0, 960, chipi(CHIPI_WIDTH, xy2pic(3, 31)), chipi(CHIPI_HEIGHT, xy2pic(3, 31)) + 960
		pos 0, 960
		gcopy 1, chipi(CHIPI_X, xy2pic(3, 31)), chipi(CHIPI_Y, xy2pic(3, 31)), chipi(CHIPI_WIDTH, xy2pic(3, 31)), chipi(CHIPI_HEIGHT, xy2pic(3, 31))
		gfini chipi(CHIPI_WIDTH, xy2pic(3, 31)), chipi(CHIPI_HEIGHT, xy2pic(3, 31))
		gfdec2 c_col(0, 0), c_col(1, 0), c_col(2, 0)
		gsel selcur
		snd SOUNDLIST_BOLT1
		anix = tlocx
		aniy = tlocy
		ax = (cdata(CDATA_X, cc) - scx) * inf_tiles
		ay = (cdata(CDATA_Y, cc) - scy) * inf_tiles
		ap = dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), anix, aniy) / 2 + 1
		repeat ap
			ax -= (cdata(CDATA_X, cc) - anix) * inf_tiles / ap
			ay -= (cdata(CDATA_Y, cc) - aniy) * inf_tiles / ap
			gsel 4
			gmode 0
			pos 0, 0
			gcopy 0, ax, ay - inf_tiles / 2, inf_tiles, inf_tiles
			gmode 2
			gsel 0
			gmode 2, inf_tiles, inf_tiles
			if ( ax + inf_tiles / 2 < windoww ) {
				if ( ay < inf_screenh * inf_tiles + inf_screeny - inf_tiles / 2 ) {
					pos ax + inf_tiles / 2, ay
					grotate 1, 0, 960, atan(anix - cdata(CDATA_X, cc), cdata(CDATA_Y, cc) - aniy), inf_tiles, inf_tiles
				}
			}
			redraw 1
			redraw 0
			gmode 0
			pos ax, ay - inf_tiles / 2
			gcopy 4, 0, 0, inf_tiles, inf_tiles
			gmode 2
			if ( cfg_animewait >= 1 ) {
				await 150 - cnt * 30
			}
		loop
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_ATTACK | _switch_sw ) {
		_switch_sw = 0
		snd SOUNDLIST_ATK1
		gsel 1
		color 0
		boxf 0, 960, chipi(CHIPI_WIDTH, xy2pic(17, 0)), chipi(CHIPI_HEIGHT, xy2pic(17, 0)) + 960
		pos 0, 960
		gcopy 1, chipi(CHIPI_X, xy2pic(17, 0)), chipi(CHIPI_Y, xy2pic(17, 0)), chipi(CHIPI_WIDTH, xy2pic(17, 0)), chipi(CHIPI_HEIGHT, xy2pic(17, 0))
		gfini chipi(CHIPI_WIDTH, xy2pic(17, 0)), chipi(CHIPI_HEIGHT, xy2pic(17, 0))
		gfdec2 c_col(0, 0), c_col(1, 0), c_col(2, 0)
		gsel selcur
		anidx = (cdata(CDATA_X, tc) - scx) * inf_tiles + inf_screenx
		anidy = (cdata(CDATA_Y, tc) - scy) * inf_tiles + inf_screeny
		gsel 4
		gmode 0
		pos 0, 0
		gcopy 0, anidx - 16, anidy - 16, 64, 64
		gmode 2
		gsel 0
		repeat 4
			redraw 0
			pos anidx - 16, anidy - 16
			gcopy 4, 0, 0, 64, 64
			pos anidx + 16, anidy + 16
			grotate 1, 0, 960, 0.5 * cnt - 0.8, cnt * 8 + 18, cnt * 8 + 18
			redraw 1
			await cfg_animewait
		loop
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_NORMAL_ATTACK | _switch_sw ) {
		_switch_sw = 0
		ap = 0
		if ( attackskill == SKILL_WEAPON_BOW ) {
			ap = 2
		}
		if ( attackskill == SKILL_WEAPON_CROSSBOW ) {
			ap = 2
		}
		if ( attackskill == SKILL_WEAPON_FIREARM ) {
			ap = 2
		}
		if ( attackskill == SKILL_WEAPON_THROWING ) {
			ap = 2
		}
		if ( attackskill == SKILL_WEAPON_LONGSWORD ) {
			ap = 1
		}
		if ( attackskill == SKILL_WEAPON_POLEARM ) {
			ap = 1
		}
		if ( attackskill == SKILL_WEAPON_STAVE ) {
			ap = 0
		}
		if ( attackskill == SKILL_WEAPON_SHORTSWORD ) {
			ap = 1
		}
		if ( attackskill == SKILL_WEAPON_BLUNT ) {
			ap = 0
		}
		if ( attackskill == SKILL_WEAPON_AXE ) {
			ap = 1
		}
		if ( attackskill == SKILL_WEAPON_SCYTHE ) {
			ap = 1
		}
		if ( ammoproc == ENCHANT_AMMO_BURST | ammoproc == ENCHANT_AMMO_RAPID ) {
			ap = -1
		}
		if ( ap >= 0 ) {
			if ( ap == 1 ) {
				kakudo = rnd(9)
			}
			aniref = aniref / 4 + 1
			if ( aniref > 20 ) {
				aniref = 20
			}
			if ( cbit(CHARA_BIT_STONE_BLOOD, tc) ) {
				anix(1) = 1104
			}
			else {
				anix(1) = 720
			}
			if ( ap == 0 ) {
				preparePicItem 17, COLOR_DEFAULT
			}
			repeat aniref
				sx(cnt) = rnd(24) - 12
				sy(cnt) = rnd(8)
				if ( gdata(GDATA_TEMPORARY_FLAGS2) == 1200 | gdata(GDATA_TEMPORARY_FLAGS2) == 1000 ) {
					sy(cnt) = rnd(24) - 12
				}
			loop
			anidx = (cdata(CDATA_X, tc) - scx) * inf_tiles + inf_screenx
			anix = anidx + rnd(12) - rnd(12)
			anidy = (cdata(CDATA_Y, tc) - scy) * inf_tiles + inf_screeny
			aniy = anidy - 16 + rnd(12) - rnd(12)
			gsel BUFFER_BUF
			gmode 0
			pos 0, 0
			gcopy BUFFER_SCREEN, anidx - 24, anidy - 48, 96, 144
			if ( gdata(GDATA_TEMPORARY_FLAGS2) != 1200 ) {
				if ( critical ) {
					gsel BUFFER_PIC
					picload exedir + "graphic\\anime28.bmp"
				}
			}
			gmode 2
			gsel BUFFER_SCREEN
			repeat 4 + (critical != 0)
				redraw 0
				gmode 2
				cnt2 = cnt * 2
				gmode 2, inf_tiles, inf_tiles
				if ( gdata(GDATA_TEMPORARY_FLAGS2) != 1200 ) {
					if ( critical ) {
						pos anidx - 24, anidy - 32
						gcopy BUFFER_PIC, cnt * 96, 0, 96, 96
					}
				}
				repeat aniref
					pos anidx + 24 + sx(cnt) + (sx(cnt) < 4) * ((1 + (cnt \ 2 == 0)) * (-1)) * cnt2 + (sx(cnt) > (-4)) * (1 + (cnt \ 2 == 0)) * cnt2, anidy + sy(cnt) + cnt2 * cnt2 / 3
					grotate BUFFER_ITEM, anix(1), 0, 0.4 * cnt, 6, 6
				loop
				if ( ap == 0 ) {
					pos anidx + sx + 24, anidy + sy + 10
					grotate BUFFER_ITEM, 0, 960, 0.5 * cnt - 0.8, cnt * 10 + aniref, cnt * 10 + aniref
				}
				if ( ap == 1 ) {
					pos anidx + 24, anidy + 12
					grotate BUFFER_INF, 1008 + cnt * 48, 432, kakudo, 48, 48
				}
				if ( ap == 2 ) {
					pos anidx, anidy
					gcopy BUFFER_INF, 816 + cnt * 48, 432, 48, 48
				}
				redraw 1
				redraw 0
				gmode 0
				pos anidx - 24, anidy - 48
				gcopy BUFFER_BUF, 0, 0, 96, 144
				gmode 2
				await cfg_animewait
			loop
			kakudo = 0
		}
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_GENE | _switch_sw ) {
		_switch_sw = 0
		snd SOUNDLIST_ATK_ELEC
		if ( synccheck(anic, -1) == 0 ) {
			goto *anime_SWEND1
		}
		gsel 7
		picload exedir + "graphic\\anime13.bmp"
		gsel 4
		gmode 0
		pos 0, 0
		gcopy 0, 0, 0, windoww, windowh
		gsel 0
		anidx = (cdata(CDATA_X, anic) - scx) * inf_tiles + inf_screenx - 24
		anidy = (cdata(CDATA_Y, anic) - scy) * inf_tiles + inf_screeny - 60
		repeat 10
			redraw 0
			pos 0, 0
			gmode 0
			gcopy 4, 0, 0, windoww, windowh
			cnt2 = cnt
			gmode 2
			repeat anidy / 96 + 2
				pos anidx, anidy - cnt * 96
				gcopy 7, cnt2 / 2 * 96, (cnt == 0) * 96, 96, 96
			loop
			await cfg_animewait + 25
			redraw 1
		loop
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_PARTICLE_CANNON | _switch_sw ) {
		_switch_sw = 0
		if ( synccheck(cc, -1) == 0 ) {
			goto *anime_SWEND1
		}
		gsel 1
		color 0
		boxf 0, 960, chipi(CHIPI_WIDTH, xy2pic(32, 0)), chipi(CHIPI_HEIGHT, xy2pic(32, 0)) + 960
		pos 0, 960
		gcopy 1, chipi(CHIPI_X, xy2pic(32, 0)), chipi(CHIPI_Y, xy2pic(32, 0)), chipi(CHIPI_WIDTH, xy2pic(32, 0)), chipi(CHIPI_HEIGHT, xy2pic(32, 0))
		gfini chipi(CHIPI_WIDTH, xy2pic(32, 0)), chipi(CHIPI_HEIGHT, xy2pic(32, 0))
		gfdec2 c_col(0, anicol), c_col(1, anicol), c_col(2, anicol)
		gsel selcur
		anix = cdata(CDATA_X, tc)
		aniy = cdata(CDATA_Y, tc)
		ax = (cdata(CDATA_X, cc) - scx) * inf_tiles
		ay = (cdata(CDATA_Y, cc) - scy) * inf_tiles
		ap = dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), anix, aniy) / 2 + 1
		gsel 4
		gmode 0
		pos 0, 0
		gcopy 0, 0, 0, windoww, windowh
		gmode 2
		gsel 0
		repeat 15
			repeat ap
				await 5
				snd SOUNDLIST_BREATH1
				ax -= (cdata(CDATA_X, cc) - anix) * inf_tiles / ap
				ay -= (cdata(CDATA_Y, cc) - aniy) * inf_tiles / ap
				gmode 2, inf_tiles, inf_tiles
				if ( ax + inf_tiles / 2 < windoww ) {
					if ( ay < inf_screenh * inf_tiles + inf_screeny - inf_tiles / 2 ) {
						pos ax + inf_tiles / 2, ay
						grotate 1, 0, 960, atan(cdata(CDATA_X, tc) - cdata(CDATA_X, cc), cdata(CDATA_Y, cc) - cdata(CDATA_Y, tc)), 96, 240
					}
				}
				redraw 1
				redraw 0
				await 5
				snd SOUNDLIST_BREATH1
			loop
		loop
		gmode 0
		pos 0, 0
		gcopy 4, 0, 0, windoww, windowh
		gmode 2
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_ACID_HURRICANE | _switch_sw ) {
		_switch_sw = 0
		if ( synccheck(cc, -1) == 0 ) {
			goto *anime_SWEND1
		}

		if ( animode == 0 ) {
			preparePicItem xy2pic(32, 35), COLOR_DEFAULT
		}
		if ( animode == 1 ) {
			preparePicItem xy2pic(32, 35), COLOR_PINK
		}

		anix = cdata(CDATA_X, tc)
		aniy = cdata(CDATA_Y, tc)
		ax = (cdata(CDATA_X, cc) - scx) * inf_tiles
		ay = (cdata(CDATA_Y, cc) - scy) * inf_tiles
		ap = dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), anix, aniy) / 2 + 1
		gsel BUFFER_BUF
		gmode 0
		pos 0, 0
		gcopy BUFFER_SCREEN, 0, 0, windoww, windowh
		gmode 2
		gsel BUFFER_SCREEN
		repeat 15
			await 1
			snd SOUNDLIST_BREATH1
			repeat ap
				ax -= (cdata(CDATA_X, cc) - anix) * inf_tiles / ap
				ay -= (cdata(CDATA_Y, cc) - aniy) * inf_tiles / ap
				gmode 2, inf_tiles, inf_tiles
				if ( ax + inf_tiles / 2 < windoww ) {
					if ( ay < inf_screenh * inf_tiles + inf_screeny - inf_tiles / 2 ) {
						pos ax + inf_tiles / 2, ay
						grotate BUFFER_ITEM, 0, 960, atan(cdata(CDATA_X, tc) - cdata(CDATA_X, cc), cdata(CDATA_Y, cc) - cdata(CDATA_Y, tc)), 96, 240
					}
				}
				redraw 1
				redraw 0
				if ( cnt < 3 ) {
					await 1
					snd SOUNDLIST_BREATH1
				}
			loop
		loop
		gmode 0
		pos 0, 0
		gcopy BUFFER_BUF, 0, 0, windoww, windowh
		gmode 2
		goto *anime_SWEND1
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_UNKNOWN_1 | _switch_sw ) {
		_switch_sw = 0
		if ( synccheck(cc, -1) == 0 ) {
			goto *anime_SWEND1
		}

		preparePicItem xy2pic(23, 33), 0

		anix = cdata(CDATA_X, tc)
		aniy = cdata(CDATA_Y, tc)
		ax = (cdata(CDATA_X, cc) - scx) * inf_tiles
		ay = (cdata(CDATA_Y, cc) - scy) * inf_tiles
		ap = dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), anix, aniy) / 2 + 1
		gsel 4
		gmode 0
		pos 0, 0
		gcopy 0, 0, 0, windoww, windowh
		gmode 2
		gsel 0
		repeat 15
			snd SOUNDLIST_STAB
			repeat ap
				ax -= (cdata(CDATA_X, cc) - anix) * inf_tiles / ap
				ay -= (cdata(CDATA_Y, cc) - aniy) * inf_tiles / ap
				gmode 2, inf_tiles, inf_tiles
				if ( ax + inf_tiles / 2 < windoww ) {
					if ( ay < inf_screenh * inf_tiles + inf_screeny - inf_tiles / 2 ) {
						pos ax + inf_tiles / 2, ay
						grotate 1, 0, 960, atan(cdata(CDATA_X, tc) - cdata(CDATA_X, cc), cdata(CDATA_Y, cc) - cdata(CDATA_Y, tc)), 96, 240
					}
				}
				redraw 1
				redraw 0
			loop
		loop
		gmode 0
		pos 0, 0
		gcopy 4, 0, 0, windoww, windowh
		gmode 2
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_CHAOS_CHILD | _switch_sw ) {
		_switch_sw = 0
		gsel 7
		picload exedir + "graphic\\anime67.bmp"
		gsel 4
		gmode 0
		pos 0, 0
		gcopy 0, 0, 0, windoww, windowh
		gmode 2
		gsel 0
		anidx = (anix - scx) * inf_tiles + inf_screenx - 24
		anidy = (aniy - scy) * inf_tiles + inf_screeny - 168
		repeat 14
			redraw 0
			pos 0, 0
			gmode 0
			gcopy 4, 0, 0, windoww, windowh
			cnt2 = cnt
			gmode 2
			snd SOUNDLIST_BOLT1
			repeat anidy / 96 + 4
				pos anidx, anidy
				gcopy 7, cnt2 / 2 * 96, (cnt == 0) * 216, 96, 216
			loop
			await cfg_animewait + 30
			redraw 1
		loop
		snd SOUNDLIST_ATK_ELEC
		gmode 0
		pos 0, 0
		gcopy 4, 0, 0, windoww, windowh
		gmode 2
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_UNISON_IMPACT4 | _switch_sw ) {
		_switch_sw = 0
		if ( synccheck(anic, -1) == 0 ) {
			goto *anime_SWEND1
		}
		gsel 7
		picload exedir + "graphic\\anime69.bmp"
		gsel 4
		gmode 0
		pos 0, 0
		gcopy 0, 0, 0, windoww, windowh
		gmode 2
		gsel 0
		anidx = (cdata(CDATA_X, anic) - scx) * inf_tiles + inf_screenx - 72
		anidy = (cdata(CDATA_Y, anic) - scy) * inf_tiles + inf_screeny
		repeat 10
			redraw 0
			pos 0, 0
			gmode 0
			gcopy 4, 0, 0, windoww, windowh
			cnt2 = cnt
			gmode 2
			repeat 2
				pos anidx, anidy - cnt * 96
				gcopy 7, cnt2 / 2 * 192, (cnt == 0) * 192, 192, 192
			loop
			await cfg_animewait + 10
			redraw 1
		loop
		gmode 0
		pos 0, 0
		gcopy 4, 0, 0, windoww, windowh
		gmode 2
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_LASTBOSS_1 | _switch_sw ) {
		_switch_sw = 0
		if ( synccheck(anic, -1) == 0 ) {
			goto *anime_SWEND1
		}
		gsel BUFFER_PIC
		picload exedir + "graphic\\anime77.bmp"
		gsel BUFFER_BUF
		gmode 0
		pos 0, 0
		gcopy BUFFER_SCREEN, 0, 0, windoww, windowh
		gmode 2
		gsel BUFFER_SCREEN
		anidx = (cdata(CDATA_X, anic) - scx) * inf_tiles + inf_screenx - 240 + 24
		anidy = (cdata(CDATA_Y, anic) - scy) * inf_tiles + inf_screeny + 24
		repeat 10
			redraw 0
			pos 0, 0
			gmode 0
			gcopy BUFFER_BUF, 0, 0, windoww, windowh
			cnt2 = cnt
			gmode 2
			repeat 2
				pos anidx, anidy - cnt * 240
				gcopy BUFFER_PIC, cnt2 / 2 * 480, (cnt == 0) * 480, 480, 480
			loop
			if ( cnt \ 3 == 0 ) {
				snd SOUNDLIST_HEAL1
			}
			await cfg_animewait + 10
			redraw 1
		loop
		gmode 0
		pos 0, 0
		gcopy BUFFER_BUF, 0, 0, windoww, windowh
		gmode 2
		goto *anime_SWEND1
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_LASTBOSS_2 | _switch_sw ) {
		_switch_sw = 0
		if ( synccheck(anic, -1) == 0 ) {
			goto *anime_SWEND1
		}
		gsel BUFFER_PIC
		picload exedir + "graphic\\anime78.bmp"
		gsel BUFFER_BUF
		gmode 0
		pos 0, 0
		gcopy BUFFER_SCREEN, 0, 0, windoww, windowh
		gmode 2
		gsel BUFFER_SCREEN
		anidx = (cdata(CDATA_X, anic) - scx) * inf_tiles + inf_screenx - 240 + 24
		anidy = (cdata(CDATA_Y, anic) - scy) * inf_tiles + inf_screeny + 24
		repeat 10
			redraw 0
			pos 0, 0
			gmode 0
			gcopy BUFFER_BUF, 0, 0, windoww, windowh
			cnt2 = cnt
			gmode 2
			repeat 2
				pos anidx, anidy - cnt * 240
				gcopy BUFFER_PIC, cnt2 / 2 * 480, (cnt == 0) * 480, 480, 480
			loop
			if ( cnt \ 2 == 0 ) {
				snd SOUNDLIST_HEAL1
			}
			await cfg_animewait + 10
			redraw 1
		loop
		gmode 0
		pos 0, 0
		gcopy BUFFER_BUF, 0, 0, windoww, windowh
		gmode 2
		goto *anime_SWEND1
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_HOROBINOYARI_1 | _switch_sw ) {
		_switch_sw = 0
		if ( synccheck(anic, -1) == 0 ) {
			goto *anime_SWEND1
		}
		gsel BUFFER_PIC
		picload exedir + "graphic\\anime79.bmp"
		gsel BUFFER_BUF
		gmode 0
		pos 0, 0
		gcopy BUFFER_SCREEN, 0, 0, windoww, windowh
		gmode 2
		gsel BUFFER_SCREEN
		anidx = (cdata(CDATA_X, anic) - scx) * inf_tiles + inf_screenx - 240 + 24
		anidy = (cdata(CDATA_Y, anic) - scy) * inf_tiles + inf_screeny + 24
		repeat 10
			redraw 0
			pos 0, 0
			gmode 0
			gcopy BUFFER_BUF, 0, 0, windoww, windowh
			cnt2 = cnt
			gmode 2
			repeat 2
				pos anidx, anidy - cnt * 240
				gcopy BUFFER_PIC, cnt2 / 2 * 480, (cnt == 0) * 480, 480, 480
			loop
			snd SOUNDLIST_HEAL1
			await cfg_animewait + 10
			redraw 1
		loop
		gmode 0
		pos 0, 0
		gcopy BUFFER_BUF, 0, 0, windoww, windowh
		gmode 2
		goto *anime_SWEND1
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_HEALING_RAIN | _switch_sw ) {
		_switch_sw = 0
		if ( animode == 0 ) {
			gsel BUFFER_PIC
			picload exedir + "graphic\\anime50.bmp"
		}
		if ( animode == 1 ) {
			gsel BUFFER_PIC
			picload exedir + "graphic\\anime75.bmp"
		}
		if ( animode == 2 ) {
			gsel BUFFER_PIC
			picload exedir + "graphic\\anime76.bmp"
		}
		if ( animode == 3 ) {
			gsel BUFFER_PIC
			picload exedir + "graphic\\anime28.bmp"
		}
		if ( animode == 4 ) {
			gsel BUFFER_PIC
			picload exedir + "graphic\\anime18.bmp"
		}
		if ( animode == 5 ) {
			gsel BUFFER_PIC
			picload exedir + "graphic\\anime14.bmp"
		}
		if ( animode == 6 ) {
			gsel BUFFER_PIC
			picload exedir + "graphic\\anime80.bmp"
		}
		if ( animode == 7 ) {
			gsel BUFFER_PIC
			picload exedir + "graphic\\anime40.bmp"
		}
		gsel BUFFER_BUF
		gmode 0
		pos 0, 0
		gcopy BUFFER_SCREEN, 0, 0, windoww, windowh
		gmode 2
		gsel BUFFER_SCREEN
		am = 0
		repeat MAX_CHARA_TOTAL
			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
				continue
			}
			if ( animode == 0 | animode == 2 | animode == 7 ) {
				if ( cnt == cc ) {
					continue
				}
				if ( cc < MAX_CHARA_FOLLOWER ) {
					if ( cdata(CDATA_RELATION, cnt) != RELATION_ENEMY ) {
						continue
					}
				}
				if ( cc >= MAX_CHARA_FOLLOWER ) {
					if ( cdata(CDATA_RELATION_ORG, cnt) == cdata(CDATA_RELATION_ORG, cc) | cdata(CDATA_RELATION, cnt) == cdata(CDATA_RELATION, cc) | (cdata(CDATA_RELATION, cc) >= RELATION_DISLIKE & cdata(CDATA_RELATION, cnt) >= RELATION_DISLIKE) ) {
						continue
					}
				}
			}
			if ( animode == 1 ) {
				if ( cc == CHARA_PLAYER | cdata(CDATA_RELATION, cc) >= RELATION_NEUTRAL ) {
					if ( cdata(CDATA_RELATION, cnt) < RELATION_NEUTRAL ) {
						continue
					}
				}
				if ( cdata(CDATA_RELATION, cc) == RELATION_DISLIKE ) {
					if ( cdata(CDATA_RELATION, cnt) != RELATION_DISLIKE ) {
						continue
					}
				}
				if ( cdata(CDATA_RELATION, cc) < RELATION_DISLIKE ) {
					if ( cdata(CDATA_RELATION, cnt) >= RELATION_DISLIKE ) {
						continue
					}
				}
			}
			if ( animode >= 3 & animode <= 6 ) {
				if ( cnt == cc ) {
					continue
				}
			}
			tc = cnt
			dx = cdata(CDATA_X, tc)
			dy = cdata(CDATA_Y, tc)
			if ( dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), dx, dy) > sdataref(SKILL_DATAREF_TG, SKILL_SPACT_CHEER) \ 1000 + 1 ) {
				continue
			}
			if ( animode == 1 ) {
				if ( dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), dx, dy) > sdataref(SKILL_DATAREF_TG, SKILL_SPELL_HEALING_RAIN) \ 1000 + 1 ) {
					continue
				}
			}
			if ( fov_los(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), dx, dy) == 0 ) {
				continue
			}
			ax(am) = (cdata(CDATA_X, cnt) - scx) * inf_tiles + inf_screenx - 24
			if ( am != 0 ) {
				ax(am) += 4 - rnd(8)
			}
			ay(am) = (cdata(CDATA_Y, cnt) - scy) * inf_tiles + inf_screeny + 32
			if ( ay(am) < 0 | ay(am) > inf_screenh * inf_tiles + inf_screeny ) {
				continue
			}
			if ( ax(am) < (-20) | ax(am) > windoww + 20 ) {
				continue
			}
			ap(am) = 20 + (am != 0) * rnd(5)
			am++
		loop
		repeat
			redraw 0
			pos 0, 0
			gmode 0
			gcopy BUFFER_BUF, 0, 0, windoww, windowh
			af = 0
			repeat am
				if ( ap(cnt) <= 0 ) {
					continue
				}
				af = 1
				cnt2 = cnt
				anidy = ay(cnt) - 32
				gmode 2, 96, 96
				pos ax(cnt), anidy - 48
				gcopy BUFFER_PIC, limit(8 - ap(cnt), 0, 8) * 96 + 96 * (ap(cnt) < 15), 0, 96, 96
				if ( ap(cnt) >= 20 ) {
					ap(cnt) -= rnd(2)
				}
				else {
					ap(cnt)--
				}
			loop
			if ( cnt \ 2 == 0 ) {
				if ( cnt < 30 ) {
					if ( cnt / 3 < am ) {
						if ( animode == 1 ) {
							snd SOUNDLIST_HEAL1
						}
						if ( animode == 2 ) {
							snd SOUNDLIST_BALL1
						}
						if ( animode == 3 ) {
							snd SOUNDLIST_STAB
						}
						if ( animode == 4 ) {
							snd SOUNDLIST_CRACK2
						}
						if ( animode == 5 ) {
							snd SOUNDLIST_ATK_CHAOS
						}
						if ( animode == 6 ) {
							snd SOUNDLIST_OFFER1
						}
					}
				}
			}
			if ( af == 0 ) {
				break
			}
			if ( animode == 1 ) {
				await cfg_animewait + 5
			}
			if ( animode == 2 ) {
				await cfg_animewait + 25
			}
			redraw 1
		loop
		goto *anime_SWEND1
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_UNISON_IMPACT2 | _switch_sw ) {
		_switch_sw = 0
		if ( synccheck(anic, -1) == 0 ) {
			goto *anime_SWEND1
		}
		gsel 7
		picload exedir + "graphic\\anime71.bmp"
		gsel 4
		gmode 0
		pos 0, 0
		gcopy 0, 0, 0, windoww, windowh
		gmode 2
		gsel 0
		anidx = (cdata(CDATA_X, anic) - scx) * inf_tiles + inf_screenx - 24
		anidy = (cdata(CDATA_Y, anic) - scy) * inf_tiles + inf_screeny - 12
		repeat 10
			redraw 0
			pos 0, 0
			gmode 0
			gcopy 4, 0, 0, windoww, windowh
			cnt2 = cnt
			gmode 2
			repeat 2
				pos anidx, anidy - cnt * 48
				gcopy 7, cnt2 / 2 * 96, (cnt == 0) * 96, 96, 96
			loop
			await cfg_animewait * 2 + 15
			redraw 1
		loop
		gmode 0
		pos 0, 0
		gcopy 4, 0, 0, windoww, windowh
		gmode 2
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_UNISON_IMPACT3 | _switch_sw ) {
		_switch_sw = 0
		if ( synccheck(anic, -1) == 0 ) {
			goto *anime_SWEND1
		}
		gsel 7
		picload exedir + "graphic\\anime72.bmp"
		gsel 4
		gmode 0
		pos 0, 0
		gcopy 0, 0, 0, windoww, windowh
		gmode 2
		gsel 0
		anidx = (cdata(CDATA_X, anic) - scx) * inf_tiles + inf_screenx - 24
		anidy = (cdata(CDATA_Y, anic) - scy) * inf_tiles + inf_screeny - 12
		repeat 10
			redraw 0
			pos 0, 0
			gmode 0
			gcopy 4, 0, 0, windoww, windowh
			cnt2 = cnt
			gmode 2
			repeat 2
				pos anidx, anidy - cnt * 48
				gcopy 7, cnt2 / 2 * 96, (cnt == 0) * 96, 96, 96
			loop
			await cfg_animewait * 2 + 15
			redraw 1
		loop
		gmode 0
		pos 0, 0
		gcopy 4, 0, 0, windoww, windowh
		gmode 2
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_ARROW_RAIN | _switch_sw ) {
		_switch_sw = 0
		if ( synccheck(anic, -1) == 0 ) {
			goto *anime_SWEND1
		}
		gsel 7
		picload exedir + "graphic\\anime63.bmp"
		gsel 4
		gmode 0
		pos 0, 0
		gcopy 0, 0, 0, windoww, windowh
		gmode 2
		gsel 0
		anidx = (cdata(CDATA_X, anic) - scx) * inf_tiles + inf_screenx - 84
		anidy = (cdata(CDATA_Y, anic) - scy) * inf_tiles + inf_screeny - 216 + 96
		repeat 10
			redraw 0
			pos 0, 0
			gmode 0
			gcopy 4, 0, 0, windoww, windowh
			cnt2 = cnt
			gmode 2
			snd SOUNDLIST_BOLT1
			repeat anidy / 216 + 2
				pos anidx, anidy - cnt * 216
				gcopy 7, cnt2 / 2 * 216, (cnt == 0) * 216, 216, 216
			loop
			await cfg_animewait + 10
			redraw 1
		loop
		gmode 0
		pos 0, 0
		gcopy 4, 0, 0, windoww, windowh
		gmode 2
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_THUNDERCLAP | _switch_sw ) {
		_switch_sw = 0
		snd SOUNDLIST_ATK_ELEC
		gsel 7
		picload exedir + "graphic\\anime45.bmp"
		gsel 4
		gmode 0
		pos 0, 0
		gcopy 0, 0, 0, windoww, windowh
		gsel 0
		anidx = (anix - scx) * inf_tiles + inf_screenx - 84
		anidy = (aniy - scy) * inf_tiles + inf_screeny - 84
		repeat 10
			redraw 0
			pos 0, 0
			gmode 0
			gcopy 4, 0, 0, windoww, windowh
			cnt2 = cnt
			gmode 2
			repeat anidy / 216 + 2
				pos anidx, anidy
				gcopy 7, cnt2 / 2 * 216, (cnt == 0) * 216, 216, 216
			loop
			await cfg_animewait + 10
			redraw 1
		loop
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_HOLY | _switch_sw ) {
		_switch_sw = 0
		gsel 7
		picload exedir + "graphic\\anime12.bmp"
		gsel 4
		pos 0, 0
		gmode 0
		gcopy 0, 0, 0, windoww, windowh
		gsel 0
		am = 0
		repeat MAX_CHARA_TOTAL
			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
				continue
			}
			if ( gdata(GDATA_TEMPORARY_FLAGS3) == 777 ) {
				if ( cdata(CDATA_RELATION, cnt) != (-3) ) {
					continue
				}
			}
			if ( animode == 0 ) {
				if ( cnt == cc ) {
					continue
				}
			}
			if ( animode >= 100 ) {
				if ( cnt != animode - 100 ) {
					continue
				}
			}
			ax(am) = (cdata(CDATA_X, cnt) - scx) * inf_tiles + inf_screenx - 24
			if ( am != 0 ) {
				ax(am) += 4 - rnd(8)
			}
			ay(am) = (cdata(CDATA_Y, cnt) - scy) * inf_tiles + inf_screeny + 32
			if ( ay(am) < 0 | ay(am) > inf_screenh * inf_tiles + inf_screeny ) {
				continue
			}
			if ( ax(am) < (-20) | ax(am) > windoww + 20 ) {
				continue
			}
			ap(am) = 20 + (am != 0) * rnd(5)
			am++
		loop
		repeat
			redraw 0
			pos 0, 0
			gmode 0
			gcopy 4, 0, 0, windoww, windowh
			af = 0
			repeat am
				if ( ap(cnt) <= 0 ) {
					continue
				}
				af = 1
				cnt2 = cnt
				anidy = ay(cnt) * limit(20 - ap(cnt), 0, 6) / 6 - 96
				gmode 2, 96, 96
				pos ax(cnt), anidy
				gcopy 7, limit(8 - ap(cnt), 0, 8) * 96 + 96 * (ap(cnt) < 15), 0, 96, 96
				if ( ap(cnt) <= 14 ) {
					if ( ap(cnt) >= 6 ) {
						pos ax(cnt), anidy + 16
						gcopy 7, (14 - ap(cnt)) / 2 * 96, 96, 96, 96
					}
				}
				anidx = limit(anidy / 55 + 1, 0, 7 - limit((11 - ap(cnt)) * 2, 0, 7))
				repeat anidx, 1
					pos ax(cnt2), anidy - cnt * 55
					gcopy 7, 96 * (ap(cnt2) < 15), 0, 96, 55
					if ( cnt == anidx ) {
						pos ax(cnt2), anidy - cnt * 55 - 40
						gcopy 7, 288, 0, 96, 40
					}
				loop
				if ( ap(cnt) >= 20 ) {
					ap(cnt) -= rnd(2)
				}
				else {
					ap(cnt)--
				}
			loop
			if ( cnt \ 2 == 0 ) {
				if ( cnt < 30 ) {
					if ( cnt / 3 < am ) {
						if ( animode == 0 ) {
							snd SOUNDLIST_BOLT1
						}
						if ( animode >= 100 ) {
							snd SOUNDLIST_HEAL1
						}
					}
				}
			}
			if ( af == 0 ) {
				break
			}
			await cfg_animewait + 25
			redraw 1
		loop
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_HOROBINOYARI_2 | _switch_sw ) {
		_switch_sw = 0
		snd SOUNDLIST_BOLT1
		gsel BUFFER_PIC
		picload exedir + "graphic\\anime81.bmp"
		gsel BUFFER_BUF
		pos 0, 0
		gmode 0
		gcopy BUFFER_SCREEN, 0, 0, windoww, windowh
		gsel BUFFER_SCREEN
		am = 0
		repeat 245
			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
				continue
			}
			if ( gdata(GDATA_TEMPORARY_FLAGS3) == 777 ) {
				if ( cdata(CDATA_RELATION, cnt) != RELATION_ENEMY ) {
					continue
				}
			}
			if ( animode == 0 ) {
				if ( cnt == cc ) {
					continue
				}
			}
			if ( animode >= 100 ) {
				if ( cnt != animode - 100 ) {
					continue
				}
			}
			ax(am) = (cdata(CDATA_X, cnt) - scx) * inf_tiles + inf_screenx - 24
			if ( am != 0 ) {
				ax(am) += 4 - rnd(8)
			}
			ay(am) = (cdata(CDATA_Y, cnt) - scy) * inf_tiles + inf_screeny + 32
			if ( ay(am) < 0 | ay(am) > inf_screenh * inf_tiles + inf_screeny ) {
				continue
			}
			if ( ax(am) < (-20) | ax(am) > windoww + 20 ) {
				continue
			}
			ap(am) = 20 + (am != 0) * rnd(5)
			am++
		loop
		repeat
			redraw 0
			pos 0, 0
			gmode 0
			gcopy BUFFER_BUF, 0, 0, windoww, windowh
			af = 0
			repeat am
				if ( ap(cnt) <= 0 ) {
					continue
				}
				af = 1
				cnt2 = cnt
				anidy = ay(cnt) * limit(20 - ap(cnt), 0, 6) / 6 - 96
				gmode 2, 96, 96
				pos ax(cnt), anidy
				gcopy BUFFER_PIC, limit(8 - ap(cnt), 0, 8) * 96 + 96 * (ap(cnt) < 15), 0, 96, 96
				if ( ap(cnt) <= 14 ) {
					if ( ap(cnt) >= 6 ) {
						pos ax(cnt), anidy + 16
						gcopy BUFFER_PIC, (14 - ap(cnt)) / 2 * 96, 96, 96, 96
					}
				}
				anidx = limit(anidy / 55 + 1, 0, 7 - limit((11 - ap(cnt)) * 2, 0, 7))
				repeat anidx, 1
					pos ax(cnt2), anidy - cnt * 55
					gcopy BUFFER_PIC, 96 * (ap(cnt2) < 15), 0, 96, 55
					if ( cnt == anidx ) {
						pos ax(cnt2), anidy - cnt * 55 - 40
						gcopy BUFFER_PIC, 288, 0, 96, 40
					}
				loop
				if ( ap(cnt) >= 20 ) {
					ap(cnt) -= rnd(2)
				}
				else {
					ap(cnt)--
				}
			loop
			if ( cnt \ 2 == 0 ) {
				snd SOUNDLIST_ATK_FIRE
				snd SOUNDLIST_BOLT1
			}
			if ( af == 0 ) {
				break
			}
			await cfg_animewait + 25
			redraw 1
		loop
		goto *anime_SWEND1
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_METEOR | _switch_sw ) {
		_switch_sw = 0
		gsel 7
		picload exedir + "graphic\\anime17.bmp"
		gsel 4
		pos 0, 0
		gmode 0
		gcopy 0, 0, 0, windoww, windowh
		gsel 0
		am = 0
		repeat 75
			ax(am) = 240 + rnd(windoww)
			ay(am) = -96
			ap(am) = rnd(8)
			am++
		loop
		repeat
			redraw 0
			if ( cnt < 4 ) {
				pos 0, 0
			}
			else {
				pos 5 - rnd(10), 5 - rnd(10)
			}
			gmode 0
			gcopy 4, 0, 0, windoww, windowh
			af = 0
			repeat am
				if ( ap(cnt) >= 16 ) {
					continue
				}
				af = 1
				anidy = ay(cnt) * limit(20 - ap(cnt), 0, 6) / 6 - 96
				gmode 2, 96, 96
				if ( ap(cnt) < 9 ) {
					ax(cnt) -= 16 + cnt \ (windoww / 30)
					ay(cnt) += 24 + cnt \ (windowh / 10)
				}
				if ( ap(cnt) >= 10 ) {
					pos ax(cnt) - 48, ay(cnt)
					gcopy 7, (ap(cnt) - 10) * 192, 96, 192, 96
				}
				if ( ap(cnt) < 16 ) {
					pos ax(cnt), ay(cnt)
					gcopy 7, limit(ap(cnt) - 8, 0, 8) * 96, 0, 96, 96
				}
				ap(cnt)++
			loop
			if ( cnt \ 2 == 0 ) {
				if ( cnt < 8 ) {
					if ( cnt / 3 < am ) {
						snd SOUNDLIST_ATK_FIRE
					}
				}
			}
			if ( af == 0 ) {
				break
			}
			await cfg_animewait + 40
			redraw 1
		loop
		await cfg_animewait
		redraw 0
		pos 0, 0
		gmode 0
		gcopy 4, 0, 0, windoww, windowh
		gmode 2
		redraw 1
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_RAGNA | _switch_sw ) {
		_switch_sw = 0
		gsel 7
		picload exedir + "graphic\\anime16.bmp"
		gsel 4
		pos 0, 0
		gmode 0
		gcopy 0, 0, 0, windoww, windowh
		gsel 0
		am = 0
		repeat 100
			ax(am) = rnd(windoww)
			ay(am) = rnd(inf_screenh * inf_tiles) - 96 - 24
			ap(am) = 0 - rnd(3)
			am++
		loop
		repeat
			redraw 0
			pos 5 - rnd(10), 5 - rnd(10)
			gmode 0
			gcopy 4, 0, 0, windoww, windowh
			af = 0
			repeat am
				if ( ap(cnt) >= 10 ) {
					continue
				}
				af = 1
				cnt2 = cnt
				anidy = ay(cnt) * limit(20 - ap(cnt), 0, 6) / 6 - 96
				gmode 2, 96, 96
				if ( ap(cnt) < 10 ) {
					pos ax(cnt), ay(cnt)
					gcopy 7, ap(cnt) * 96, 96, 96, 96
					pos ax(cnt), ay(cnt) - 96
					gcopy 7, ap(cnt) * 96, 0, 96, 96
				}
				if ( ap(cnt) < 0 ) {
					ap(cnt) += rnd(2)
				}
				else {
					ap(cnt)++
				}
			loop
			if ( cnt \ 2 == 0 ) {
				if ( cnt < 8 ) {
					if ( cnt / 3 < am ) {
						snd SOUNDLIST_ATK_FIRE
					}
				}
			}
			if ( af == 0 ) {
				break
			}
			await cfg_animewait + 40
			redraw 1
		loop
		await cfg_animewait
		redraw 0
		pos 0, 0
		gmode 0
		gcopy 4, 0, 0, windoww, windowh
		gmode 2
		redraw 1
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_FIREWORK | _switch_sw ) {
		_switch_sw = 0
		hanairo = rnd(4)
		if ( hanairo == 0 ) {
			gsel 7
			picload exedir + "graphic\\anime55.bmp"
		}
		if ( hanairo == 1 ) {
			gsel 7
			picload exedir + "graphic\\anime56.bmp"
		}
		if ( hanairo == 2 ) {
			gsel 7
			picload exedir + "graphic\\anime57.bmp"
		}
		if ( hanairo == 3 ) {
			gsel 7
			picload exedir + "graphic\\anime58.bmp"
		}
		gsel 4
		pos 0, 0
		gmode 0
		gcopy 0, 0, 0, windoww, windowh
		gsel 0
		am = 0
		repeat 6
			ax(am) = limit(rnd(windoww + 192), 0, windoww - 384)
			ay(am) = limit(rnd(inf_screenh * inf_tiles + 192), 384, inf_screenh * inf_tiles - 192)
			ap(am) = 0 - rnd(3)
			am++
		loop
		repeat
			redraw 0
			pos 0, 0
			gmode 0
			gcopy 4, 0, 0, windoww, windowh
			af = 0
			repeat am
				if ( ap(cnt) >= 10 ) {
					continue
				}
				af = 1
				cnt2 = cnt
				anidy = ay(cnt) * limit(20 - ap(cnt), 0, 7) / 7 - 384
				gmode 2, 384, 384
				if ( ap(cnt) < 10 ) {
					pos ax(cnt), ay(cnt)
					gcopy 7, ap(cnt) * 384, 384, 384, 384
					pos ax(cnt), ay(cnt) - 384
					gcopy 7, ap(cnt) * 384, 0, 384, 384
				}
				if ( ap(cnt) < 0 ) {
					ap(cnt) += rnd(2)
				}
				else {
					ap(cnt)++
				}
			loop
			if ( cnt == 1 | cnt == 3 ) {
				snd SOUNDLIST_EXPLOSION
			}
			if ( af == 0 ) {
				break
			}
			await 100
			if ( cnt >= 3 & cnt <= 8 ) {
				snd SOUNDLIST_FOOT
			}
			redraw 1
		loop
		await cfg_animewait
		redraw 0
		pos 0, 0
		gmode 0
		gcopy 4, 0, 0, windoww, windowh
		gmode 2
		redraw 1
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_GARDEN | _switch_sw ) {
		_switch_sw = 0
		if ( animode == 1 ) {
			gsel BUFFER_PIC
			picload exedir + "graphic\\anime83.bmp"
		}
		if ( animode == 2 ) {
			gsel BUFFER_PIC
			picload exedir + "graphic\\anime84.bmp"
		}
		if ( animode == 3 ) {
			gsel BUFFER_PIC
			picload exedir + "graphic\\anime61.bmp"
		}
		if ( animode == 4 ) {
			gsel BUFFER_PIC
			picload exedir + "graphic\\anime85.bmp"
		}
		gsel 4
		pos 0, 0
		gmode 0
		gcopy 0, 0, 0, windoww, windowh
		gsel 0
		am = 0
		repeat 200
			ax(am) = rnd(windoww)
			ay(am) = rnd(inf_screenh * inf_tiles) - 96 - 24
			ap(am) = 0 - rnd(3)
			am++
		loop
		repeat
			redraw 0
			pos 5 - rnd(10), 5 - rnd(10)
			gmode 0
			gcopy 4, 0, 0, windoww, windowh
			af = 0
			repeat am
				if ( ap(cnt) >= 10 ) {
					continue
				}
				af = 1
				cnt2 = cnt
				anidy = ay(cnt) * limit(20 - ap(cnt), 0, 6) / 6 - 96
				gmode 2, 96, 96
				if ( ap(cnt) < 10 ) {
					pos ax(cnt), ay(cnt)
					gcopy 7, ap(cnt) * 96, 96, 96, 96
					pos ax(cnt), ay(cnt) - 96
					gcopy 7, ap(cnt) * 96, 0, 96, 96
				}
				if ( ap(cnt) < 0 ) {
					ap(cnt) += rnd(2)
				}
				else {
					ap(cnt)++
				}
			loop
			if ( cnt \ 2 == 0 ) {
				if ( cnt < 8 ) {
					if ( cnt / 3 < am ) {
						if ( animode == 1 ) {
							snd SOUNDLIST_ATK_ELEC
						}
						if ( animode == 2 ) {
							snd SOUNDLIST_SONIC
						}
						if ( animode == 3 ) {
							snd SOUNDLIST_SONIC
						}
						if ( animode == 4 ) {
							snd SOUNDLIST_ATK_FIRE
						}
					}
				}
			}
			if ( af == 0 ) {
				break
			}
			await cfg_animewait + 40
			redraw 1
		loop
		await cfg_animewait
		redraw 0
		pos 0, 0
		gmode 0
		gcopy 4, 0, 0, windoww, windowh
		gmode 2
		redraw 1
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_AROMAGEDDON | _switch_sw ) {
		_switch_sw = 0
		if ( efid == SKILL_SPACT_ANAPHYLAXIS ) {
			anicol = 14
		}
		else {
			anicol = 0
		}
		gsel 7
		picload exedir + "graphic\\anime60.bmp"
		pos 0, 0
		gfini 960, 192
		gfdec2 c_col(0, anicol), c_col(1, anicol), c_col(2, anicol)
		gsel 4
		pos 0, 0
		gmode 0
		gcopy 0, 0, 0, windoww, windowh
		gsel 0
		am = 0
		repeat 200
			ax(am) = rnd(windoww)
			ay(am) = rnd(inf_screenh * inf_tiles) - 96 - 24
			ap(am) = 0 - rnd(3)
			am++
		loop
		repeat
			redraw 0
			pos 5 - rnd(10), 5 - rnd(10)
			gmode 0
			gcopy 4, 0, 0, windoww, windowh
			af = 0
			repeat am
				if ( ap(cnt) >= 10 ) {
					continue
				}
				af = 1
				cnt2 = cnt
				anidy = ay(cnt) * limit(20 - ap(cnt), 0, 6) / 6 - 96
				gmode 2, 96, 96
				if ( ap(cnt) < 10 ) {
					pos ax(cnt), ay(cnt)
					gcopy 7, ap(cnt) * 96, 96, 96, 96
					pos ax(cnt), ay(cnt) - 96
					gcopy 7, ap(cnt) * 96, 0, 96, 96
				}
				if ( ap(cnt) < 0 ) {
					ap(cnt) += rnd(2)
				}
				else {
					ap(cnt)++
				}
			loop
			if ( cnt \ 2 == 0 ) {
				if ( cnt < 8 ) {
					if ( cnt / 3 < am ) {
						snd SOUNDLIST_GET2
						snd SOUNDLIST_ATK_FIRE
					}
				}
			}
			if ( af == 0 ) {
				break
			}
			await cfg_animewait + 40
			redraw 1
		loop
		await cfg_animewait
		redraw 0
		pos 0, 0
		gmode 0
		gcopy 4, 0, 0, windoww, windowh
		gmode 2
		redraw 1
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_GAMEWIN3 | _switch_sw ) {
		_switch_sw = 0
		gsel 7
		picload exedir + "graphic\\anime65.bmp"
		gsel 4
		pos 0, 0
		gmode 0
		gcopy 0, 0, 0, windoww, windowh
		gsel 0
		am = 0
		repeat 100
			ax(am) = rnd(windoww)
			ay(am) = rnd(inf_screenh * inf_tiles) - 96 - 24
			ap(am) = 0 - rnd(3)
			am++
		loop
		repeat
			redraw 0
			pos 5 - rnd(10), 5 - rnd(10)
			gmode 0
			gcopy 4, 0, 0, windoww, windowh
			af = 0
			repeat am
				if ( ap(cnt) >= 10 ) {
					continue
				}
				af = 1
				cnt2 = cnt
				anidy = ay(cnt) * limit(20 - ap(cnt), 0, 6) / 6 - 96
				gmode 2, 96, 96
				if ( ap(cnt) < 10 ) {
					pos ax(cnt), ay(cnt)
					gcopy 7, ap(cnt) * 96, 96, 96, 96
					pos ax(cnt), ay(cnt) - 96
					gcopy 7, ap(cnt) * 96, 0, 96, 96
				}
				if ( ap(cnt) < 0 ) {
					ap(cnt) += rnd(2)
				}
				else {
					ap(cnt)++
				}
			loop
			if ( cnt \ 2 == 0 ) {
				if ( cnt < 8 ) {
					if ( cnt / 3 < am ) {
						snd SOUNDLIST_HEAL1
					}
				}
			}
			if ( af == 0 ) {
				break
			}
			await cfg_animewait + 40
			redraw 1
		loop
		await cfg_animewait
		redraw 0
		pos 0, 0
		gmode 0
		gcopy 4, 0, 0, windoww, windowh
		gmode 2
		redraw 1
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_UNISON_IMPACT1 | _switch_sw ) {
		_switch_sw = 0
		gsel 7
		picload exedir + "user\\graphic2\\animeEX.bmp"
		gsel 4
		pos 0, 0
		gmode 0
		gcopy 0, 0, 0, windoww, windowh
		gsel 0
		am = 0
		repeat 10
			ax(am) = 0
			ay(am) = 0
			ap(am) = 0
			am++
		loop
		repeat
			redraw 0
			pos 0, 0
			gmode 0
			gcopy 4, 0, 0, windoww, windowh
			af = 0
			repeat am
				if ( ap(cnt) >= 6 ) {
					continue
				}
				snd SOUNDLIST_MECHA20
				af = 1
				cnt2 = cnt
				anidy = ay(cnt) * limit(20 - ap(cnt), 0, 5) / 5 - 0
				gmode 2, 800, 600
				if ( ap(cnt) < 6 ) {
					pos windoww / 2, windowh / 2
					grotate 7, ap(cnt) * 800, 0, 0, windoww, windowh
				}
				if ( ap(cnt) < 0 ) {
					ap(cnt) += rnd(2)
				}
				else {
					ap(cnt)++
				}
			loop
			if ( af == 0 ) {
				break
			}
			if ( cnt == 5 ) {
				await cfg_animewait + 150
			}
			await cfg_animewait + 100
			redraw 1
		loop
		await cfg_animewait
		redraw 0
		pos 0, 0
		gmode 0
		gcopy 4, 0, 0, windoww, windowh
		gmode 2
		redraw 1
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_STARS | _switch_sw ) {
		_switch_sw = 0
		gsel 7
		picload exedir + "graphic\\anime54.bmp"
		gsel 4
		pos 0, 0
		gmode 0
		gcopy 0, 0, 0, windoww, windowh
		gsel 0
		am = 0
		repeat 100
			ax(am) = rnd(windoww)
			ay(am) = rnd(inf_screenh * inf_tiles) - 96 - 24
			ap(am) = 0 - rnd(3)
			am++
		loop
		repeat
			redraw 0
			pos 5 - rnd(10), 5 - rnd(10)
			gmode 0
			gcopy 4, 0, 0, windoww, windowh
			af = 0
			repeat am
				if ( ap(cnt) >= 10 ) {
					continue
				}
				af = 1
				cnt2 = cnt
				anidy = ay(cnt) * limit(20 - ap(cnt), 0, 6) / 6 - 96
				gmode 2, 96, 96
				if ( ap(cnt) < 10 ) {
					pos ax(cnt), ay(cnt)
					gcopy 7, ap(cnt) * 96, 96, 96, 96
					pos ax(cnt), ay(cnt) - 96
					gcopy 7, ap(cnt) * 96, 0, 96, 96
				}
				if ( ap(cnt) < 0 ) {
					ap(cnt) += rnd(2)
				}
				else {
					ap(cnt)++
				}
			loop
			if ( cnt \ 2 == 0 ) {
				if ( cnt < 8 ) {
					if ( cnt / 3 < am ) {
						snd SOUNDLIST_HEAL1
					}
				}
			}
			if ( af == 0 ) {
				break
			}
			await cfg_animewait + 40
			redraw 1
		loop
		await cfg_animewait
		redraw 0
		pos 0, 0
		gmode 0
		gcopy 4, 0, 0, windoww, windowh
		gmode 2
		redraw 1
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_EVOCHAT_GENTLY | _switch_sw ) {
		_switch_sw = 0
		gsel BUFFER_PIC2
		picload exedir + "graphic\\anime74.bmp"
		gsel BUFFER_BUF
		pos 0, 0
		gmode 0
		gcopy BUFFER_SCREEN, 0, 0, windoww, windowh
		gsel BUFFER_SCREEN
		am = 0
		repeat 100
			ax(am) = rnd(windoww)
			ay(am) = rnd(inf_screenh * inf_tiles) + 100
			if ( ay(am) > inf_screenh * inf_tiles - 50 ) {
				ay(am) = inf_screenh * inf_tiles - 50
			}
			ap(am) = 0 - rnd(6)
			am++
		loop
		repeat
			redraw 0
			if ( aniref == 0 ) {
				pos 0, 5 - rnd(3)
				gmode 0
				gcopy BUFFER_BUF, 0, 0, windoww, windowh
			}
			if ( aniref == 1 ) {
				pos 5 - rnd(10), 5 - rnd(10)
				gmode 0
				gcopy BUFFER_BUF, 0, 0, windoww, windowh
			}
			af = 0
			repeat am
				if ( ap(cnt) >= 10 ) {
					continue
				}
				af = 1
				cnt2 = cnt
				anidy = ay(cnt) * limit(20 - ap(cnt), 0, 6) / 6 - 96
				gmode 2, 96, 96
				if ( ap(cnt) < 10 ) {
					if ( aniref == 0 ) {
						if ( cnt \ 3 == 0 ) {
							pos ax(cnt), ay(cnt) - 96
							gcopy BUFFER_PIC2, ap(cnt) * 96, 0, 96, 96
						}
					}
					if ( aniref == 1 ) {
						pos ax(cnt), ay(cnt) - 96
						gcopy BUFFER_PIC2, ap(cnt) * 96, 0, 96, 96
					}
				}
				if ( ap(cnt) < 0 ) {
					ap(cnt) += rnd(2)
				}
				else {
					ap(cnt)++
				}
			loop
			if ( af == 0 ) {
				break
			}
			await cfg_animewait + 40
			redraw 1
		loop
		redraw 1
		gmode 0
		pos 0, 0
		gcopy BUFFER_BUF, 0, 0, windoww, windowh
		gmode 2
		redraw 1
		goto *anime_SWEND1
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_GIGA | _switch_sw ) {
		_switch_sw = 0
		gsel 7
		picload exedir + "graphic\\anime52.bmp"
		gsel 4
		pos 0, 0
		gmode 0
		gcopy 0, 0, 0, windoww, windowh
		gsel 0
		am = 0
		repeat 100
			ax(am) = rnd(windoww)
			ay(am) = rnd(inf_screenh * inf_tiles) - 96 - 24
			ap(am) = 0 - rnd(3)
			am++
		loop
		repeat
			redraw 0
			pos 5 - rnd(10), 5 - rnd(10)
			gmode 0
			gcopy 4, 0, 0, windoww, windowh
			af = 0
			repeat am
				if ( ap(cnt) >= 10 ) {
					continue
				}
				af = 1
				cnt2 = cnt
				anidy = ay(cnt) * limit(20 - ap(cnt), 0, 6) / 6 - 96
				gmode 2, 96, 96
				if ( ap(cnt) < 10 ) {
					pos ax(cnt), ay(cnt)
					gcopy 7, ap(cnt) * 96, 96, 96, 96
					pos ax(cnt), ay(cnt) - 96
					gcopy 7, ap(cnt) * 96, 0, 96, 96
				}
				if ( ap(cnt) < 0 ) {
					ap(cnt) += rnd(2)
				}
				else {
					ap(cnt)++
				}
			loop
			if ( cnt \ 2 == 0 ) {
				if ( cnt < 8 ) {
					if ( cnt / 3 < am ) {
						snd SOUNDLIST_ATK_FIRE
					}
				}
			}
			if ( af == 0 ) {
				break
			}
			await cfg_animewait + 40
			redraw 1
		loop
		await cfg_animewait
		redraw 0
		pos 0, 0
		gmode 0
		gcopy 4, 0, 0, windoww, windowh
		gmode 2
		redraw 1
		goto *anime_SWEND1
	}
	if ( _switch_val == ANIMATION_CRUSH | _switch_sw ) {
		_switch_sw = 0
		_switch_sw++
	}
	if ( _switch_val == ANIMATION_SAND | _switch_sw ) {
		_switch_sw = 0
		aniref = 4
		ax = (sx - scx) * inf_tiles + inf_screenx
		ay = (sy - scy) * inf_tiles + inf_screeny
		if ( animeid == ANIMATION_CRUSH ) {
			preparePicItem xy2pic(17, 0), 0
		}
		else {
			preparePicItem xy2pic(18, 0), 0
		}
		repeat aniref
			sx(cnt) = rnd(24) - 12
			sy(cnt) = rnd(8)
		loop
		gsel 4
		gmode 0
		pos 0, 0
		gcopy 0, ax - 16, ay - 16, 64, 64
		gmode 2
		gsel 0
		repeat 5
			redraw 0
			gmode 2
			cnt2 = cnt * 2
			gmode 2, inf_tiles, inf_tiles
			repeat aniref
				pos ax + 24 + sx(cnt) + (sx(cnt) < 4) * ((1 + (cnt \ 2 == 0)) * (-1)) * cnt2 + (sx(cnt) > (-4)) * (1 + (cnt \ 2 == 0)) * cnt2, ay + sy(cnt) + cnt2 * cnt2 / 3
				grotate 1, 864, 0, 0.4 * cnt, 24, 24
			loop
			pos ax + sx + 24, ay + sy + 10
			grotate 1, 0, 960, 0.5 * cnt - 0.8, cnt * 10 + aniref * 3, cnt * 10 + aniref * 3
			redraw 1
			redraw 0
			gmode 0
			pos ax - 16, ay - 16
			pos ax - 16, ay - 16
			gcopy 4, 0, 0, 64, 64
			gmode 2
			await cfg_animewait
		loop
		goto *anime_SWEND1
	}
*anime_SWEND1
	gmode 2
	anicol = 0
	return

*screen_setPos
	if ( scposval == 0 ) {
		if ( scroll ) {
			sx = cdata(CDATA_X_NEW, CHARA_PLAYER) - scx, cdata(CDATA_X_NEW, CHARA_PLAYER)
			sy = cdata(CDATA_Y_NEW, CHARA_PLAYER) - scy, cdata(CDATA_Y_NEW, CHARA_PLAYER)
		}
		else {
			sx = cdata(CDATA_X, CHARA_PLAYER) - scx, cdata(CDATA_X, CHARA_PLAYER)
			sy = cdata(CDATA_Y, CHARA_PLAYER) - scy, cdata(CDATA_Y, CHARA_PLAYER)
		}
	}
	else {
		sx = tlocx - scx, tlocx
		sy = tlocy - scy, tlocy
	}
	if ( gdata(GDATA_AREA) == AREA_PET_ARENA ) {
		sx = cdata(CDATA_X, camera) - scx, cdata(CDATA_X, camera)
		sy = cdata(CDATA_Y, camera) - scy, cdata(CDATA_Y, camera)
	}
	if ( cfg_alwayscenter ) {
		scx = sx + scx - inf_screenw / 2
		scy = sy + scy - inf_screenh / 2
	}
	else {
		if ( sy < scposy ) {
			scy = sy(1) - scposy
		}
		if ( sx < 6 ) {
			scx = sx(1) - 6
		}
		if ( sx > inf_screenw - 7 ) {
			scx = sx(1) - (inf_screenw - 7)
		}
		if ( sy > inf_screenh - scposy - 1 ) {
			scy = sy(1) - (inf_screenh - scposy - 1)
		}
	}
	if ( scx + inf_screenw >= mdata(MDATA_WIDTH) ) {
		scx = mdata(MDATA_WIDTH) - inf_screenw
	}
	if ( scy + inf_screenh >= mdata(MDATA_HEIGHT) ) {
		scy = mdata(MDATA_HEIGHT) - inf_screenh
	}
	locvar_screen_setPos_miny = 0
	if ( cfg_showtoptilecutoff & inf_tilecutoffy != 0 ) {
		locvar_screen_setPos_miny = -1
	}
	if ( scy < locvar_screen_setPos_miny ) {
		scy = locvar_screen_setPos_miny
	}
	if ( scx < 0 ) {
		scx = 0
	}
	return

*los
	memset slight, 0, (inf_screenw + 4) * (inf_screenh + 4) * 4
	msync++
	sy(2) = cdata(CDATA_Y, CHARA_PLAYER) - MAX_FOV / 2, cdata(CDATA_Y, CHARA_PLAYER) + MAX_FOV / 2, MAX_FOV / 2 - cdata(CDATA_Y, CHARA_PLAYER)
	sx(3) = cdata(CDATA_X, CHARA_PLAYER) - MAX_FOV / 2
	if ( cfg_scroll ) {
		repw = inf_screenw + 2, scx - 1
		reph = inf_screenh + 2, scy - 1
	}
	else {
		repw = inf_screenw, scx
		reph = inf_screenh, scy
	}
	ly = 1 + (cfg_scroll == 0)
	repeat reph, reph(1)
		sy = cnt
		lx = 1 + (cfg_scroll == 0)
		if ( sy < 0 | sy >= mdata(MDATA_HEIGHT) ) {
			repeat repw, repw(1)
				slight(lx + 1, ly) += 1
				slight(lx - 1, ly) += 8
				slight(lx, ly - 1) += 2
				slight(lx, ly + 1) += 4
				slight(lx + 1, ly + 1) += 16
				slight(lx - 1, ly - 1) += 32
				slight(lx + 1, ly - 1) += 64
				slight(lx - 1, ly + 1) += 128
				lx++
			loop
			ly++
			continue
		}
		repeat repw, repw(1)
			sx = cnt
			if ( sx < 0 | sx >= mdata(MDATA_WIDTH) ) {
				slight(lx + 1, ly) += 1
				slight(lx - 1, ly) += 8
				slight(lx, ly - 1) += 2
				slight(lx, ly + 1) += 4
				slight(lx + 1, ly + 1) += 16
				slight(lx - 1, ly - 1) += 32
				slight(lx + 1, ly - 1) += 64
				slight(lx - 1, ly + 1) += 128
				lx++
				continue
			}
			if ( gdata(GDATA_AREA) == AREA_PET_ARENA ) {
				goto *los_jump
			}
			if ( cdata(CDATA_CONDITION_BLIND, CHARA_PLAYER) != 0 ) {
				if ( sx != cdata(CDATA_X, CHARA_PLAYER) | sy != cdata(CDATA_Y, CHARA_PLAYER) ) {
					goto *los_jump2
				}
			}
			if ( sy > sy(2) ) {
				if ( sy < sy(3) ) {
					sx(2) = fovlist(0, sy + sy(4)) + sx(3)
					if ( sx >= sx(2) ) {
						if ( sx < fovlist(1, sy + sy(4)) + sx(3) ) {
							if ( fov_los(cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), sx, sy) ) {
*los_jump
								mapsync(sx, sy) = msync
								if ( map(sx, sy, 1) != 0 ) {
									cdata(CDATA_SYNC, map(sx, sy, 1) - 1) = msync
								}
								if ( map(sx, sy, 2) != map(sx, sy, 0) ) {
									map(sx, sy, 2) = map(sx, sy, 0)
									gosub *screen_drawRader
								}
								map(sx, sy, 5) = map(sx, sy, 4)
								lx++
								continue
							}
						}
					}
				}
			}
*los_jump2
			slight(lx, ly) += 1000
			slight(lx + 1, ly) += 1
			slight(lx - 1, ly) += 8
			slight(lx, ly - 1) += 2
			slight(lx, ly + 1) += 4
			slight(lx + 1, ly + 1) += 16
			slight(lx - 1, ly - 1) += 32
			slight(lx + 1, ly - 1) += 64
			slight(lx - 1, ly + 1) += 128
			lx++
		loop
		ly++
	loop
	return

*los_Loc
	memset slight, 0, (inf_screenw + 4) * (inf_screenh + 4) * 4
	msync++
	sy(2) = tlocinity - val / 2, tlocinity + val / 2, val / 2 - tlocinity
	sx(3) = tlocinitx - val / 2 - 2
	if ( cfg_scroll ) {
		repw = inf_screenw + 2, scx - 1
		reph = inf_screenh + 2, scy - 1
	}
	else {
		repw = inf_screenw, scx
		reph = inf_screenh, scy
	}
	ly = 1 + (cfg_scroll == 0)
	repeat reph, reph(1)
		sy = cnt
		lx = 1 + (cfg_scroll == 0)
		if ( sy < 0 | sy >= mdata(MDATA_HEIGHT) ) {
			repeat repw, repw(1)
				slight(lx + 1, ly) += 1
				slight(lx - 1, ly) += 8
				slight(lx, ly - 1) += 2
				slight(lx, ly + 1) += 4
				slight(lx + 1, ly + 1) += 16
				slight(lx - 1, ly - 1) += 32
				slight(lx + 1, ly - 1) += 64
				slight(lx - 1, ly + 1) += 128
				lx++
			loop
			ly++
			continue
		}
		repeat repw, repw(1)
			sx = cnt
			if ( sx < 0 | sx >= mdata(MDATA_WIDTH) ) {
				slight(lx + 1, ly) += 1
				slight(lx - 1, ly) += 8
				slight(lx, ly - 1) += 2
				slight(lx, ly + 1) += 4
				slight(lx + 1, ly + 1) += 16
				slight(lx - 1, ly - 1) += 32
				slight(lx + 1, ly - 1) += 64
				slight(lx - 1, ly + 1) += 128
				lx++
				continue
			}
			if ( dist(sx, sy, tlocinitx, tlocinity) < val ) {
				mapsync(sx, sy) = msync
				if ( map(sx, sy, 1) != 0 ) {
					cdata(CDATA_SYNC, map(sx, sy, 1) - 1) = msync
				}
				if ( map(sx, sy, 2) != map(sx, sy, 0) ) {
					map(sx, sy, 2) = map(sx, sy, 0)
				}
				map(sx, sy, 5) = map(sx, sy, 4)
				lx++
				continue
			}
			slight(lx, ly) += 1000
			slight(lx + 1, ly) += 1
			slight(lx - 1, ly) += 8
			slight(lx, ly - 1) += 2
			slight(lx, ly + 1) += 4
			slight(lx + 1, ly + 1) += 16
			slight(lx - 1, ly - 1) += 32
			slight(lx + 1, ly - 1) += 64
			slight(lx - 1, ly + 1) += 128
			lx++
		loop
		ly++
	loop
	return

*los_draw
	screendrawhack = 2
	cell_draw
	screendrawhack = 3
	if ( gdata(GDATA_AREA) == AREA_PET_ARENA ) {
		repeat MAX_CHARA_TOTAL
			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
				continue
			}
			ap = 0
			if ( cdata(CDATA_RELATION, cnt) == 10 ) {
				ap = 1, 1, 25
			}
			if ( cdata(CDATA_RELATION, cnt) == (-3) ) {
				ap = 25, 1, 1
			}
			if ( cnt == CHARA_PLAYER ) {
				ap = 0
			}
			if ( ap != 0 ) {
				sx = (cdata(CDATA_X, cnt) - scx) * inf_tiles + inf_screenx
				sy = (cdata(CDATA_Y, cnt) - scy) * inf_tiles + inf_screeny
				if ( sx >= 0 ) {
					if ( sy >= 0 ) {
						if ( sx - inf_screenx < (inf_screenw - 1) * inf_tiles ) {
							if ( sy < (inf_screenh - 1) * inf_tiles ) {
								pos sx, sy * (sy > 0)
								gfini inf_tiles, inf_tiles + (sy < 0) * inf_screeny
								gfinc ap, ap(1), ap(2)
								if ( cnt == camera ) {
									gmode 4, , , 120
									color 0, 0, 0
									pos sx + 36, sy + 32
									gcopy 3, 240, 410, 24, 16
									gmode 2
								}
							}
						}
					}
				}
			}
		loop
	}
	screendrawhack = 4
	sy = 84 * cdata(CDATA_Y, CHARA_PLAYER) / mdata(MDATA_HEIGHT)
	if ( sy < 2 ) {
		sy = 2
	}
	else {
		if ( sy > 84 - 8 ) {
			sy = 84 - 8
		}
	}
	sx = 120 * cdata(CDATA_X, CHARA_PLAYER) / mdata(MDATA_WIDTH)
	if ( sx < 2 ) {
		sx = 2
	}
	else {
		if ( sx > 120 - 8 ) {
			sx = 120 - 8
		}
	}
	if ( raderx != (-1) ) {
		pos inf_raderx + raderx, inf_radery + radery
		gcopy 3, 688 + raderx, 528 + radery, 6, 6
	}
	raderx = sx
	radery = sy
	pos inf_raderx + sx, inf_radery + sy
	gcopy 3, 15, 338, 6, 6
	losmode = 0
	screendrawhack = 5
	if ( cfg_env ) {
		if ( gdata(GDATA_WEATHER) == WEATHER_RAIN ) {
			gosub *screen_rain
		}
		if ( gdata(GDATA_WEATHER) == WEATHER_HARD_RAIN ) {
			gosub *screen_hardRain
		}
		if ( gdata(GDATA_WEATHER) == WEATHER_SNOW ) {
			gosub *screen_snow
		}
		if ( gdata(GDATA_WEATHER) == WEATHER_ETHER ) {
			gosub *screen_ether
		}
	}
	if ( gdata(GDATA_AREA) == AREA_AMUR_CAGE ) {
		if ( gdata(GDATA_LEVEL) >= 20 ) {
			gosub *screen_hardRainAmurCage
		}
	}
	screendrawhack = 0
	return

*screen_hardRainAmurCage
	repeat maxrain * (1 + (mdata(MDATA_TYPE) == MAP_TYPE_WORLD))
		s_p = rnd(20)
		color 255 - s_p, 20 - s_p, 20 - s_p
		line rainx(cnt) - 40, rainy(cnt) - cnt \ 5 - 4, rainx(cnt) - 39 + cnt \ 2, rainy(cnt)
		if ( rainx(cnt) == 0 ) {
			rainx(cnt) = rnd(windoww) + 40
		}
		else {
			rainx(cnt) += 1
		}
		if ( rainy(cnt) == 0 ) {
			rainy(cnt) = rnd(windowh - inf_verh) - 6
		}
		else {
			rainy(cnt) += 24 + cnt \ 8
			if ( rainy(cnt) > windowh - inf_verh - 10 ) {
				rainy(cnt) = 0
				rainx(cnt) = 0
			}
		}
	loop
	return

*screen_rain

	/********** ORIGINAL - BEGINNING **********

	if ( mdata(MDATA_FIELD) != 2 ) {
		return
	}

	 ********** ORIGINAL - ENDING **********/

	/********** ANNA CUSTOM - BEGINNING **********/ // Display Weather Everywhere.

	if ( mdata(MDATA_FIELD) != 2 & TweakData(TWEAK_MISC_WEATHER_EVERYWHERE, TWEAK_CATEGORY_MISC) == 0 ) {
		return
	}

	/********** ANNA CUSTOM - ENDING **********/

	repeat maxrain * (1 + (mdata(MDATA_TYPE) == MAP_TYPE_WORLD))
		s_p = rnd(100)
		color 170 - s_p, 200 - s_p, 250 - s_p
		line rainx(cnt) - 40, rainy(cnt) - cnt \ 3 - 1, rainx(cnt) - 39 + cnt \ 2, rainy(cnt)
		if ( rainx(cnt) == 0 ) {
			rainx(cnt) = rnd(windoww) + 40
		}
		else {
			rainx(cnt) += 2
		}
		if ( rainy(cnt) == 0 ) {
			rainy(cnt) = rnd(windowh - inf_verh) - 6
		}
		else {
			rainy(cnt) += 16 + cnt \ 8
			if ( rainy(cnt) > windowh - inf_verh - 6 ) {
				rainy(cnt) = 0
				rainx(cnt) = 0
			}
		}
	loop
	weatherbk = gdata(GDATA_WEATHER)
	return

*screen_hardRain

	/********** ORIGINAL - BEGINNING **********

	if ( mdata(MDATA_FIELD) != 2 ) {
		return
	}

	 ********** ORIGINAL - ENDING **********/

	/********** ANNA CUSTOM - BEGINNING **********/ // Display Weather Everywhere.

	if ( mdata(MDATA_FIELD) != 2 & TweakData(TWEAK_MISC_WEATHER_EVERYWHERE, TWEAK_CATEGORY_MISC) == 0 ) {
		return
	}

	/********** ANNA CUSTOM - ENDING **********/

	repeat maxrain * (1 + (mdata(MDATA_TYPE) == MAP_TYPE_WORLD))
		s_p = rnd(100)
		color 170 - s_p, 200 - s_p, 250 - s_p
		line rainx(cnt) - 40, rainy(cnt) - cnt \ 5 - 4, rainx(cnt) - 39 + cnt \ 2, rainy(cnt)
		if ( rainx(cnt) == 0 ) {
			rainx(cnt) = rnd(windoww) + 40
		}
		else {
			rainx(cnt) += 1
		}
		if ( rainy(cnt) == 0 ) {
			rainy(cnt) = rnd(windowh - inf_verh) - 6
		}
		else {
			rainy(cnt) += 24 + cnt \ 8
			if ( rainy(cnt) > windowh - inf_verh - 10 ) {
				rainy(cnt) = 0
				rainx(cnt) = 0
			}
		}
	loop
	weatherbk = gdata(GDATA_WEATHER)
	return

*screen_snow

	/********** ORIGINAL - BEGINNING **********

	if ( mdata(MDATA_FIELD) != 2 ) {
		return
	}

	 ********** ORIGINAL - ENDING **********/

	/********** ANNA CUSTOM - BEGINNING **********/ // Display Weather Everywhere.

	if ( mdata(MDATA_FIELD) != 2 & TweakData(TWEAK_MISC_WEATHER_EVERYWHERE, TWEAK_CATEGORY_MISC) == 0 ) {
		return
	}

	/********** ANNA CUSTOM - ENDING **********/

	color 0, 0, 0
	repeat maxrain * 2
		if ( cnt \ 30 == 0 ) {
			gmode 4, 8, 8, 100 + cnt \ 150
		}
		if ( rainy(cnt) == 0 | weatherbk != gdata(GDATA_WEATHER) ) {
			rainy(cnt) = rnd(windowh / 2) * (-1)
			rainx(cnt) = rnd(windoww)
		}
		else {
			rainx(cnt) += rnd(3) - 1
			rainy(cnt) += rnd(2) + cnt \ 5
			if ( rainy(cnt) > windowh - inf_verh - 10 | rnd(500) == 0 ) {
				rainy(cnt) = 0
				rainx(cnt) = 0
			}
		}
		pos rainx(cnt), rainy(cnt)
		gcopy 3, rainx(cnt) \ 2 * 8, 600 + cnt \ 6 * 8
	loop
	weatherbk = gdata(GDATA_WEATHER)
	gmode 2
	return

*screen_ether

	/********** ORIGINAL - BEGINNING **********

	if ( mdata(MDATA_FIELD) != 2 ) {
		return
	}

	 ********** ORIGINAL - ENDING **********/

	/********** ANNA CUSTOM - BEGINNING **********/ // Display Weather Everywhere.

	if ( mdata(MDATA_FIELD) != 2 & TweakData(TWEAK_MISC_WEATHER_EVERYWHERE, TWEAK_CATEGORY_MISC) == 0 ) {
		return
	}

	/********** ANNA CUSTOM - ENDING **********/

	color 0, 0, 0
	repeat maxrain
		if ( cnt \ 20 == 0 ) {
			gmode 4, 8, 8, 100 + cnt \ 150
		}
		if ( rainy(cnt) <= 0 | weatherbk != gdata(GDATA_WEATHER) ) {
			rainy(cnt) = windowh - inf_verh - 8 - rnd(100)
			rainx(cnt) = rnd(windoww)
		}
		else {
			pos rainx(cnt), rainy(cnt)
			gcopy 3, 16 + rainx(cnt) \ 2 * 8, 600 + cnt \ 6 * 8
			rainx(cnt) += rnd(3) - 1
			rainy(cnt) -= rnd(2) + cnt \ 5
		}
	loop
	weatherbk = gdata(GDATA_WEATHER)
	gmode 2
	return

*screen_scroll
	if ( abs(cdata(CDATA_X_NEW, CHARA_PLAYER) - cdata(CDATA_X, CHARA_PLAYER)) > 1 ) {
		return
	}
	if ( abs(cdata(CDATA_Y_NEW, CHARA_PLAYER) - cdata(CDATA_Y, CHARA_PLAYER)) > 1 ) {
		return
	}
	scrollp = cfg_walkwait
	if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
		scrollp = 6
		if ( TweakData(TWEAK_CONVENIENCE_ALLOW_RUNNING_IN_WORLD_MAP, TWEAK_CATEGORY_CONVENIENCE) == FALSE ) {
			keybd_wait = 1000
		}
		if ( gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_KIND) != VEHICLE_MAGIC_LOCOMOTIVE ) {
			if ( chipm(CHIPM_ROLE, map(cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), MAP_TILE_ID)) == MAP_CHIP_ROLE_SNOW ) {
				scrollp = 9
			}
		}
		if ( keybd_wait >= 100000 ) {
			scrollp = 1
		}
	}
	else {
		if ( keybd_wait > cfg_startrun ) {
			scrollp = 3
			if ( cfg_runscroll == 0 ) {
				return
			}
			if ( keybd_wait >= 100000 ) {
				scrollp = 1
			}
		}
	}
	scxbk2 = scx
	scybk2 = scy
	scroll = 1
	gosub *screen_setPos
	scroll = 0
	scxbk = scx
	scybk = scy
	scx = scxbk2
	scy = scybk2
	scrollanime = 1
	repeat scrollp - 1, 1
		if ( cnt \ 2 == 1 ) {
			scrturn++
		}
		redraw 0
		sxfix = (cdata(CDATA_X_NEW, CHARA_PLAYER) - cdata(CDATA_X, CHARA_PLAYER)) * cnt * inf_tiles / scrollp * (-1)
		syfix = (cdata(CDATA_Y_NEW, CHARA_PLAYER) - cdata(CDATA_Y, CHARA_PLAYER)) * cnt * inf_tiles / scrollp * (-1)
		gsel 4
		pos 0, 0
		gmode 0
		gcopy 0, 0, windowh - inf_verh, windoww, inf_tiles
		gsel 0
		gmode 2
		gosub *los_draw
		gmode 0
		pos 0, windowh - inf_verh
		gcopy 4, 0, 0, windoww, inf_tiles
		gmode 2
		gosub *screen_drawStatus
		gmode 2
		redraw 1
		await 40
	loop
	scrollanime = 0
	return

*rader_preDraw
	gsel 3
	repeat mdata(MDATA_HEIGHT)
		sy = cnt
		repeat mdata(MDATA_WIDTH)
			sx = cnt
			sy(1) = 84 * sy / mdata(MDATA_HEIGHT)
			sx(1) = 120 * sx / mdata(MDATA_WIDTH)
			pos 688 + sx(1), 528 + sy(1)
			gcopy 2, map(sx, sy, 0) \ 33 * inf_tiles + sx \ 16, map(sx, sy, 0) / 33 * inf_tiles + sy \ 12, raderw, raderh
			pos 688 + sx(1), 528 + sy(1)
			gfini raderw, raderh
			if ( chipm(CHIPM_ATTRIB, map(sx, sy, 0)) & CHIPM_ATTRIB_CANT_PASS ) {
				gfdec2 100, 100, 100
			}
		loop
	loop
	pos 688, 528

	/********** ORIGINAL - BEGINNING **********

	gfini raderw * mdata(MDATA_WIDTH), raderh * mdata(MDATA_HEIGHT)

	 ********** ORIGINAL - ENDING **********/

	/********** RUIN0X11 - BEGINNING **********/ // Prevent glitches with Jaldabaoth's special graphics.

	// This has the potential to blit into a frame of Jaldabaoth's wings and
	// the enrage emote, so limit the manipulated area.
	gfini limit(raderw * mdata(MDATA_WIDTH), 0, 212), limit(raderh * mdata(MDATA_HEIGHT), 0, 96)

	/********** RUIN0X11 - ENDING **********/

	gfinc 10, 10, 10
	gsel 0
	return

*screen_drawRader
	sy(1) = 84 * sy / mdata(MDATA_HEIGHT)
	sx(1) = 120 * sx / mdata(MDATA_WIDTH)
	pos inf_raderx + sx(1), inf_radery + sy(1)
	gcopy 3, 688 + sx(1), 528 + sy(1), raderw, raderh
	return

*screen_fadeIn2
	gsel BUFFER_BUF
	gmode 0
	pos 0, 0
	gcopy BUFFER_SCREEN, 0, 0, windoww, windowh
	gsel BUFFER_SCREEN
	gmode 0
	repeat 50
		await 20
		redraw 0
		pos 0, 0
		gfini windoww, windowh - 88
		gfdec2 5, 105, 105
		redraw 1
	loop
	color 250, 0, 0
	repeat 30
		gmode 4, 0, 0, 10 + cnt * 5
		await 20
		redraw 0
		pos 0, 0
		gcopy BUFFER_BUF, 0, 0, windoww, windowh
		redraw 1
	loop
	redraw 0
	gmode 2
	return

*screen_fadeIn3
	gsel BUFFER_BUF
	gmode 0
	pos 0, 0
	gcopy BUFFER_SCREEN, 0, 0, windoww, windowh
	gsel BUFFER_SCREEN
	gmode 0
	repeat 50
		await 20
		redraw 0
		pos 0, 0
		gfini windoww, windowh - 88
		gfinc 5, 5, 5
		redraw 1
	loop
	color 5, 5, 5
	repeat 30
		gmode 4, 0, 0, 256 - cnt * 5
		await 20
		redraw 0
		pos 0, 0
		gcopy BUFFER_BUF, 0, 0, windoww, windowh
		redraw 1
	loop
	redraw 0
	gmode 2
	return

*screen_fade
	gsel 4
	gmode 0
	pos 0, 0
	gcopy 0, 0, 0, windoww, windowh
	gsel 0
	gmode 0
	repeat 50
		await 20
		redraw 0
		pos 0, 0
		gfini windoww, windowh - 88
		gfdec2 5, 5, 5
		redraw 1
	loop
	color 500, 500, 500
	repeat 30
		gmode 4, 0, 0, 10 + cnt * 5
		await 20
		redraw 0
		pos 0, 0
		gcopy 4, 0, 0, windoww, windowh
		redraw 1
	loop
	redraw 0
	gmode 2
	return

*screen_fadeIn
	repeat 50
		await 20
		redraw 0
		pos 0, 0
		gfini windoww, windowh
		gfdec2 5, 5, 5
		redraw 1
	loop
	redraw 0
	return

*screen_fadeOut
	repeat 30
		gmode 4, 0, 0, 10 + cnt * 5
		await 20
		redraw 0
		pos 0, 0
		gcopy 4, 0, 0, windoww, windowh
		redraw 1
	loop
	redraw 0
	gmode 2
	return

*screen_drawEventFull
	redraw 0
	color 0, 0, 0
	boxf
	evx = 12
	evy = 14
	evscry = 40
	evtiles = 48
	evscrh = windowh / evtiles - 1
	evscrw = windoww / evtiles + 2
	gosub *screen_drawEventMap
	redraw 1
	return

*screen_drawEventMap
	repeat evscrh
		y = cnt
		dy = cnt + evy
		if ( dy >= mdata(MDATA_HEIGHT) ) {
			dy = mdata(MDATA_HEIGHT)
		}
		repeat evscrw
			x = cnt
			dx = cnt + evx
			if ( dx >= mdata(MDATA_WIDTH) ) {
				dx = mdata(MDATA_WIDTH)
			}
			pos x * evtiles, y * evtiles
			gmode 0, inf_tiles, inf_tiles
			ap = map(dx, dy, 0)
			grotate 2, ap \ 33 * inf_tiles, ap / 33 * inf_tiles, 0, evtiles, evtiles
		loop
	loop
	return

*fishing_draw
	fishdir = 0, 1, 3, 2
	fishdir = fishdir(cdata(CDATA_DIR, CHARA_PLAYER))
	randomize cdata(CDATA_TURN, CHARA_PLAYER) / 3
	gmode 2
	if ( fishanime == 4 ) {
		sx = (fishx - scx) * inf_tiles + inf_screenx
		sy = (fishy - scy) * inf_tiles + inf_screeny
		if ( fishanime(1) > 15 ) {
			sx += (cdata(CDATA_X, CHARA_PLAYER) - fishx) * 8 * (fishanime(1) - 15)
			sy += (cdata(CDATA_Y, CHARA_PLAYER) - fishy) * 8 * (fishanime(1) - 15) + fishanime(1)
			pos sx, sy - 44
			gcopy 9, 144 + fishanime(1) / 2 \ 2 * 48, 0, 48, 48
		}
		else {
			pos sx, sy - fishanime(1) * 3 + 14
			gcopy 9, 144 + fishanime(1) \ 2 * 48, 0, 48, limit(fishanime(1) * 5, 1, 48)
		}
		return
	}
	sx = (cdata(CDATA_X, CHARA_PLAYER) - scx) * inf_tiles + inf_screenx + 20
	if ( fishdir == 1 ) {
		sx -= 48
	}
	if ( fishdir == 3 ) {
		sx += 48
	}
	sy = (cdata(CDATA_Y, CHARA_PLAYER) - scy) * inf_tiles + inf_screeny + 20
	if ( fishdir == 0 ) {
		sy += 48
	}
	if ( fishdir == 2 ) {
		sy -= 48
	}
	ap = rnd(2)
	if ( fishanime == 1 ) {
		ap = fishanime(1)
	}
	else {
		if ( fishanime >= 2 ) {
			ap = 10
		}
	}
	pos sx, sy - 5 + ap
	gcopy 9, 116, 18, 14, 10 - ap
	sx = (cdata(CDATA_X, CHARA_PLAYER) - scx) * inf_tiles + inf_screenx
	sy = (cdata(CDATA_Y, CHARA_PLAYER) - scy) * inf_tiles + inf_screeny
	gmode 2, 48, 48
	if ( fishdir == 0 ) {
		sx2 = inf_tiles / 2 + rnd(3) - 1
		sy2 = inf_tiles / 2 + 12
		gmode 2, 48, 48
		pos sx + sx2 + 1, sy + sy2 + 40
		grotate 9, 48, 0, 0, 48, 48
	}
	if ( fishdir == 1 ) {
		sx2 = inf_tiles / 2 - 26
		sy2 = inf_tiles / 2 - 12 + rnd(3) - 3
		pos sx + sx2 - 16, sy + sy2 + 25
		grotate 9, 48, 0, 0, 48, 48
	}
	if ( fishdir == 2 ) {
		sx2 = inf_tiles / 2 + rnd(3) + 1
		sy2 = inf_tiles / 2 - 46
	}
	if ( fishdir == 3 ) {
		sx2 = inf_tiles / 2 + 26
		sy2 = inf_tiles / 2 - 12 + rnd(3) - 3
		pos sx + sx2 + 14, sy + sy2 + 25
		grotate 9, 48, 0, 0, 48, 48
	}
	if ( fishdir == 2 ) {
		gmode 2, 48, 24
		pos sx + sx2, sy + sy2
		grotate 9, 0, 24, 0.5 * fishdir * 3.14, 48, 24
	}
	else {
		gmode 2, 48, 48
		pos sx + sx2, sy + sy2
		grotate 9, 0, 0, 0.5 * fishdir * 3.14, 48, 48
	}
	randomize
	return

#defcfunc carmor int carmor_arg1
	if ( cdata(CDATA_EQUIP_WEIGHT, carmor_arg1) >= 35000 ) {
		return SKILL_NORMAL_HEAVY_ARMOR
	}

	if ( cdata(CDATA_EQUIP_WEIGHT, carmor_arg1) >= 15000 ) {
		return SKILL_NORMAL_MEDIUM_ARMOR
	}

	return SKILL_NORMAL_LIGHT_ARMOR

#defcfunc cnveqweight int cnveqweight_arg1
	if ( cdata(CDATA_EQUIP_WEIGHT, cnveqweight_arg1) >= 35000 ) {
		return lang("(重装備)", "(Heavy)")
	}

	if ( cdata(CDATA_EQUIP_WEIGHT, cnveqweight_arg1) >= 15000 ) {
		return lang("(中装備)", "(Medium)")
	}

	return lang("(軽装備)", "(Light)")

#defcfunc calcexpalive int calcexpalive_arg1
	return calcexpalive_arg1 * 100

*calcBodyFix
	cdata(CDATA_BODY_SPEED_FIX, r1) = 0
	repeat MAX_EQUIP_SLOT_TOTAL, CDATA_STARTING_EQUIP_SLOTS
		if ( cdata(cnt, r1) != 0 ) {
			cdata(CDATA_BODY_SPEED_FIX, r1)++
		}
	loop
	if ( cdata(CDATA_BODY_SPEED_FIX, r1) > 13 ) {
		cdata(CDATA_BODY_SPEED_FIX, r1) = limit((cdata(CDATA_BODY_SPEED_FIX, r1) - 13) * 5, 0, 50)
	}
	else {
		cdata(CDATA_BODY_SPEED_FIX, r1) = 0
	}
	return

*calcBodyGain
	repeat MAX_EQUIP_SLOT_TOTAL, CDATA_STARTING_EQUIP_SLOTS
		if ( cdata(cnt, r1) != 0 ) {
			continue
		}
		if ( rnd(7) == 0 ) {
			cdata(cnt, r1) = EQUIP_SLOT_NECK * EXT_EQUIP_SLOTS
			if ( cm ) {
				break
			}
			else {
				txt lang(name(r1) + "の身体から新たな" + bodyn(EQUIP_SLOT_NECK) + "が生えてきた！", name(r1) + " grow" + _s(r1) + " a new " + bodyn(EQUIP_SLOT_NECK) + "!")
				break
			}
		}
		if ( rnd(9) == 0 ) {
			cdata(cnt, r1) = EQUIP_SLOT_BACK * EXT_EQUIP_SLOTS
			if ( cm ) {
				break
			}
			else {
				txt lang(name(r1) + "の身体から新たな" + bodyn(EQUIP_SLOT_BACK) + "が生えてきた！", name(r1) + " grow" + _s(r1) + " a new " + bodyn(EQUIP_SLOT_BACK) + "!")
				break
			}
		}
		if ( rnd(8) == 0 ) {
			cdata(cnt, r1) = EQUIP_SLOT_HAND * EXT_EQUIP_SLOTS
			if ( cm ) {
				break
			}
			else {
				txt lang(name(r1) + "の身体から新たな" + bodyn(EQUIP_SLOT_HAND) + "が生えてきた！", name(r1) + " grow" + _s(r1) + " a new " + bodyn(EQUIP_SLOT_HAND) + "!")
				break
			}
		}
		if ( rnd(4) == 0 ) {
			cdata(cnt, r1) = EQUIP_SLOT_RING * EXT_EQUIP_SLOTS
			if ( cm ) {
				break
			}
			else {
				txt lang(name(r1) + "の身体から新たな" + bodyn(EQUIP_SLOT_RING) + "が生えてきた！", name(r1) + " grow" + _s(r1) + " a new " + bodyn(EQUIP_SLOT_RING) + "!")
				break
			}
		}
		if ( rnd(6) == 0 ) {
			cdata(cnt, r1) = EQUIP_SLOT_ARM * EXT_EQUIP_SLOTS
			if ( cm ) {
				break
			}
			else {
				txt lang(name(r1) + "の身体から新たな" + bodyn(EQUIP_SLOT_ARM) + "が生えてきた！", name(r1) + " grow" + _s(r1) + " a new " + bodyn(EQUIP_SLOT_ARM) + "!")
				break
			}
		}
		if ( rnd(5) == 0 ) {
			cdata(cnt, r1) = EQUIP_SLOT_WAIST * EXT_EQUIP_SLOTS
			if ( cm ) {
				break
			}
			else {
				txt lang(name(r1) + "の身体から新たな" + bodyn(EQUIP_SLOT_WAIST) + "が生えてきた！", name(r1) + " grow" + _s(r1) + " a new " + bodyn(EQUIP_SLOT_WAIST) + "!")
				break
			}
		}
		if ( rnd(5) == 0 ) {
			cdata(cnt, r1) = EQUIP_SLOT_LEG * EXT_EQUIP_SLOTS
			if ( cm ) {
				break
			}
			else {
				txt lang(name(r1) + "の身体から新たな" + bodyn(EQUIP_SLOT_LEG) + "が生えてきた！", name(r1) + " grow" + _s(r1) + " a new " + bodyn(EQUIP_SLOT_LEG) + "!")
				break
			}
		}
		if ( rnd(1) == 0 ) {
			cdata(cnt, r1) = EQUIP_SLOT_HEAD * EXT_EQUIP_SLOTS
			if ( cm ) {
				break
			}
			else {
				txt lang(name(r1) + "の身体から新たな" + bodyn(EQUIP_SLOT_HEAD) + "が生えてきた！", name(r1) + " grow" + _s(r1) + " a new " + bodyn(EQUIP_SLOT_HEAD) + "!")
				break
			}
		}
		break
	loop
	gosub *calcBodyFix
	return

*calcLevelUp
	cdata(CDATA_EXP, r1) -= cdata(CDATA_EXP_TO_NEXT_LVL, r1)
	if ( cdata(CDATA_EXP, r1) < 0 ) {
		cdata(CDATA_EXP, r1) = 0
	}
	if ( cbit(CHARA_BIT_LIVESTOCK, r1) != 1 ) {
		cdata(CDATA_LEVEL, r1)++
		if ( cdata(CDATA_ROLE, r1) != ROLE_ADVENTURER ) {
			if ( r2 == 0 ) {
				txtef COLOR_GREEN
				if ( r1 == CHARA_PLAYER ) {
					txt lang(name(r1) + "はレベル" + cdata(CDATA_LEVEL, r1) + "になった！", name(r1) + " have gained a level.")
				}
				else {
					txt lang(name(r1) + "は成長した。", name(r1) + " " + have(r1) + " grown up.")
				}
			}
		}
		else {
			addnews 2, r1
		}
		p = limit(5 * (100 + sorg(SKILL_ATTR_LER, r1) * 10) / (300 + cdata(CDATA_LEVEL, r1) * 15) + 1, 5, 15)
		if ( r1 == CHARA_PLAYER ) {

			/********** ORIGINAL - BEGINNING ********** // Remove skill bonus limit.

			if ( gdata(GDATA_FLAG_SCROLL_OF_WITCHCRAFT_TOTAL_SPELL_BONUS) >= 100 ) {
				if ( gdata(GDATA_FLAG_GAME_MODE) != 2 & gdata(GDATA_FLAG_GAME_MODE) != 5 ) {
					gdata(GDATA_FLAG_SCROLL_OF_WITCHCRAFT_TOTAL_SPELL_BONUS) -= p
					gdata(GDATA_FLAG_SPELL_BONUS_OBTAINED) -= p
				}
			}

			 ********** ORIGINAL - ENDING **********/

			gdata(GDATA_FLAG_SCROLL_OF_WITCHCRAFT_TOTAL_SPELL_BONUS) += p
			gdata(GDATA_FLAG_SPELL_BONUS_OBTAINED) += p

			/********** ORIGINAL - BEGINNING ********** // Remove skill bonus limit.

			if ( gdata(GDATA_FLAG_SCROLL_OF_WITCHCRAFT_TOTAL_SPELL_BONUS) >= 100 ) {
				if ( gdata(GDATA_FLAG_GAME_MODE) != 2 & gdata(GDATA_FLAG_GAME_MODE) != 5 ) {
					snd SOUNDLIST_CHIME
					txtef COLOR_RED
					txt lang("注意！スペルボーナスは100以上あると新たに獲得できない。", "Caution! While the spell bonus is 100 or more, you cannot get new.")
				}
			}

			 ********** ORIGINAL - ENDING **********/

			if ( gdata(STARTING_GDATA_FLAG + 362) < 10 ) {
				gdata(STARTING_GDATA_FLAG + 362)++
			}
			if ( cdata(CDATA_LEVEL, r1) \ 5 == 0 ) {
				if ( cdata(CDATA_LEVEL_ORG, r1) < cdata(CDATA_LEVEL, r1) ) {
					if ( cdata(CDATA_LEVEL, r1) <= 50 ) {
						gdata(GDATA_TRAIT_POINT)++
					}
				}
			}
			gosub *learn_sp
			p += trait(TRAIT_RACE_BONUS_SKILLPOINT)
		}
		if ( r1 == CHARA_PLAYER ) {
			cdata(CDATA_SKILLPOINT, r1) += p
			gdata(GDATA_FLAG_PC_SKILL_BONUS_OBTAINED) += p
		}
		if ( cdatan(CDATAN_RACE, r1) == "mutant" | (r1 == CHARA_PLAYER & trait(TRAIT_NORMAL_OTHER_MUTANT) == 1) ) {
			if ( cdata(CDATA_LEVEL, r1) < 37 ) {
				if ( cdata(CDATA_LEVEL, r1) \ 3 == 0 ) {
					if ( cdata(CDATA_LEVEL_ORG, r1) < cdata(CDATA_LEVEL, r1) ) {
						gosub *calcBodyGain
					}
				}
			}
		}
		if ( cdata(CDATA_LEVEL_ORG, r1) < cdata(CDATA_LEVEL, r1) ) {
			cdata(CDATA_LEVEL_ORG, r1) = cdata(CDATA_LEVEL, r1)
		}
		if ( r1 >= MAX_CHARA_FOLLOWER ) {
			gosub *calcPowerUp
		}
		gosub *calcExpToNextLevel
		gosub *charaRefresh
	}
	return

*calcGodRecruitingPenalty
	repeat MAX_SKILL_ATTR - STARTING_SKILL_ATTR, STARTING_SKILL_ATTR
		if ( sdata(cnt + STARTING_SKILL_SPACT, r1) > 1000 * 50000 ) {
			sdata(cnt + STARTING_SKILL_SPACT, r1) = limit(sdata(cnt + STARTING_SKILL_SPACT, r1) / 5, 1000 * 50000, 1000 * 400000)
		}
	loop
	repeat MAX_SKILL_WEAPON - STARTING_SKILL_WEAPON, STARTING_SKILL_WEAPON
		sdata(cnt + STARTING_SKILL_SPACT, r1) = limit(sdata(cnt + STARTING_SKILL_SPACT, r1) / 2, 1, 1000 * 200000)
	loop
	repeat MAX_SKILL_NORMAL - STARTING_SKILL_NORMAL, STARTING_SKILL_NORMAL
		sdata(cnt + STARTING_SKILL_SPACT, r1) = limit(sdata(cnt + STARTING_SKILL_SPACT, r1) / 2, 1, 1000 * 200000)
	loop
	repeat MAX_SKILL_ACTIVE - STARTING_SKILL_ACTIVE, STARTING_SKILL_ACTIVE
		sdata(cnt + STARTING_SKILL_SPACT, r1) = limit(sdata(cnt + STARTING_SKILL_SPACT, r1) / 2, 1, 1000 * 200000)
	loop
	return

*calcMaileINITService
	repeat MAX_SKILL_ATTR - STARTING_SKILL_ATTR, STARTING_SKILL_ATTR
		if ( cnt == 18 ) {
			if ( sdata(cnt + STARTING_SKILL_SPACT, r1) > 1000 * 50000 ) {
				sdata(cnt + STARTING_SKILL_SPACT, r1) = limit(sdata(cnt + STARTING_SKILL_SPACT, r1) / 2, 1000 * 50000, 1000 * 1000000)
			}
		}
		if ( cnt != 18 & cnt != 19 ) {
			if ( sdata(cnt + STARTING_SKILL_SPACT, r1) > 1000 * 20000 ) {
				sdata(cnt + STARTING_SKILL_SPACT, r1) = limit(sdata(cnt + STARTING_SKILL_SPACT, r1) / 2, 1000 * 20000, 1000 * 1000000)
			}
		}
	loop
	repeat MAX_SKILL_WEAPON - STARTING_SKILL_WEAPON, STARTING_SKILL_WEAPON
		if ( sdata(cnt + STARTING_SKILL_SPACT, r1) > 1000 * 20000 ) {
			sdata(cnt + STARTING_SKILL_SPACT, r1) = limit(sdata(cnt + STARTING_SKILL_SPACT, r1) / 2, 1000 * 20000, 1000 * 1000000)
		}
	loop
	repeat MAX_SKILL_NORMAL - STARTING_SKILL_NORMAL, STARTING_SKILL_NORMAL
		if ( sdata(cnt + STARTING_SKILL_SPACT, r1) > 1000 * 20000 ) {
			sdata(cnt + STARTING_SKILL_SPACT, r1) = limit(sdata(cnt + STARTING_SKILL_SPACT, r1) / 2, 1000 * 20000, 1000 * 1000000)
		}
	loop
	repeat MAX_SKILL_ACTIVE - STARTING_SKILL_ACTIVE, STARTING_SKILL_ACTIVE
		if ( sdata(cnt + STARTING_SKILL_SPACT, r1) > 1000 * 20000 ) {
			sdata(cnt + STARTING_SKILL_SPACT, r1) = limit(sdata(cnt + STARTING_SKILL_SPACT, r1) / 2, 1000 * 20000, 1000 * 1000000)
		}
	loop
	return

*calcAdvRecruitingPenalty
	repeat MAX_SKILL_ATTR - STARTING_SKILL_ATTR, STARTING_SKILL_ATTR
		if ( sdata(cnt + STARTING_SKILL_SPACT, r1) > 1000 * 100000 ) {
			sdata(cnt + STARTING_SKILL_SPACT, r1) = limit(sdata(cnt + STARTING_SKILL_SPACT, r1) / 5, 1000 * 100000, 1000 * 1000000)
		}
	loop
	repeat MAX_SKILL_WEAPON - STARTING_SKILL_WEAPON, STARTING_SKILL_WEAPON
		sdata(cnt + STARTING_SKILL_SPACT, r1) = limit(sdata(cnt + STARTING_SKILL_SPACT, r1) / 2, 1, 1000 * 200000)
	loop
	repeat MAX_SKILL_NORMAL - STARTING_SKILL_NORMAL, STARTING_SKILL_NORMAL
		sdata(cnt + STARTING_SKILL_SPACT, r1) = limit(sdata(cnt + STARTING_SKILL_SPACT, r1) / 2, 1, 1000 * 200000)
	loop
	repeat MAX_SKILL_ACTIVE - STARTING_SKILL_ACTIVE, STARTING_SKILL_ACTIVE
		sdata(cnt + STARTING_SKILL_SPACT, r1) = limit(sdata(cnt + STARTING_SKILL_SPACT, r1) / 2, 1, 1000 * 200000)
	loop
	return

*calcSoulSpindlePenalty
	repeat MAX_SKILL_ATTR - STARTING_SKILL_ATTR, STARTING_SKILL_ATTR
		sdata(cnt + STARTING_SKILL_SPACT, r1) = limit(sdata(cnt + STARTING_SKILL_SPACT, r1), 1, 1000 * 50000)
	loop
	repeat MAX_SKILL_WEAPON - STARTING_SKILL_WEAPON, STARTING_SKILL_WEAPON
		sdata(cnt + STARTING_SKILL_SPACT, r1) = limit(sdata(cnt + STARTING_SKILL_SPACT, r1), 1, 1000 * 25000)
	loop
	repeat MAX_SKILL_NORMAL - STARTING_SKILL_NORMAL, STARTING_SKILL_NORMAL
		sdata(cnt + STARTING_SKILL_SPACT, r1) = limit(sdata(cnt + STARTING_SKILL_SPACT, r1), 1, 1000 * 25000)
	loop
	repeat MAX_SKILL_ACTIVE - STARTING_SKILL_ACTIVE, STARTING_SKILL_ACTIVE
		sdata(cnt + STARTING_SKILL_SPACT, r1) = limit(sdata(cnt + STARTING_SKILL_SPACT, r1), 1, 1000 * 25000)
	loop
	return

*calcPowerUp
	repeat MAX_SKILL_ATTR - STARTING_SKILL_ATTR, STARTING_SKILL_ATTR
		sdata(cnt + STARTING_SKILL_SPACT, r1) = limit(sdata(cnt + STARTING_SKILL_SPACT, r1) + 1000000 * rnd(3), 1, 2000 * 1000000)
	loop
	repeat length(mainskill)
		sdata(mainskill(cnt) + STARTING_SKILL_SPACT, r1) = limit(sdata(mainskill(cnt) + STARTING_SKILL_SPACT, r1) + 1000000 * rnd(3), 1, 2000 * 1000000)
	loop
	return

*calcExpToNextLevel
	cdata(CDATA_EXP_TO_NEXT_LVL, r1) = limit(cdata(CDATA_LEVEL, r1), 1, 200) * (limit(cdata(CDATA_LEVEL, r1), 1, 200) + 1) * (limit(cdata(CDATA_LEVEL, r1), 1, 200) + 2) * (limit(cdata(CDATA_LEVEL, r1), 1, 200) + 3) + 3000
	if ( cdata(CDATA_EXP_TO_NEXT_LVL, r1) > 100000000 | cdata(CDATA_EXP_TO_NEXT_LVL, r1) < 0 ) {
		cdata(CDATA_EXP_TO_NEXT_LVL, r1) = 100000000
	}
	return

*expDig
	skillexp SKILL_NORMAL_MINING, CHARA_PLAYER, 100
	return

*expLiteracy
	skillexp SKILL_NORMAL_LITERACY, CHARA_PLAYER, 15, 10, 100
	return

*expTrade
	if ( r2 >= (sdata(SKILL_NORMAL_NEGOTIATION, r1) + 10) * (sdata(SKILL_NORMAL_NEGOTIATION, r1) + 10) ) {
		skillexp SKILL_NORMAL_NEGOTIATION, r1, limit(r2 * r2 / (sdata(SKILL_NORMAL_NEGOTIATION, r1) * 5 + 10), 10, 1000), 10
	}
	return

*expOpenLock
	skillexp SKILL_NORMAL_LOCK_PICKING, r1, 100
	return

*expDetection
	skillexp SKILL_NORMAL_DETECTION, cc, gdata(GDATA_LEVEL) * 2 + 20
	return

*expCasting
	if ( tc != (-1) & charaGivesExp(tc) == FALSE ) {
		return
	}
	if ( r1 == CHARA_PLAYER ) {
		skillexp r2, r1, sdataref(SKILL_DATAREF_COST, r2) * 4 + 20, 4, 5
		skillexp SKILL_NORMAL_CASTING, r1, sdataref(SKILL_DATAREF_COST, r2) + 10, 5
	}
	else {
		skillexp SKILL_NORMAL_CASTING, r1, sdataref(SKILL_DATAREF_COST, r2) + 10, 5
	}
	return

*expMagicCapacity
	skillexp SKILL_NORMAL_MAGIC_CAPACITY, r1, limit(abs(cdata(CDATA_MP, r1)) * 400 / (cdata(CDATA_MAX_MP, r1) + 1), 1, 400)
	return

*expRegen
	if ( cdata(CDATA_HP, r1) != cdata(CDATA_MAX_HP, r1) ) {
		if ( sdata(SKILL_NORMAL_HEALING, r1) < sdata(SKILL_ATTR_CON, r1) ) {
			skillexp SKILL_NORMAL_HEALING, r1, 5 + sdata(SKILL_NORMAL_HEALING, r1), 1000
		}
	}
	if ( cdata(CDATA_MP, r1) != cdata(CDATA_MAX_MP, r1) ) {
		if ( sdata(SKILL_NORMAL_MEDITATION, r1) < sdata(SKILL_ATTR_MAG, r1) ) {
			skillexp SKILL_NORMAL_MEDITATION, r1, 5 + sdata(SKILL_NORMAL_MEDITATION, r1), 1000
		}
	}
	return

*expStealth
	if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
		if ( rnd(20) ) {
			return
		}
	}
	skillexp SKILL_NORMAL_STEALTH, r1, 2, 0, 1000
	return

*expInvesting
	skillexp SKILL_NORMAL_INVESTING, CHARA_PLAYER, 600
	return

*expWeightLifting
	if ( cdata(CDATA_BURDEN, CHARA_PLAYER) == 0 ) {
		return
	}
	if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
		if ( rnd(20) ) {
			return
		}
	}
	skillexp SKILL_NORMAL_WEIGHT_LIFTING, r1, 4, 0, 1000
	return

*expSwimming
	if ( cdata(CDATA_CONDITION_WET, r1) == 0 ) {
		return
	}
	if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
		if ( rnd(10) ) {
			return
		}
	}
	if ( cdata(CDATA_CONDITION_WET, r1) > 30 ) {
		return
	}
	skillexp SKILL_NORMAL_SWIMMING, r1, 4, 0, 1000
	return

*expArmor
	if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
		if ( rnd(20) ) {
			return
		}
	}
	if ( cdata(CDATA_EQUIP_WEIGHT, r1) >= 35000 ) {
		skillexp SKILL_NORMAL_HEAVY_ARMOR, r1, 20, 0, 1000
	}
	if ( cdata(CDATA_EQUIP_WEIGHT, r1) < 35000 & cdata(CDATA_EQUIP_WEIGHT, r1) >= 15000 ) {
		skillexp SKILL_NORMAL_MEDIUM_ARMOR, r1, 20, 0, 1000
	}
	if ( cdata(CDATA_EQUIP_WEIGHT, r1) < 15000 ) {
		skillexp SKILL_NORMAL_LIGHT_ARMOR, r1, 20, 0, 1000
	}
	return

*expRiding
	if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
		if ( rnd(20) ) {
			return
		}
	}
	if ( gdata(GDATA_RIDER) != 0 ) {
		if ( r1 == CHARA_PLAYER ) {
			skillexp SKILL_ACTIVE_RIDING, r1, 4, 0, 1000
		}
	}
	if ( r1 == gdata(GDATA_RIDER) ) {
		skillexp SKILL_ACTIVE_RIDING, r1, 4, 0, 1000
		if ( cdata(CDATA_RIDING, r1) == 1 ) {
			skillexp SKILL_ACTIVE_RIDING, r1, 4, 0, 1000
		}
	}
	return

*expMagicDevice
	if ( tc != (-1) & charaGivesExp(tc) == FALSE ) {
		return
	}
	skillexp SKILL_NORMAL_MAGIC_DEVICE, cc, 40
	return

*expFishing
	skillexp SKILL_NORMAL_FISHING, CHARA_PLAYER, 100
	return

*expMemorize
	skillexp SKILL_NORMAL_MEMORIZATION, CHARA_PLAYER, 30 + sdataref(SKILL_DATAREF_DIFF, efid)
	return

*expProduct
	skillexp r1, CHARA_PLAYER, limit(100 + r2 * 30, 100, 1500)
	return

#defcfunc calcattackhit int calcattackhit_arg1
	critical = 0
	if ( attackskill == SKILL_WEAPON_MARTIAL_ARTS ) {
		tohitorg = sdata(SKILL_ATTR_DEX, cc) / 4 + sdata(attackskill, cc) / 3 + sdata(attackskill, cc) + 50
		tohitfix = cdata(CDATA_ATTACK, cc)
		handmartial = 0
		repeat 30, 100
			if ( cdata(cnt, cc) / EXT_EQUIP_SLOTS == 5 ) {
				handmartial++
			}
			if ( handmartial >= 4 ) {
				break
			}
		loop
		tohitorg = tohitorg * (handmartial + 3) / 3
		pierce = limit(sdata(attackskill, cc) / 7 + 15, 15, 50)
		if ( cdata(CDATA_ATTACK_STYLE, cc) & STYLE_SHIELD ) {
			tohitorg = tohitorg * 100 / 130
		}
	}
	else {
		tohitorg = sdata(SKILL_ATTR_DEX, cc) / 4 + sdata(inv(INV_ITEM_SKILL_REF, cw), cc) / 3 + sdata(attackskill, cc) + 50
		tohitfix = cdata(CDATA_ATTACK, cc) + inv(INV_ITEM_ATTACK, cw) + inv(INV_ITEM_LEVEL, cw) + (inv(INV_ITEM_STATUS, cw) == ITEM_STATUS_BLESSED)
		if ( ammo != (-1) ) {
			tohitfix += inv(INV_ITEM_ATTACK, ammo) + inv(INV_ITEM_LEVEL, ammo)
		}
		calcweaponfix inv(INV_ITEM_ID, cw)
	}
	tohit = tohitorg + tohitfix
	if ( attackrange == 0 ) {
		if ( calcattackhit_arg1 == 0 ) {
			tohit = tohit * (10 - limit(dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), cdata(CDATA_X, tc), cdata(CDATA_Y, tc)) - 1, 0, 5)) / 10
		}
	}
	if ( ammoproc == ENCHANT_AMMO_BURST ) {
		tohit /= 2
	}
	if ( attackskill != SKILL_WEAPON_MARTIAL_ARTS ) {
		if ( attackrange & attackskill != SKILL_WEAPON_BLUNT | (attackrange != 1 & attackskill == SKILL_WEAPON_THROWING) ) {
			if ( calcattackhit_arg1 == 0 ) {
				rangedist = limit(dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), cdata(CDATA_X, tc), cdata(CDATA_Y, tc)) - 1, 0, 9)
				if ( longthrow == 100 ) {
					ltp = (rangedist + 14) / 2 * 10
					if ( rangedist <= 1 ) {
						ltp = 20
					}
					tohit = tohit * ltp / 100
					ltp = 0
				}
				else {
					if ( ammo != (-1) & findbuff(cc, BUFF_SHOOTING_MODE) != (-1) ) {
						tohit = tohit * 2
					}
					else {
						tohit = tohit * rangemap(rangedist) / 100
					}
				}
			}
		}
		else {
			if ( cdata(CDATA_ATTACK_STYLE, cc) & STYLE_TWOHAND ) {
				tohit += 25
				if ( inv(INV_ITEM_WEIGHT, cw) >= 4000 ) {
					tohit += sdata(SKILL_NORMAL_TWO_HAND, cc)
				}
			}
			if ( cdata(CDATA_ATTACK_STYLE, cc) & STYLE_DUAL_WIELD ) {
				if ( attacknum == 1 ) {
					if ( inv(INV_ITEM_WEIGHT, cw) >= 4000 ) {
						if ( findbuff(cc, BUFF_SUPER_ARMOR) == (-1) | cdata(CDATA_EQUIP_WEIGHT, cc) < 35000 ) {
							tohit -= (inv(INV_ITEM_WEIGHT, cw) - 4000 + 400) / (10 + sdata(SKILL_NORMAL_DUAL_WIELD, cc) / 5)
						}
					}
				}
				else {
					if ( inv(INV_ITEM_WEIGHT, cw) > 1500 ) {
						if ( findbuff(cc, BUFF_SUPER_ARMOR) == (-1) | cdata(CDATA_EQUIP_WEIGHT, cc) < 35000 ) {
							tohit -= (inv(INV_ITEM_WEIGHT, cw) - 1500 + 100) / (10 + sdata(SKILL_NORMAL_DUAL_WIELD, cc) / 5)
						}
					}
				}
			}
		}
	}
	if ( gdata(GDATA_RIDER) != 0 ) {
		if ( trait(TRAIT_NORMAL_OTHER_MOUNT_BOND) != 0 ) {
			if ( cc == CHARA_PLAYER ) {
				tohit = tohit * 100 / limit(150 - sdata(SKILL_ACTIVE_RIDING, cc) / 2, 105, 125)
				if ( attackskill != SKILL_WEAPON_MARTIAL_ARTS ) {
					if ( attackrange == 0 ) {
						if ( inv(INV_ITEM_WEIGHT, cw) >= 4000 ) {
							if ( findbuff(cc, BUFF_SUPER_ARMOR) == (-1) | cdata(CDATA_EQUIP_WEIGHT, cc) < 35000 ) {
								tohit -= (limit(inv(INV_ITEM_WEIGHT, cw), 1, 10000) - 4000 + 100) / (100 + sdata(SKILL_ACTIVE_RIDING, cc) * 2)
							}
						}
					}
				}
			}
			if ( cc == gdata(GDATA_RIDER) ) {
				tohit = tohit * 100 / limit(150 - sdata(SKILL_ATTR_STR, cc) / 2, 115, 150)
				if ( attackskill != SKILL_WEAPON_MARTIAL_ARTS ) {
					if ( attackrange == 0 ) {
						if ( inv(INV_ITEM_WEIGHT, cw) >= 4000 ) {
							tohit -= (limit(inv(INV_ITEM_WEIGHT, cw), 1, 10000) - 4000 + 100) / (100 + sdata(SKILL_ATTR_STR, cc))
						}
					}
				}
			}
		}
		else {
			if ( cc == CHARA_PLAYER ) {
				tohit = tohit * 100 / limit(150 - sdata(SKILL_ACTIVE_RIDING, cc) / 2, 115, 150)
				if ( attackskill != SKILL_WEAPON_MARTIAL_ARTS ) {
					if ( attackrange == 0 ) {
						if ( inv(INV_ITEM_WEIGHT, cw) >= 4000 ) {
							if ( findbuff(cc, BUFF_SUPER_ARMOR) == (-1) | cdata(CDATA_EQUIP_WEIGHT, cc) < 35000 ) {
								tohit -= (inv(INV_ITEM_WEIGHT, cw) - 4000 + 400) / (10 + sdata(SKILL_ACTIVE_RIDING, cc) / 5)
							}
						}
					}
				}
			}
			if ( cc == gdata(GDATA_RIDER) ) {
				tohit = tohit * 100 / limit(150 - sdata(SKILL_ATTR_STR, cc) / 2, 115, 150)
				if ( attackskill != SKILL_WEAPON_MARTIAL_ARTS ) {
					if ( attackrange == 0 ) {
						if ( inv(INV_ITEM_WEIGHT, cw) >= 4000 ) {
							tohit -= (inv(INV_ITEM_WEIGHT, cw) - 4000 + 400) / (10 + sdata(SKILL_ATTR_STR, cc) / 10)
						}
					}
				}
			}
		}
	}
	if ( attacknum > 1 ) {
		twohit = 100 - (attacknum - 1) * (10000 / (100 + sdata(SKILL_NORMAL_DUAL_WIELD, cc) * 10))
		if ( tohit > 0 ) {
			tohit = tohit * twohit / 100
		}
	}
	if ( calcattackhit_arg1 == 1 ) {
		return tohit
	}
	if ( TweakData(TWEAK_GAMEPLAY_CG_REVERT_SKILL_NERFS, TWEAK_CATEGORY_GAMEPLAY) == FALSE ) {
		if ( shadow == 100 ) {
			if ( tohit > 0 ) {
				tohit /= 2
			}
		}
	}
	if ( gdata(GDATA_TEMPORARY_FLAGS2) == 1200 ) {
		tohit = tohit * 2
	}
	dvfix = cdata(CDATA_DV_FIX, tc)
	if ( cdata(CDATA_DV, tc) < 0 ) {
		dvfix = 100
	}
	hoseidv = cdata(CDATA_DV, tc) * dvfix / 100 + dvfix - 100
	if ( cdata(CDATA_DRAIN_HP, tc) >= 100 ) {
		hoseidv = 0
	}
	evade = sdata(SKILL_ATTR_PER, tc) / 6 + sdata(SKILL_NORMAL_EVASION, tc) + hoseidv * 2 * 7 / 4 + 25 - cdata(CDATA_EVASION_PENALTY, tc) * 100
	if ( cdata(CDATA_DIRECTIVE_MODE, tc) == DIRECTIVE_MODE_DEFENSIVE ) {
		evade += sdata(SKILL_NORMAL_SHIELD, tc) + sdata(SKILL_ATTR_CON, tc) / 6
	}
	if ( cdata(CDATA_CONDITION_WET, tc) > 0 ) {
		if ( chipm(CHIPM_ROLE, map(cdata(CDATA_X, tc), cdata(CDATA_Y, tc), MAP_TILE_ID)) == MAP_CHIP_ROLE_WATER ) {
			if ( sdata(SKILL_NORMAL_SWIMMING, tc) < 50 ) {
				evade -= (50 - sdata(SKILL_NORMAL_SWIMMING, tc)) * 2
			}
			if ( sdata(SKILL_NORMAL_SWIMMING, tc) >= 50 ) {
				evade += sdata(SKILL_NORMAL_SWIMMING, tc) / 2
			}
		}
	}
    ; The player does not have an Analysis gauge; the slot is reused for the platinum count.
	if ( cdata(CDATA_ANALYSIS_GAUGE, cc) > 0 & cc != CHARA_PLAYER ) {
		if ( calcattackhit_arg1 == 0 ) {
			evade += (limit(sdata(SKILL_NORMAL_MEMORIZATION, tc) / 3, 1, 300) + 15) * (cdata(CDATA_ANALYSIS_GAUGE, cc) / 10 + 1)
			if ( sorg(SKILL_NORMAL_MEMORIZATION, tc) > 0 ) {
				skillexp SKILL_NORMAL_MEMORIZATION, tc, 4, 0, 1000
			}
		}
	}
	if ( cdata(CDATA_ANALYSIS_GAUGE, tc) > 0 & tc != CHARA_PLAYER ) {
		if ( calcattackhit_arg1 == 0 ) {
			evade -= (limit(sdata(SKILL_NORMAL_MEMORIZATION, cc) / 3, 1, 300) + 15) * (cdata(CDATA_ANALYSIS_GAUGE, tc) / 10 + 1)
			if ( sorg(SKILL_NORMAL_MEMORIZATION, cc) > 0 ) {
				skillexp SKILL_NORMAL_MEMORIZATION, cc, 4, 0, 1000
			}
		}
	}
	if ( evade <= 0 ) {
		evade = 1
	}
	if ( cbit(CHARA_BIT_AWAKE_NEAR_DEATH_EVASION, tc) ) {
		if ( cdata(CDATA_HP, tc) >= 0 ) {
			evade = evade * (100 + limit((cdata(CDATA_MAX_HP, tc) / (cdata(CDATA_HP, tc) + 1) - 1) * 20, 1, 200)) / 100
		}
	}
	if ( calcattackhit_arg1 == 2 ) {
		return evade
	}
	if ( gdata(GDATA_TIME_STOP_TIME) > 0 | gdata(GDATA_FLAG_STOP_TIME_OTHER) > 0 ) {
		if ( inv(INV_ITEM_ID, cw) == ITEM_ID_KALPA_HAND ) {
			critical = 1
		}
		return 1
	}
	if ( gdata(GDATA_TEMPORARY_FLAGS3) != 0 ) {
		if ( inv(INV_ITEM_ID, cw) != ITEM_ID_G3_EXA & inv(INV_ITEM_ID, cw) != ITEM_ID_DREADNOUGHT ) {
			evade = 0
			snd SOUNDLIST_PUNISH1
			animeload ANIMATION_UNISON_IMPACT1, tc
			critical = 1
			return 1
		}
	}
	if ( gdata(GDATA_TEMPORARY_FLAGS) == 100 ) {
		evade = 0
		if ( inv(INV_ITEM_ID, cw) != ITEM_ID_STONE_COIN ) {
			critical = 1
			return 1
		}
	}
	if ( ammoproc == ENCHANT_AMMO_MAGIC ) {
		critical = 1
		return 1
	}
	if ( cdata(CDATA_CONDITION_DIM, tc) != 0 ) {
		if ( rnd(8) == 0 ) {
			critical = 1
			return 1
		}
		if ( evade != 0 ) {
			evade /= 2
		}
	}
	encharge = 0
	if ( findbuff(cc, BUFF_CHARGE) != (-1) ) {
		repeat RANGE_INV_ITEM_ENCHANT
			if ( inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, cw) == 0 ) {
				break
			}
			if ( inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, cw) == ENCHANT_CHARGING ) {
				encharge = 100
				break
			}
		loop
		if ( encharge == 100 ) {
			critical = 1
			return 1
		}
		if ( rnd(2) == 0 ) {
			critical = 1
			return 1
		}
	}
	if ( sutemi == 100 ) {
		critical = 1
		return 1
	}
	if ( cdata(CDATA_TARGET, tc) == 0 & cdata(CDATA_AI_AGGRO, tc) == 0 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
		if ( cc == CHARA_PLAYER | cdata(CDATA_RELATION, cc) >= (-1) & cdata(CDATA_RELATION, tc) == (-3) | (cdata(CDATA_RELATION, tc) >= (-1) & cdata(CDATA_RELATION, cc) <= (-2)) ) {
			if ( rnd(3) == 0 | cdatan(CDATAN_CLASS, cc) == "thief" ) {
				skillexp SKILL_NORMAL_STEALTH, cc, 100
				cdata(CDATA_TARGET, tc) = cc
				cdata(CDATA_AI_AGGRO, tc) = 80
				critical = 1
				return 1
			}
		}
	}
	if ( cdata(CDATA_TARGET, tc) != cc ) {
		if ( evade != 0 ) {
			evade /= 2
		}
		if ( rnd(10) == 0 ) {
			return 1
		}
	}
	if ( cdatan(CDATAN_CLASS, cc) == "archer" ) {
		tohit *= 110 / 100
	}
	if ( cdata(CDATA_CONDITION_BLIND, cc) != 0 ) {
		if ( tohit > 0 ) {
			tohit /= 2
		}
	}
	if ( cdata(CDATA_CONDITION_BLIND, tc) != 0 ) {
		if ( evade != 0 ) {
			evade /= 2
		}
	}
	if ( cdata(CDATA_CONDITION_BIND, tc) != 0 ) {
		evade = 0
	}
	if ( cdata(CDATA_CONDITION_SLEEP, tc) != 0 | cdata(CDATA_CONDITION_BIND, tc) >= 20 ) {
		return 1
	}
	if ( cdata(CDATA_ID, tc) == CREATURE_ID_JALDABAOTH_THE_CHAOS_CHILD ) {
		if ( cdata(CDATA_ALLIED, tc) == 0 ) {
			if ( gdata(GDATA_FLAG_MAIN) == 875 ) {
				gdata(GDATA_FLAG_MAIN) = 880
			}
			if ( gdata(GDATA_FLAG_MAIN) == 885 ) {
				gdata(GDATA_FLAG_MAIN) = 890
			}
			return 1
		}
	}
	if ( cdata(CDATA_CONDITION_DIM, cc) != 0 & tohit > 0 ) {
		if ( attackrange ) {
			tohit /= 5
		}
		else {
			tohit = tohit / 3 * 2
		}
	}
	if ( cbit(CHARA_BIT_AWAKE_NEAR_DEATH_EVASION, cc) ) {
		if ( cdata(CDATA_HP, cc) >= 0 ) {
			if ( limit(cdata(CDATA_MAX_HP, cc) / (cdata(CDATA_HP, cc) + 1), 1, 20) > rnd(20) ) {
				critical = 1
				return 1
			}
		}
	}
	if ( TweakData(TWEAK_GAMEPLAY_CG_REVERT_DAMAGE_CALC_NERFS, TWEAK_CATEGORY_GAMEPLAY) == TRUE ) {
    	locvar_calcattackhit_critical = rnd(5000) < sdata(SKILL_ATTR_PER, cc) + 50
	}
    else {
    	locvar_calcattackhit_critical = rnd(5000) * (extraattack + 1) < sdata(SKILL_ATTR_PER, cc) + 50
	}
	if ( locvar_calcattackhit_critical ) {
		critical = 1
		if ( cbit(CHARA_BIT_AWAKE_NEAR_DEATH_EVASION, tc) ) {
			if ( cdata(CDATA_HP, tc) >= 0 ) {
				if ( limit(cdata(CDATA_MAX_HP, tc) / (cdata(CDATA_HP, tc) + 1), 1, 20) > rnd(5) ) {
					critical = 0
					return 1
				}
			}
		}
		if ( findbuff(tc, BUFF_EMERGENCY_EVASION) != (-1) & cdata(CDATA_EQUIP_WEIGHT, tc) < 15000 ) {
			critical = 0
		}
		if ( critical == 1 ) {
			return 1
		}
	}
	if ( cdata(CDATA_CONDITION_JIU_JITSU, tc) == 0 | cdata(CDATA_CONDITION_JIU_JITSU, tc) == 100 ) {
		cdata(CDATA_CONDITION_JIU_JITSU, tc) = 5
		if ( cdatan(CDATAN_RACE, tc) == "kobolt" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 8
		}
		if ( cdatan(CDATAN_RACE, tc) == "orc" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 8
		}
		if ( cdatan(CDATAN_RACE, tc) == "largeanimal" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "lizardman" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "minotaur" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "yerles" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 6
		}
		if ( cdatan(CDATAN_RACE, tc) == "norland" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 6
		}
		if ( cdatan(CDATAN_RACE, tc) == "eulderna" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 6
		}
		if ( cdatan(CDATAN_RACE, tc) == "fairy" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 6
		}
		if ( cdatan(CDATAN_RACE, tc) == "asura" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "slime" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 8
		}
		if ( cdatan(CDATAN_RACE, tc) == "doggod" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 1
		}
		if ( cdatan(CDATAN_RACE, tc) == "dwarf" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 6
		}
		if ( cdatan(CDATAN_RACE, tc) == "juere" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 6
		}
		if ( cdatan(CDATAN_RACE, tc) == "zombie" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "elea" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 6
		}
		if ( cdatan(CDATAN_RACE, tc) == "rabbit" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 8
		}
		if ( cdatan(CDATAN_RACE, tc) == "sheep" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "frog" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 9
		}
		if ( cdatan(CDATAN_RACE, tc) == "worm" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 9
		}
		if ( cdatan(CDATAN_RACE, tc) == "snail" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 11
		}
		if ( cdatan(CDATAN_RACE, tc) == "mandrake" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 9
		}
		if ( cdatan(CDATAN_RACE, tc) == "beetle" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 9
		}
		if ( cdatan(CDATAN_RACE, tc) == "mushroom" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 9
		}
		if ( cdatan(CDATAN_RACE, tc) == "bat" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 8
		}
		if ( cdatan(CDATAN_RACE, tc) == "ent" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "lich" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 5
		}
		if ( cdatan(CDATAN_RACE, tc) == "bacteria" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "ghost" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 5
		}
		if ( cdatan(CDATAN_RACE, tc) == "spirit" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "eye" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 9
		}
		if ( cdatan(CDATAN_RACE, tc) == "mazin" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "wasp" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 8
		}
		if ( cdatan(CDATAN_RACE, tc) == "giant" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 6
		}
		if ( cdatan(CDATAN_RACE, tc) == "imp" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 6
		}
		if ( cdatan(CDATAN_RACE, tc) == "hand" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 8
		}
		if ( cdatan(CDATAN_RACE, tc) == "snake" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 8
		}
		if ( cdatan(CDATAN_RACE, tc) == "drake" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 6
		}
		if ( cdatan(CDATAN_RACE, tc) == "goblin" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "bear" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "armor" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 8
		}
		if ( cdatan(CDATAN_RACE, tc) == "medusa" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "cupid" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 6
		}
		if ( cdatan(CDATAN_RACE, tc) == "karune" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 6
		}
		if ( cdatan(CDATAN_RACE, tc) == "harpy" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "dragon" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 4
		}
		if ( cdatan(CDATAN_RACE, tc) == "dinosaur" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "beast" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 6
		}
		if ( cdatan(CDATAN_RACE, tc) == "spider" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 8
		}
		if ( cdatan(CDATAN_RACE, tc) == "golem" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 5
		}
		if ( cdatan(CDATAN_RACE, tc) == "rock" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 9
		}
		if ( cdatan(CDATAN_RACE, tc) == "zanan" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 6
		}
		if ( cdatan(CDATAN_RACE, tc) == "skeleton" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 6
		}
		if ( cdatan(CDATAN_RACE, tc) == "piece" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "cat" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 6
		}
		if ( cdatan(CDATAN_RACE, tc) == "dog" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "roran" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "rat" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 8
		}
		if ( cdatan(CDATAN_RACE, tc) == "shell" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 8
		}
		if ( cdatan(CDATAN_RACE, tc) == "catgod" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 1
		}
		if ( cdatan(CDATAN_RACE, tc) == "machinegod" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 1
		}
		if ( cdatan(CDATAN_RACE, tc) == "undeadgod" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 1
		}
		if ( cdatan(CDATAN_RACE, tc) == "machine" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "wisp" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 6
		}
		if ( cdatan(CDATAN_RACE, tc) == "bird" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 8
		}
		if ( cdatan(CDATAN_RACE, tc) == "seamonster" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "catsister" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 5
		}
		if ( cdatan(CDATAN_RACE, tc) == "mutant" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "yeek" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 8
		}
		if ( cdatan(CDATAN_RACE, tc) == "yith" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 5
		}
		if ( cdatan(CDATAN_RACE, tc) == "servant" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 6
		}
		if ( cdatan(CDATAN_RACE, tc) == "horse" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 7
		}
		if ( cdatan(CDATAN_RACE, tc) == "god" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 1
		}
		if ( cdatan(CDATAN_RACE, tc) == "quickling" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 1
		}
		if ( cdatan(CDATAN_RACE, tc) == "metal" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 1
		}
		if ( cdatan(CDATAN_RACE, tc) == "vehicle" ) {
			cdata(CDATA_CONDITION_JIU_JITSU, tc) = 6
		}
	}
	if ( cdatan(CDATAN_CLASS, cc) == "predator" ) {
		cr = 1
	}
	else {
		cr = 0
	}
	if ( cbit(CHARA_BIT_MAGNETISM_S_POLE, cc) ) {
		if ( cbit(CHARA_BIT_MAGNETISM_S_POLE, tc) ) {
			cr -= 2
		}
		if ( cbit(CHARA_BIT_MAGNETISM_N_POLE, tc) ) {
			cr += 2
		}
	}
	if ( cbit(CHARA_BIT_MAGNETISM_N_POLE, cc) ) {
		if ( cbit(CHARA_BIT_MAGNETISM_N_POLE, tc) ) {
			cr -= 2
		}
		if ( cbit(CHARA_BIT_MAGNETISM_S_POLE, tc) ) {
			cr += 2
		}
	}
	if ( TweakData(TWEAK_GAMEPLAY_CG_REVERT_DAMAGE_CALC_NERFS, TWEAK_CATEGORY_GAMEPLAY) == FALSE ) {
		creva = 400
	}
	if ( attackskill == SKILL_WEAPON_MARTIAL_ARTS ) {
		creva = 100
	}
	else {
		if ( ammo != (-1) ) {
			creva = limit(inv(INV_ITEM_WEIGHT, ammo) / 10, 1, 400) / 2
		}
		else {
			creva = limit(inv(INV_ITEM_WEIGHT, cw) / 10, 1, 400) / 2
		}
	}
	handryoute = 0
	if ( cdata(CDATA_ATTACK_STYLE, cc) & 2 ) {
		repeat 30, 100
			if ( cdata(cnt, cc) / EXT_EQUIP_SLOTS == 5 ) {
				handryoute++
			}
			if ( handryoute >= 4 ) {
				break
			}
		loop
		if ( handryoute == 1 ) {
			handryoute = 0
		}
	}
	if ( develop ) {
		txt lang("[命中力" + tohit + "][回避力" + evade + "]", "[HIT" + tohit + "][EVA" + evade + "]")
	}
	if ( (cdata(CDATA_CRIT_CHANCE, cc) * 4 + 10) * (handryoute + 10) / 10 * ((cr + 10) / 10) > (rnd(400) + rnd(creva + 2) + cdata(CDATA_DEC_ENEMY_CRIT_CHANCE, tc) * 2) * (extraattack + 1) * ((cdata(CDATA_CONDITION_JIU_JITSU, tc) * 2 + 8) / 10) ) {
		critical = 1
		if ( findbuff(tc, BUFF_EMERGENCY_EVASION) != (-1) & cdata(CDATA_EQUIP_WEIGHT, tc) < 15000 ) {
			critical = 0
		}
		if ( critical == 1 ) {
			return 1
		}
	}
	if ( cdata(CDATA_ATTACK_STYLE, tc) & STYLE_SHIELD ) {
		if ( findbuff(tc, BUFF_SHIELD_PARRY) != (-1) ) {
			if ( cdata(CDATA_SHIELD_PARRY, tc) + 5 > rnd(100) ) {
				return -1
			}
		}
	}
	if ( cdata(CDATA_CONDITION_GRAVITY, tc) == 0 ) {
		if ( sdata(SKILL_NORMAL_GREATER_EVASION, tc) != 0 ) {
			if ( tohit < sdata(SKILL_NORMAL_GREATER_EVASION, tc) * 10 ) {
				evaderef = evade * 100 / limit(tohit, 1, tohit)
				if ( evaderef > 300 ) {
					if ( rnd(sdata(SKILL_NORMAL_GREATER_EVASION, tc) + 250) > 100 ) {
						return -2
					}
				}
				if ( evaderef > 200 ) {
					if ( rnd(sdata(SKILL_NORMAL_GREATER_EVASION, tc) + 250) > 150 ) {
						return -2
					}
				}
				if ( evaderef > 150 ) {
					if ( rnd(sdata(SKILL_NORMAL_GREATER_EVASION, tc) + 250) > 200 ) {
						return -2
					}
				}
			}
		}
	}
	if ( rnd(20) == 1 ) {
		return -1
	}
	if ( rnd(sqrt(limit(sdata(SKILL_ATTR_LUC, cc), 1, 2000) + 1) + 1) > rnd(300) ) {
		return 1
	}
	if ( tohit < 1 ) {
		return -1
	}
	if ( evade < 1 ) {
		return 1
	}
	evade = evade * 3 / 2
	if ( gdata(GDATA_FLAG_DATA_SCAN_CHARA_INDEX) != 0 ) {
		txt lang("[命中力" + tohit + "][回避力" + evade + "]", "[HIT" + tohit + "][EVA" + evade + "]")
	}
	if ( rnd(tohit) > rnd(evade) ) {
		return 1
	}
	return -1

#defcfunc calcattackdmg int calcattackdmg_arg1
	if ( attackskill == SKILL_WEAPON_MARTIAL_ARTS ) {
		dmgfix = sdata(SKILL_ATTR_STR, cc) / 16 + sdata(SKILL_ATTR_DEX, cc) / 16 + sdata(SKILL_WEAPON_MARTIAL_ARTS, cc) / 16 + sdata(SKILL_ATTR_WIL, cc) / 20 + cdata(CDATA_DAMAGE, cc)
		dice1 = 2
		dice2 = limit(sdata(SKILL_WEAPON_MARTIAL_ARTS, cc) / 5 + 10, 10, 120)
		dmgmulti = 0.5 + double(sdata(SKILL_ATTR_STR, cc) / 2 + sdata(SKILL_ATTR_WIL, cc) / 2 + sdata(attackskill, cc) / 5 + sdata(SKILL_NORMAL_TACTICS, cc) * 2) / 40
	}
	else {
		dmgfix = cdata(CDATA_DAMAGE, cc) + inv(INV_ITEM_DAMAGE, cw) + inv(INV_ITEM_LEVEL, cw) + (inv(INV_ITEM_STATUS, cw) == ITEM_STATUS_BLESSED) + sdata(SKILL_ATTR_WIL, cc) / 10 + sdata(SKILL_ATTR_STR, cc) / 30 + sdata(SKILL_ATTR_PER, cc) / 30 + limit((inv(INV_ITEM_WEIGHT, cw) + 1) / 5000, 0, 40)
		if ( inv(INV_ITEM_SKILL_REF, cw) == SKILL_WEAPON_FIREARM | inv(INV_ITEM_SKILL_REF, cw) == SKILL_WEAPON_CROSSBOW | inv(INV_ITEM_SKILL_REF, cw) == SKILL_WEAPON_BOW ) {
			if ( attackskill == SKILL_WEAPON_BLUNT ) {
				dmgfix -= 10
			}
		}
		dice1 = inv(INV_ITEM_DICE1, cw)
		dice2 = inv(INV_ITEM_DICE2, cw)
		if ( iequiploc(cw) == EQUIP_SLOT_SHOOT ) {
			if ( attackskill == SKILL_WEAPON_BLUNT ) {
				dice2 = inv(INV_ITEM_DICE2, cw) / 2
			}
		}
		if ( dice1 <= 0 ) {
			dice1 = 1
		}
		if ( dice2 <= 0 ) {
			dice2 = 1
		}
		if ( inv(INV_ITEM_DICE1, cw) == 0 ) {
			dice1 = 4
		}
		if ( inv(INV_ITEM_DICE2, cw) == 0 ) {
			dice2 = 4
		}
		if ( ammo != (-1) ) {
			dmgfix += inv(INV_ITEM_DAMAGE, ammo) + inv(INV_ITEM_LEVEL, ammo) + inv(INV_ITEM_DICE1, ammo) * inv(INV_ITEM_DICE2, ammo) / 2
			dmgmulti = 0.5 + double(sdata(SKILL_ATTR_DEX, cc) / 2 + sdata(SKILL_ATTR_PER, cc) / 2 + sdata(inv(INV_ITEM_SKILL_REF, cw), cc) / 4 + sdata(attackskill, cc) / 4 + sdata(SKILL_NORMAL_MARKSMAN, cc) * 2) / 40
			if ( findbuff(cc, BUFF_SHOOTING_MODE) != (-1) ) {
				dmgmulti *= 1.5
				dmgmulti += 0.03 * sdata(carmor(cc), cc)
			}
		}
		else {
			dmgmulti = 0.6 + double(sdata(SKILL_ATTR_STR, cc) + sdata(inv(INV_ITEM_SKILL_REF, cw), cc) / 5 + sdata(attackskill, cc) / 5 + sdata(SKILL_NORMAL_TACTICS, cc) * 2) / 45
			if ( inv(INV_ITEM_SKILL_REF, cw) == SKILL_WEAPON_FIREARM | inv(INV_ITEM_SKILL_REF, cw) == SKILL_WEAPON_CROSSBOW | inv(INV_ITEM_SKILL_REF, cw) == SKILL_WEAPON_BOW | attackskill == SKILL_WEAPON_THROWING ) {
				dmgmulti = 0.6 + double(sdata(SKILL_ATTR_STR, cc) + sdata(attackskill, cc) / 5 + sdata(attackskill, cc) / 5 + sdata(SKILL_NORMAL_TACTICS, cc) * 2) / 45
			}
			if ( attackrange ) {
				if ( findbuff(cc, BUFF_OVERLIMIT_THROW) != (-1) ) {
					dmgmulti *= 1.5
					dmgmulti += 0.03 * sdata(SKILL_NORMAL_MEDITATION, cc)
				}
			}
		}
	}
	if ( attackrange == 0 ) {
		if ( calcattackdmg_arg1 == 0 ) {
			dmgmulti = dmgmulti * (10 - limit(dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), cdata(CDATA_X, tc), cdata(CDATA_Y, tc)) - 1, 0, 5)) / 10
		}
	}
	dmgmulti2 = dmgmulti
	if ( attackrange & attackskill != SKILL_WEAPON_BLUNT ) {
		if ( calcattackdmg_arg1 == 0 ) {
			if ( longthrow == 100 ) {
				ltp = (rangedist + 14) / 2 * 10
				if ( rangedist <= 1 ) {
					ltp = 20
				}
				if ( cdata(CDATA_ROCK_THROWING, cc) != 0 ) {
					if ( inv(INV_ITEM_ID, cw) == ITEM_ID_STONE | inv(INV_ITEM_ID, cw) == ITEM_ID_VANILLA_ROCK ) {
						ltp += 50
					}
				}
				dmgmulti = dmgmulti * ltp / 100
				ltp = 0
				if ( encharge == 100 ) {
					dmgmulti = dmgmulti2 * 3 / 2
				}
			}
			else {
				if ( cdata(CDATA_ROCK_THROWING, cc) != 0 & (inv(INV_ITEM_ID, cw) == ITEM_ID_STONE | inv(INV_ITEM_ID, cw) == ITEM_ID_VANILLA_ROCK) ) {
					dmgmulti = dmgmulti * (rangemap(rangedist) / 2 + 150) / 100
					if ( encharge == 100 ) {
						dmgmulti = dmgmulti2 * 3 / 2
					}
				}
				else {
					if ( gdata(GDATA_TEMPORARY_FLAGS3) != 0 ) {
						dmgmulti = dmgmulti * (rangemap(rangedist) / 2 + 150) / 100
					}
					else {
						dmgmulti = dmgmulti * (rangemap(rangedist) / 2 + 100) / 100
					}
					if ( encharge == 100 ) {
						dmgmulti = dmgmulti2 * 3 / 2
					}
				}
				if ( gdata(GDATA_TEMPORARY_FLAGS3) != 0 ) {
					dmgmulti += 0.03 * sdata(attackskill, cc)
				}
			}
			if ( gdata(GDATA_TEMPORARY_FLAGS) == 100 ) {
				dmgmulti += 0.03 * sdata(attackskill, cc)
			}
		}
	}
	else {
		if ( cdata(CDATA_ATTACK_STYLE, cc) & STYLE_TWOHAND ) {
			if ( attackskill != SKILL_WEAPON_THROWING ) {
				if ( inv(INV_ITEM_WEIGHT, cw) >= 4000 ) {
					dmgmulti *= 1.5
				}
				else {
					dmgmulti *= 1.2
				}
				dmgmulti += 0.03 * sdata(SKILL_NORMAL_TWO_HAND, cc)
			}
		}
		if ( cdata(CDATA_ATTACK_STYLE, cc) & STYLE_SHIELD ) {
			if ( attackskill != SKILL_WEAPON_MARTIAL_ARTS ) {
				if ( attackskill != SKILL_WEAPON_THROWING ) {
					dmgmulti *= 1.1
					dmgmulti += 0.03 * sdata(SKILL_NORMAL_SHIELD, cc)
				}
			}
		}
	}
	if ( cc == CHARA_PLAYER ) {
		if ( trait(TRAIT_ETHER_VIOLENCE) ) {
			dmgfix += limit(5 + cdata(CDATA_LEVEL, CHARA_PLAYER) * 2 / 3, 0, 100)
		}
	}
	if ( tc == CHARA_PLAYER ) {
		if ( trait(TRAIT_ETHER_VIOLENCE) ) {
			dmgfix += limit(5 + cdata(CDATA_LEVEL, CHARA_PLAYER) * 2 / 3, 0, 100) / 4
		}
	}
	cdata(CDATA_DAMAGE_FIX, cc) = dmgfix
	if ( TweakData(TWEAK_GAMEPLAY_CG_REVERT_DAMAGE_CALC_NERFS, TWEAK_CATEGORY_GAMEPLAY) == FALSE ) {
		if ( attacknum > 2 ) {
			repeat attacknum - 2
				dmgfix = dmgfix * 3 / 5
			loop
		}
	}
	if ( calcattackdmg_arg1 == 1 ) {
		return damage
	}
	pvfix = cdata(CDATA_PV_FIX, tc)
	if ( cdata(CDATA_PV, tc) < 0 ) {
		pvfix = 100
	}
	hoseipv = (cdata(CDATA_PV, tc) + pvfix / 25) * pvfix / 100
	if ( cdata(CDATA_DRAIN_HP, tc) >= 100 ) {
		hoseipv = 0
	}
	prot = hoseipv + limit(sdata(carmor(tc), tc) / 4 - cdata(CDATA_PROT_PENALTY, tc) * 100, 0, 2000) + sdata(SKILL_ATTR_DEX, tc) / 10
	if ( calcattackdmg_arg1 == 0 ) {
		if ( cbit(CHARA_BIT_VINDALIAN_JIUJITSU_ACTIVE, cc) == TRUE ) {
			prot = cdata(CDATA_DV, tc) + limit(limit(sdata(SKILL_NORMAL_LIGHT_ARMOR, tc), 0, 300) - cdata(CDATA_PROT_PENALTY, tc) * 100, 0, 300) + sdata(SKILL_ATTR_DEX, tc) / 10
		}
	}
	if ( cbit(CHARA_BIT_AWAKE_NEAR_DEATH_EVASION, tc) ) {
		if ( cdata(CDATA_HP, tc) >= 0 ) {
			prot = prot * (100 + limit((cdata(CDATA_MAX_HP, tc) / (cdata(CDATA_HP, tc) + 1) - 1) * 10, 0, 50)) / 100
		}
	}
	if ( prot > 0 ) {
		prot2 = prot / 4
		protdice1 = prot2 / 10 + 1
		if ( protdice1 < 0 ) {
			protdice1 = 1
		}
		protdice2 = prot2 / protdice1 + 2
		protfix = 0
	}
	else {
		prot2 = 0
		protdice1 = 1
		protdice2 = 1
		protfix = 0
		prot = 0
	}
	if ( calcattackdmg_arg1 == 2 ) {
		return prot
	}
	if ( dmgfix < (-100) ) {
		dmgfix = -100
	}
	dmgmulti = int(dmgmulti * 100)
	if ( inv(INV_ITEM_ID, cw) == ITEM_ID_BLOOD_ROD & cdata(CDATA_MP, cc) > 20 ) {
		dice2 += limit(cdata(CDATA_MP, cc) / 200, 1, 200)
		dmgfix += limit(cdata(CDATA_MP, cc) / 400, 1, 100)
		cdata(CDATA_MP, cc) -= cdata(CDATA_MP, cc) / 20
	}
	damage = role(dice1, dice2, dmgfix)
	if ( critical ) {
		damage = rolemax(dice1, dice2, dmgfix)
		atkomosa = 0
		if ( attackskill == SKILL_WEAPON_MARTIAL_ARTS ) {
			atkomosa = sdata(SKILL_WEAPON_MARTIAL_ARTS, cc) * 400
		}
		else {
			if ( ammo != (-1) ) {
				atkomosa = inv(INV_ITEM_WEIGHT, ammo) * 2
			}
			else {
				atkomosa = inv(INV_ITEM_WEIGHT, cw) * 2
			}
		}
		if ( cdata(CDATA_EQUIP_WEIGHT, tc) >= 15000 ) {
			dmgmulti = dmgmulti * (sqrt(limit(atkomosa - cdata(CDATA_EQUIP_WEIGHT, tc), 1, 360000)) / 3 + 100) / 100
		}
		else {
			dmgmulti = dmgmulti * (sqrt(limit(atkomosa, 1, 360000)) / 3 + 100) / 100
		}
	}
	damage = damage * dmgmulti / 100
	if ( findbuff(cc, BUFF_CHARGE) != (-1) ) {
		if ( cc != CHARA_PLAYER | cdata(CDATA_RELATION, tc) == (-3) ) {
			damage = damage * 10
			repeat MAX_CHARA_TOTAL
				if ( cnt != cc ) {
					continue
				}
				p = cnt
				repeat MAX_BLESSINGS + MAX_HEXES
					if ( cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, p) == 0 ) {
						break
					}
					if ( cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, p) == BUFF_CHARGE ) {
						delbuff p, cnt
						continue cnt
					}
				loop
			loop
			r1 = cc
			gosub *charaRefresh
			snd SOUNDLIST_BOLT1
			if ( cc != CHARA_PLAYER ) {
				customtalk cc, DBMODE_FLAVOR_CHARGE_A
				gosub *convert_word
			}
			if ( synccheck(cc, -1) ) {
				txtef COLOR_RED
				txt lang(name(cc) + "の渾身の一撃が炸裂した。", name(cc) + " attacked with full power.")
				txtmore
			}
			if ( encharge == 100 ) {
				animeload 59, tc
				snd SOUNDLIST_ATK_SOUND
				encharge = 0
			}
			animeload ANIMATION_OFFER, tc
		}
	}
	orgdmg = damage
	if ( attackskill != SKILL_WEAPON_MARTIAL_ARTS ) {
		if ( pierce <= 80 ) {
			pierce += (130 - pierce * 3 / 2) * limit(sdata(attackskill, cc) / 30, 1, 10) / 30
		}
	}
	if ( pierce > 0 ) {
		pierce = pierce * (100 - limit(sdata(carmor(tc), tc) / 50, 0, 50)) / 100
	}
	if ( attackrange == 0 ) {
		if ( cdatan(CDATAN_CLASS, cc) == "claymore" ) {
			if ( 5 > rnd(100) ) {
				pierce = 100
				if ( synccheck(cc, -1) ) {
					txtef COLOR_YELLOW
					txt lang(name(cc) + "は腕をねじり鋭い突きを放った。", "\"Drill Sword!\" " + name(cc) + " twist" + _s(cc) + " " + his(cc) + " arm and deliver" + _s(cc) + " a piercing blow.")
					gdata(GDATA_PIERCING_BONUS) = 3
					txtmore
				}
			}
		}
		if ( limit(cdata(CDATA_PIERCING_CHANCE, cc), 0, 30) > rnd(100) | sutemi == 100 ) {
			pierce = 100
			if ( synccheck(cc, -1) ) {
				txtef COLOR_YELLOW
				txt lang(" *シャキーン* ", " *vorpal* ")
				gdata(GDATA_PIERCING_BONUS) = 3
				txtmore
			}
		}
	}
	else {
		if ( zero2 == 200 ) {
			pierce = limit(pierce + prot / 4 - dist(motox, motoy, cdata(CDATA_X, tc), cdata(CDATA_Y, tc)) * 10, 10, 100)
		}
		if ( cdata(CDATA_ROCK_THROWING, cc) != 0 ) {
			if ( inv(INV_ITEM_ID, cw) == ITEM_ID_STONE | inv(INV_ITEM_ID, cw) == ITEM_ID_VANILLA_ROCK ) {
				pierce = 70
				snd SOUNDLIST_BASH1
			}
		}
		if ( gdata(GDATA_TEMPORARY_FLAGS) == 100 ) {
			pierce = limit(pierce + prot / 5, 10, 100)
		}
		if ( ammoproc == ENCHANT_AMMO_PIERCING ) {
			pierce = 100
			if ( synccheck(cc, -1) ) {
				txtef COLOR_YELLOW
				txt lang(" *ズバシュッ* ", " *vorpal* ")
				gdata(GDATA_PIERCING_BONUS) = 1
				txtmore
			}
		}
		if ( ammoproc == ENCHANT_AMMO_RAPID ) {
			damage /= 2
		}
		if ( ammoproc == ENCHANT_AMMO_BURST ) {
			damage /= 5
		}
	}
	if ( prot > 0 ) {
		damage = damage * 100 / (100 + prot * (150 - pierce) / 150)
	}
	damagepierce = damage * pierce / 100
	damagenormal = damage - damagepierce
	if ( prot > 0 ) {
		damagenormal -= role(protdice1, protdice2, protfix)
		if ( damagenormal < 0 ) {
			damagenormal = 0
		}
	}
	damage = damagenormal + damagepierce
	if ( cdata(CDATA_CONDITION_INVERT, tc) > 0 ) {
		damage = damage * 7 / 4
	}
	if ( tc == CHARA_PLAYER ) {
		if ( trait(TRAIT_GOD_OPATOS) != 0 ) {
			damage--
		}
	}
	if ( cdata(CDATA_RES_DAMAGE, tc) != 0 ) {
		damage = damage * 100 / limit(100 + cdata(CDATA_RES_DAMAGE, tc), 25, 1000)
	}
	if ( findbuff(cc, BUFF_GRAVITY_ACCEL) != (-1) ) {
		damage = damage * 11 / 10
	}
	if ( findbuff(tc, BUFF_GRAVITY_ACCEL) != (-1) ) {
		if ( damage > 19 ) {
			damage = damage * 19 / 20
		}
	}
	if ( cbit(CHARA_BIT_MAGNETISM_S_POLE, cc) ) {
		if ( cbit(CHARA_BIT_MAGNETISM_S_POLE, tc) ) {
			damage = damage * 9 / 10
		}
		if ( cbit(CHARA_BIT_MAGNETISM_N_POLE, tc) ) {
			damage = damage * 11 / 10
		}
	}
	if ( cbit(CHARA_BIT_MAGNETISM_N_POLE, cc) ) {
		if ( cbit(CHARA_BIT_MAGNETISM_N_POLE, tc) ) {
			damage = damage * 9 / 10
		}
		if ( cbit(CHARA_BIT_MAGNETISM_S_POLE, tc) ) {
			damage = damage * 11 / 10
		}
	}
	if ( cc == CHARA_PLAYER ) {
		if ( cdata(CDATA_GOD, CHARA_PLAYER) == GOD_MANI ) {
			damage = damage * 6 / 5
		}
	}
	if ( findbuff(tc, BUFF_SUPER_ARMOR) != (-1) & cdata(CDATA_EQUIP_WEIGHT, tc) >= 35000 ) {
		if ( damage < cdata(CDATA_MAX_HP, tc) / 10 & damage > cdata(CDATA_MAX_HP, tc) / 20 ) {
			damage = cdata(CDATA_MAX_HP, tc) / 20
		}
		if ( damage < cdata(CDATA_MAX_HP, tc) / 5 & damage > cdata(CDATA_MAX_HP, tc) / 10 ) {
			damage = cdata(CDATA_MAX_HP, tc) / 10
		}
		if ( damage < cdata(CDATA_MAX_HP, tc) / 2 & damage > cdata(CDATA_MAX_HP, tc) / 5 ) {
			damage = cdata(CDATA_MAX_HP, tc) / 5
		}
		if ( damage < cdata(CDATA_MAX_HP, tc) * 3 / 4 & damage > cdata(CDATA_MAX_HP, tc) / 2 ) {
			damage = cdata(CDATA_MAX_HP, tc) / 2
		}
		if ( damage > cdata(CDATA_MAX_HP, tc) * 3 / 4 ) {
			damage = cdata(CDATA_MAX_HP, tc) * 3 / 4
		}
	}
	if ( findbuff(tc, BUFF_EMERGENCY_EVASION) != (-1) & cdata(CDATA_EQUIP_WEIGHT, tc) < 15000 ) {
		damage = damage * 4 / 5
	}
	if ( cbit(CHARA_BIT_METAL, tc) ) {
		damage = (damage + 1) / 10 + 1
	}
	if ( cbit(CHARA_BIT_ARMOUR, tc) ) {
		damage = (damage + 1) / 4 + 1
	}
	if ( damage < 0 ) {
		damage = 0
	}
	return damage

#deffunc cnvbonus int cnvbonus_arg1, int cnvbonus_arg2
	if ( cnvbonus_arg1 >= 50 & cnvbonus_arg1 < 61 ) {
		if ( cnvbonus_arg2 > 0 ) {
			buff += lang("　　" + skillname(cnvbonus_arg1) + "耐性に <green>クラス" + cnvbonus_arg2 / 50 + "<col>(" + cnvbonus_arg2 + ") のボーナス\n", skillname(cnvbonus_arg1) + " resist <green> Class " + cnvbonus_arg2 / 50 + "<col>(" + cnvbonus_arg2 + ") bonus\n")
		}
		if ( cnvbonus_arg2 < 0 ) {
			buff += lang("　　" + skillname(cnvbonus_arg1) + "耐性に <red>クラス" + cnvbonus_arg2 / 50 + "<col>(" + cnvbonus_arg2 + ") のマイナス修正\n", skillname(cnvbonus_arg1) + " resist <red> Class " + cnvbonus_arg2 / 50 + "<col>(" + cnvbonus_arg2 + ") penalty\n")
		}
	}
	else {
		if ( cnvbonus_arg2 > 0 ) {
			buff += lang("　　" + skillname(cnvbonus_arg1) + "に <green>+" + cnvbonus_arg2 + "<col> のボーナス\n", skillname(cnvbonus_arg1) + " <green> +" + cnvbonus_arg2 + "<col> bonus\n")
		}
		if ( cnvbonus_arg2 < 0 ) {
			buff += lang("　　" + skillname(cnvbonus_arg1) + "に <red>" + cnvbonus_arg2 + "<col> のマイナス修正\n", skillname(cnvbonus_arg1) + " <red> " + cnvbonus_arg2 + "<col> penalty\n")
		}
	}
	return

*charaRefresh
	chararefreshhack = 1
	if ( r1 == CHARA_PLAYER ) {
		gdata(GDATA_TRAVEL_SPEED) = 0
		gdata(GDATA_ETHER_SPEED) = 0
		gdata(GDATA_RES_ETHERWIND) = 0
		gdata(GDATA_RES_WEATHER) = 0
		gdata(GDATA_LIGHT) = 70
		gdata(GDATA_GOD_TALK) = 0
		gdata(GDATA_GOD_DETECT) = 0
	}
	repeat STARTING_SKILL_SPACT
		sdata(cnt, r1) = sdata(cnt + STARTING_SKILL_SPACT, r1) / 1000000
	loop
	if ( cdata(CDATA_RACE_ID, r1) == 0 ) {
		gosub *raceID_fix
	}
	if ( r1 == CHARA_PLAYER ) {
		memset cdata(STARTING_CDATA_CHARA_BIT, r1), 0, RANGE_TEMP_CHARA_BIT * 4
		if ( trait(TRAIT_RACE_WEAK) != 0 ) {
			repeat MAX_EQUIP_SLOT_TOTAL, CDATA_STARTING_EQUIP_SLOTS
				if ( cdata(cnt, r1) \ EXT_EQUIP_SLOTS == 0 ) {
					continue
				}
				rp = cdata(cnt, r1) \ EXT_EQUIP_SLOTS - 1
				if ( inv(INV_ITEM_WEIGHT, rp) > 2000 ) {
					cdata(cnt, r1) = cdata(cnt, r1) / EXT_EQUIP_SLOTS * EXT_EQUIP_SLOTS
					inv(INV_ITEM_EQUIP, rp) = 0
				}
			loop
		}
	}
	else {
		if ( cdata(CDATA_ID, r1) == CREATURE_ID_USER ) {
			memcpy cdata(STARTING_CDATA_CHARA_BIT, r1), userdata(40, cdata(CDATA_USERNPC_ID, r1)), RANGE_TEMP_CHARA_BIT * 4
		}
		else {
			memcpy cdata(STARTING_CDATA_CHARA_BIT, r1), cbitorg(0, cdata(CDATA_ID, r1)), RANGE_TEMP_CHARA_BIT * 4
			if ( cdata(CDATA_EVOLUTION_STAGE, r1) >= 1 ) {
				if ( cdata(CDATA_ID, r1) == CREATURE_ID_LAME_HORSE | cdata(CDATA_ID, r1) == CREATURE_ID_WILD_HORSE | cdata(CDATA_ID, r1) == CREATURE_ID_NOYEL_HORSE | cdata(CDATA_ID, r1) == CREATURE_ID_YOWYN_HORSE | cdata(CDATA_ID, r1) == CREATURE_ID_THOROUGHBRED | cdata(CDATA_ID, r1) == CREATURE_ID_YERLES_MACHINE_INFANTRY | cdata(CDATA_ID, r1) == CREATURE_ID_YERLES_ELITE_MACHINE_INFANTRY | cdata(CDATA_ID, r1) == CREATURE_ID_COBRA | cdata(CDATA_ID, r1) == CREATURE_ID_KING_COBRA | cdata(CDATA_ID, r1) == CREATURE_ID_CARBUNCLE | cdata(CDATA_ID, r1) == CREATURE_ID_LION | cdata(CDATA_ID, r1) == CREATURE_ID_FIRE_DRAGON_CHILD | cdata(CDATA_ID, r1) == CREATURE_ID_GRYFFON_CHILD | cdata(CDATA_ID, r1) == CREATURE_ID_FIRE_ENT | cdata(CDATA_ID, r1) == CREATURE_ID_ICE_ENT ) {
					cbitmod CHARA_BIT_FLOAT, r1, 1
				}
				if ( cdata(CDATA_ID, r1) == CREATURE_ID_WIZARD_OF_ELEA | cdata(CDATA_ID, r1) == CREATURE_ID_EXILE ) {
					cbitmod CHARA_BIT_UPLIFTED_WHILE_CASTING, r1, TRUE
				}
			}
			if ( cdata(CDATA_EVOLUTION_STAGE, r1) >= 2 ) {
				if ( cdata(CDATA_ID, r1) == CREATURE_ID_OLDER_DOG_SISTER ) {
					cbitmod CHARA_BIT_FLOAT, r1, 1
				}
				if ( cdata(CDATA_ID, r1) == CREATURE_ID_YOUNG_LADY ) {
					cbitmod CHARA_BIT_CURE_BLEEDING, r1, 1
				}
				if ( cdata(CDATA_ID, r1) == CREATURE_ID_SNAIL ) {
					cbitmod CHARA_BIT_METAL, r1, 1
				}
				if ( cdata(CDATA_ID, r1) == CREATURE_ID_HERMIT_CRAB ) {
					cbitmod CHARA_BIT_ARMOUR, r1, 1
				}
				if ( cdata(CDATA_ID, r1) == CREATURE_ID_ELECTRIC_CLOUD | cdata(CDATA_ID, r1) == CREATURE_ID_CHAOS_CLOUD | cdata(CDATA_ID, r1) == CREATURE_ID_WISP ) {
					cbitmod CHARA_BIT_UPLIFTED_WHILE_CASTING, r1, TRUE
				}
			}
			if ( cdata(CDATA_EVOLUTION_STAGE, r1) >= 3 ) {
				if ( cdata(CDATA_ID, r1) == CREATURE_ID_LITTLE_GIRL ) {
					cbitmod CHARA_BIT_FLOAT, r1, 1
				}
				if ( cdata(CDATA_ID, r1) == CREATURE_ID_ZOMBIE_GIRL ) {
					cbitmod CHARA_BIT_UPLIFTED_WHILE_CASTING, r1, TRUE
				}
			}
			if ( cdata(CDATA_EVOLUTION_STAGE, r1) >= 10 ) {
				if ( cdata(CDATA_ID, r1) == CREATURE_ID_DOG | cdata(CDATA_ID, r1) == CREATURE_ID_OLDER_SISTER | cdata(CDATA_ID, r1) == CREATURE_ID_DOG | cdata(CDATA_ID, r1) == CREATURE_ID_YOUNGER_SISTER ) {
					cbitmod CHARA_BIT_TEMPER, r1, 1
				}
			}
		}
	}
	repeat 10
		if ( racebit(cnt, cdata(CDATA_RACE_ID, r1)) == 0 ) {
			break
		}
		cbitmod racebit(cnt, cdata(CDATA_RACE_ID, r1)), r1, 1
	loop
	repeat RANGE_CDATA_FOOD_EXP, RANGE_CDATA_FOOD_EXP
		cdata(STARTING_CDATA_FOOD_EXP + cnt - RANGE_CDATA_FOOD_EXP, r1) = 0
	loop
	cdata(CDATA_DV, r1) = 0
	cdata(CDATA_PV, r1) = 0
	cdata(CDATA_ATTACK, r1) = 0
	cdata(CDATA_DAMAGE, r1) = 0
	cdata(CDATA_ATTACK_STYLE, r1) = STYLE_NONE
	attacknum = 0
	cdata(CDATA_PIERCING_CHANCE, r1) = 0
	cdata(CDATA_CURSE, r1) = 0
	cdata(CDATA_EXTRA_MELEE, r1) = 0
	cdata(CDATA_EXTRA_SHOOT, r1) = 0
	cdata(CDATA_EQUIP_WEIGHT, r1) = 0
	cdata(CDATA_RES_DAMAGE, r1) = 0
	cdata(CDATA_IMMUNE_DAMAGE, r1) = 0
	cdata(CDATA_ENHANCE_SPELL, r1) = 0
	cdata(CDATA_ENHANCE_BREATH, r1) = 0
	cdata(CDATA_ROCK_THROWING, r1) = 0
	cdata(CDATA_REFLECT_DAMAGE, r1) = 0
	cdata(CDATA_SHIELD_PARRY, r1) = 0
	cdata(CDATA_REMOTE_BLOW, r1) = 0
	if ( cdata(CDATA_REFLECT_MAGIC, r1) != 19 & adata(ADATA_WAKEUP_NEFIA, gdata(GDATA_AREA)) != WAKEUP_NEFIA_NORMAL ) {
		cdata(CDATA_REFLECT_MAGIC, r1) = 0
	}
	if ( cdata(CDATA_ID, r1) == CREATURE_ID_WANGNIN ) {
		cdata(CDATA_REFLECT_MAGIC, r1) = 100
	}
	cdata(CDATA_SHIELD_STYLE_TYPE, r1) = 0
	cdata(CDATA_WEAPON_STYLE_TYPE, r1) = 0
	cdata(CDATA_DEC_ENEMY_CRIT_CHANCE, r1) = 0
	cdata(CDATA_EXTRA_ATTACKS, r1) = 0
	cdata(CDATA_CRIT_CHANCE, r1) = 0
	cbitmod CHARA_BIT_BLUE_SPIRIT, r1, 0
	cbitmod CHARA_BIT_QUICK_SHOOTING, r1, 0
	repeat MAX_EQUIP_SLOT_TOTAL, CDATA_STARTING_EQUIP_SLOTS
		if ( cdata(cnt, r1) \ EXT_EQUIP_SLOTS == 0 ) {
			continue
		}
		rp = cdata(cnt, r1) \ EXT_EQUIP_SLOTS - 1
		cdata(CDATA_EQUIP_WEIGHT, r1) += inv(INV_ITEM_WEIGHT, rp)
		if ( inv(INV_ITEM_SKILL_REF, rp) == SKILL_NORMAL_SHIELD ) {
			if ( cdata(cnt, r1) / EXT_EQUIP_SLOTS == EQUIP_SLOT_HAND ) {
				if ( inv(INV_ITEM_ID, rp) != ITEM_ID_SACRIFICE_TONFA & inv(INV_ITEM_ID, rp) != ITEM_ID_SHIELD_TONFA & inv(INV_ITEM_ID, rp) != ITEM_ID_SMASH_TONFA & inv(INV_ITEM_ID, rp) != ITEM_ID_SABER_TONFA & inv(INV_ITEM_ID, rp) != ITEM_ID_SONIC_TONFA & inv(INV_ITEM_ID, rp) != ITEM_ID_GUR_BAGH_NAKH & inv(INV_ITEM_ID, rp) != ITEM_ID_CLAW & inv(INV_ITEM_ID, rp) != ITEM_ID_OTOGIRI & inv(INV_ITEM_ID, rp) != ITEM_ID_GOD_BINDER ) {
					cdata(CDATA_SHIELD_STYLE_TYPE, r1) = SHIELD_STYLE_NORMAL
					cdata(CDATA_SHIELD_PARRY, r1) += inv(INV_ITEM_DV, rp)
				}
				if ( inv(INV_ITEM_ID, rp) == ITEM_ID_SACRIFICE_TONFA | inv(INV_ITEM_ID, rp) == ITEM_ID_SHIELD_TONFA | inv(INV_ITEM_ID, rp) == ITEM_ID_SMASH_TONFA | inv(INV_ITEM_ID, rp) == ITEM_ID_SABER_TONFA | inv(INV_ITEM_ID, rp) == ITEM_ID_SONIC_TONFA | inv(INV_ITEM_ID, rp) == ITEM_ID_GUR_BAGH_NAKH | inv(INV_ITEM_ID, rp) == ITEM_ID_CLAW | inv(INV_ITEM_ID, rp) == ITEM_ID_OTOGIRI | inv(INV_ITEM_ID, rp) == ITEM_ID_GOD_BINDER ) {
					if ( cdata(CDATA_SHIELD_STYLE_TYPE, r1) != SHIELD_STYLE_NORMAL ) {
						cdata(CDATA_SHIELD_STYLE_TYPE, r1) = SHIELD_STYLE_TONFA
					}
				}
				if ( ( cdata(CDATA_ATTACK_STYLE, r1) & STYLE_SHIELD ) == 0 ) {
					cdata(CDATA_ATTACK_STYLE, r1) += STYLE_SHIELD
				}
			}
		}
		if ( cdata(CDATA_WEAPON_STYLE_TYPE, r1) == 0 ) {
			if ( inv(INV_ITEM_ID, rp) == ITEM_ID_LONG_SWORD | inv(INV_ITEM_ID, rp) == ITEM_ID_KATANA | inv(INV_ITEM_ID, rp) == ITEM_ID_LIGHTSABRE | inv(INV_ITEM_ID, rp) == ITEM_ID_DIABLOS | inv(INV_ITEM_ID, rp) == ITEM_ID_ZANTETSUKEN | inv(INV_ITEM_ID, rp) == ITEM_ID_MOURNBLADE | inv(INV_ITEM_ID, rp) == ITEM_ID_RAGNAROK | inv(INV_ITEM_ID, rp) == ITEM_ID_HIRYU_TO | inv(INV_ITEM_ID, rp) == ITEM_ID_STORM_BRINGER | inv(INV_ITEM_ID, rp) == ITEM_ID_MOONLIGHT | inv(INV_ITEM_ID, rp) == ITEM_ID_HOUSENKA | inv(INV_ITEM_ID, rp) == ITEM_ID_THE_WHITE_HAWK | inv(INV_ITEM_ID, rp) == ITEM_ID_FLEURE | inv(INV_ITEM_ID, rp) == ITEM_ID_EPECLAIR | inv(INV_ITEM_ID, rp) == ITEM_ID_ANNINDOFU_LIKE_A_LIGHTSABRE | inv(INV_ITEM_ID, rp) == ITEM_ID_KALPA_HAND | inv(INV_ITEM_ID, rp) == ITEM_ID_RAVENBRAND ) {
				cdata(CDATA_WEAPON_STYLE_TYPE, r1) = WEAPON_STYLE_LONGSWORD
			}
			if ( inv(INV_ITEM_ID, rp) == ITEM_ID_SCIMITAR | inv(INV_ITEM_ID, rp) == ITEM_ID_WAKIZASHI | inv(INV_ITEM_ID, rp) == ITEM_ID_DYNAMIC_SABER | inv(INV_ITEM_ID, rp) == ITEM_ID_BLACK_MONKSHOOD ) {
				cdata(CDATA_WEAPON_STYLE_TYPE, r1) = WEAPON_STYLE_SHORTSWORD
			}
			if ( inv(INV_ITEM_ID, rp) == ITEM_ID_ENGOKU ) {
				cdata(CDATA_WEAPON_STYLE_TYPE, r1) = WEAPON_STYLE_SWORDCANE
			}
			if ( inv(INV_ITEM_ID, rp) == ITEM_ID_DAGGER | inv(INV_ITEM_ID, rp) == ITEM_ID_KITCHEN_KNIFE | inv(INV_ITEM_ID, rp) == ITEM_ID_ETHER_DAGGER | inv(INV_ITEM_ID, rp) == ITEM_ID_LUCKY_DAGGER | inv(INV_ITEM_ID, rp) == ITEM_ID_OTI_TUBAKI | inv(INV_ITEM_ID, rp) == ITEM_ID_MELODYUS | inv(INV_ITEM_ID, rp) == ITEM_ID_KUNAI ) {
				cdata(CDATA_WEAPON_STYLE_TYPE, r1) = WEAPON_STYLE_SHORTSWORD2
			}
			if ( inv(INV_ITEM_ID, rp) == ITEM_ID_CLAYMORE | inv(INV_ITEM_ID, rp) == ITEM_ID_DRAGON_SLAYER | inv(INV_ITEM_ID, rp) == ITEM_ID_CLAYMORE2 | inv(INV_ITEM_ID, rp) == ITEM_ID_KINDNESS_BLADE | inv(INV_ITEM_ID, rp) == ITEM_ID_FLAME_EDGE | inv(INV_ITEM_ID, rp) == ITEM_ID_GRANDEL ) {
				cdata(CDATA_WEAPON_STYLE_TYPE, r1) = WEAPON_STYLE_LONGSWORD2
			}
			if ( inv(INV_ITEM_ID, rp) == ITEM_ID_HAND_AXE | inv(INV_ITEM_ID, rp) == ITEM_ID_BATTLE_AXE | inv(INV_ITEM_ID, rp) == ITEM_ID_BARDISH | inv(INV_ITEM_ID, rp) == ITEM_ID_AXE_OF_DESTRUCTION | inv(INV_ITEM_ID, rp) == ITEM_ID_NEGATIVE_EDGE | inv(INV_ITEM_ID, rp) == ITEM_ID_GOD_BREAKER | inv(INV_ITEM_ID, rp) == ITEM_ID_GRAVITY_AXE | inv(INV_ITEM_ID, rp) == ITEM_ID_GULIWELZEN | inv(INV_ITEM_ID, rp) == ITEM_ID_TOMAHAWK | inv(INV_ITEM_ID, rp) == ITEM_ID_CHAINSAW | inv(INV_ITEM_ID, rp) == ITEM_ID_DGT_101 ) {
				cdata(CDATA_WEAPON_STYLE_TYPE, r1) = WEAPON_STYLE_AXE
			}
			if ( inv(INV_ITEM_ID, rp) == ITEM_ID_CLUB | inv(INV_ITEM_ID, rp) == ITEM_ID_HAMMER | inv(INV_ITEM_ID, rp) == ITEM_ID_BLOOD_MOON | inv(INV_ITEM_ID, rp) == ITEM_ID_GAIA_HAMMER | inv(INV_ITEM_ID, rp) == ITEM_ID_BUSTER_BOOK | inv(INV_ITEM_ID, rp) == ITEM_ID_NAIL_STRADIVARIUS | inv(INV_ITEM_ID, rp) == ITEM_ID_SOCKS | inv(INV_ITEM_ID, rp) == ITEM_ID_LUCKY_ALMONDS | inv(INV_ITEM_ID, rp) == ITEM_ID_ZUGAIKURAI | inv(INV_ITEM_ID, rp) == ITEM_ID_GRAVITAIL | inv(INV_ITEM_ID, rp) == ITEM_ID_WAR_HAMMER | inv(INV_ITEM_ID, rp) == ITEM_ID_STAR_HAMMER | inv(INV_ITEM_ID, rp) == ITEM_ID_NAZUNAS_SOX ) {
				cdata(CDATA_WEAPON_STYLE_TYPE, r1) = WEAPON_STYLE_BLUDGEON
			}
			if ( inv(INV_ITEM_ID, rp) == ITEM_ID_SPEAR | inv(INV_ITEM_ID, rp) == ITEM_ID_TRIDENT | inv(INV_ITEM_ID, rp) == ITEM_ID_HALBERD | inv(INV_ITEM_ID, rp) == ITEM_ID_RANKIS | inv(INV_ITEM_ID, rp) == ITEM_ID_HOLY_LANCE | inv(INV_ITEM_ID, rp) == ITEM_ID_PILE_DRIVER | inv(INV_ITEM_ID, rp) == ITEM_ID_UNICORN_DRILL | inv(INV_ITEM_ID, rp) == ITEM_ID_TRISHULA | inv(INV_ITEM_ID, rp) == ITEM_ID_SPADILLE | inv(INV_ITEM_ID, rp) == ITEM_ID_DRILL | inv(INV_ITEM_ID, rp) == ITEM_ID_LANCE | inv(INV_ITEM_ID, rp) == ITEM_ID_GOUTEN | inv(INV_ITEM_ID, rp) == ITEM_ID_BAMBNIR ) {
				cdata(CDATA_WEAPON_STYLE_TYPE, r1) = WEAPON_STYLE_POLEARM
			}
			if ( inv(INV_ITEM_ID, rp) == ITEM_ID_SOLAR_CANE ) {
				cdata(CDATA_WEAPON_STYLE_TYPE, r1) = WEAPON_STYLE_STAVE
			}
			if ( inv(INV_ITEM_ID, rp) == ITEM_ID_STAFF | inv(INV_ITEM_ID, rp) == ITEM_ID_LONG_STAFF | inv(INV_ITEM_ID, rp) == ITEM_ID_STAFF_OF_INSANITY | inv(INV_ITEM_ID, rp) == ITEM_ID_ELEMENTAL_STAFF | inv(INV_ITEM_ID, rp) == ITEM_ID_VITAL_FLAYER | inv(INV_ITEM_ID, rp) == ITEM_ID_ZWIEBEL | inv(INV_ITEM_ID, rp) == ITEM_ID_DRAKE_ROD | inv(INV_ITEM_ID, rp) == ITEM_ID_VICE_STAFF | inv(INV_ITEM_ID, rp) == ITEM_ID_WHIP | inv(INV_ITEM_ID, rp) == ITEM_ID_IVY_SPINE | inv(INV_ITEM_ID, rp) == ITEM_ID_BLOODY_TEARS | inv(INV_ITEM_ID, rp) == ITEM_ID_BLOOD_ROD | inv(INV_ITEM_ID, rp) == ITEM_ID_SHAKUJO | inv(INV_ITEM_ID, rp) == ITEM_ID_NUNCHAKU | inv(INV_ITEM_ID, rp) == ITEM_ID_POWER_TRIANGLE ) {
				cdata(CDATA_WEAPON_STYLE_TYPE, r1) = WEAPON_STYLE_STAVE2
			}
			if ( inv(INV_ITEM_ID, rp) == ITEM_ID_ASTRAL_SICKLE | inv(INV_ITEM_ID, rp) == ITEM_ID_BEAST_SICKLE | inv(INV_ITEM_ID, rp) == ITEM_ID_FRISIAS_TAIL | inv(INV_ITEM_ID, rp) == ITEM_ID_SCYTHE | inv(INV_ITEM_ID, rp) == ITEM_ID_KUMIROMI_SCYTHE | inv(INV_ITEM_ID, rp) == ITEM_ID_SICKLE | inv(INV_ITEM_ID, rp) == ITEM_ID_SCYTHE_OF_THE_VOID | inv(INV_ITEM_ID, rp) == ITEM_ID_CHAINSICKLE | inv(INV_ITEM_ID, rp) == ITEM_ID_SASANQUA_SICKLE | inv(INV_ITEM_ID, rp) == ITEM_ID_NECROMANTIS | inv(INV_ITEM_ID, rp) == ITEM_ID_SCISSORS | inv(INV_ITEM_ID, rp) == ITEM_ID_BONE_SCYTHE | inv(INV_ITEM_ID, rp) == ITEM_ID_NUMENIUS | inv(INV_ITEM_ID, rp) == ITEM_ID_KANI_KAMA ) {
				cdata(CDATA_WEAPON_STYLE_TYPE, r1) = WEAPON_STYLE_SICKLE
			}
		}
		if ( inv(INV_ITEM_ID, rp) == ITEM_ID_BLUE_SPIRIT ) {
			cbitmod CHARA_BIT_BLUE_SPIRIT, r1, 1
		}
		if ( inv(INV_ITEM_PV, rp) + inv(INV_ITEM_DV, rp) < 180 ) {
			cdata(CDATA_DV, r1) += inv(INV_ITEM_DV, rp)
		}
		if ( inv(INV_ITEM_PV, rp) + inv(INV_ITEM_DV, rp) < 180 ) {
			cdata(CDATA_PV, r1) += inv(INV_ITEM_PV, rp)
		}
		if ( inv(INV_ITEM_DICE1, rp) == 0 ) {
			if ( inv(INV_ITEM_ATTACK, rp) + inv(INV_ITEM_DAMAGE, rp) < 80 ) {
				cdata(CDATA_ATTACK, r1) += inv(INV_ITEM_ATTACK, rp)
				cdata(CDATA_DAMAGE, r1) += inv(INV_ITEM_DAMAGE, rp)
			}
			if ( inv(INV_ITEM_ID, rp) != ITEM_ID_SACRIFICE_TONFA & inv(INV_ITEM_ID, rp) != ITEM_ID_SHIELD_TONFA & inv(INV_ITEM_ID, rp) != ITEM_ID_SMASH_TONFA & inv(INV_ITEM_ID, rp) != ITEM_ID_SABER_TONFA & inv(INV_ITEM_ID, rp) != ITEM_ID_SONIC_TONFA & inv(INV_ITEM_ID, rp) != ITEM_ID_GUR_BAGH_NAKH & inv(INV_ITEM_ID, rp) != ITEM_ID_CLAW & inv(INV_ITEM_ID, rp) != ITEM_ID_OTOGIRI ) {
				cdata(CDATA_PV, r1) += inv(INV_ITEM_LEVEL, rp) * 2 + (inv(INV_ITEM_STATUS, rp) == ITEM_STATUS_BLESSED) * 2 + limit((inv(INV_ITEM_WEIGHT, rp) + 1) / 5000, 0, 40)
				cdata(CDATA_DV, r1) += inv(INV_ITEM_LEVEL, rp) * 2 + (inv(INV_ITEM_STATUS, rp) == ITEM_STATUS_BLESSED) * 2
			}
			else {
				cdata(CDATA_DAMAGE, r1) += inv(INV_ITEM_LEVEL, rp) + (inv(INV_ITEM_STATUS, rp) == ITEM_STATUS_BLESSED) + limit((inv(INV_ITEM_WEIGHT, rp) + 1) / 5000, 0, 40)
				cdata(CDATA_ATTACK, r1) += inv(INV_ITEM_LEVEL, rp) + (inv(INV_ITEM_STATUS, rp) == ITEM_STATUS_BLESSED)
			}
		}
		else {
			if ( cdata(cnt, r1) / EXT_EQUIP_SLOTS == EQUIP_SLOT_HAND ) {
				attacknum++
			}
		}
		if ( inv(INV_ITEM_STATUS, rp) == ITEM_STATUS_CURSED ) {
			cdata(CDATA_CURSE, r1) += 20
		}
		if ( inv(INV_ITEM_STATUS, rp) == ITEM_STATUS_DOOMED ) {
			cdata(CDATA_CURSE, r1) += 100
		}
		if ( inv(INV_ITEM_MATERIAL, rp) == ITEM_MATERIAL_ETHER ) {
			if ( r1 == CHARA_PLAYER ) {
				gdata(GDATA_ETHER_SPEED) += 5
			}
		}
		repeat RANGE_INV_ITEM_ENCHANT
			if ( inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, rp) == 0 ) {
				break
			}
			rp2 = inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, rp)
			if ( rp2 >= EXT_ENCHANTMENT ) {
				rp3 = rp2 \ EXT_ENCHANTMENT
				rp2 = rp2 / EXT_ENCHANTMENT
				if ( rp2 == ENCHANT_ATTRIBUTE ) {
					sdata(rp3, r1) += inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, rp) / 50 + 1
					continue
				}
				if ( rp2 == ENCHANT_RESISTANCE ) {
					sdata(rp3, r1) += inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, rp) / 2
					if ( sdata(rp3, r1) < 0 ) {
						sdata(rp3, r1) = 1
					}
					continue
				}
				if ( rp2 == ENCHANT_SKILL ) {
					if ( sorg(rp3, r1) != 0 ) {
						sdata(rp3, r1) += inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, rp) / 50 + 1
						if ( sdata(rp3, r1) < 1 ) {
							sdata(rp3, r1) = 1
						}
					}
					continue
				}
			}
			else {
				if ( rp2 == ENCHANT_GOD_SIGNALS ) {
					if ( r1 == CHARA_PLAYER ) {
						gdata(GDATA_GOD_TALK) = 1
						continue
					}
				}
				if ( rp2 == ENCHANT_SHOW_RELIGION ) {
					if ( r1 == CHARA_PLAYER ) {
						gdata(GDATA_GOD_DETECT) = 1
						continue
					}
				}
				if ( rp2 == ENCHANT_FAST_TRAVEL ) {
					sdata(SKILL_ATTR_SPD, r1) += inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, rp) / 50 + 1
					if ( r1 == CHARA_PLAYER ) {
						gdata(GDATA_TRAVEL_SPEED) += inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, rp) / 8
						continue
					}
				}
				if ( rp2 == ENCHANT_FLOAT ) {
					cbitmod CHARA_BIT_FLOAT, r1, 1
					continue
				}
				if ( rp2 == ENCHANT_QUICK_SHOOTING ) {
					cbitmod CHARA_BIT_QUICK_SHOOTING, r1, 1
					continue
				}
				if ( rp2 == ENCHANT_SEE_INVISIBLE ) {
					cbitmod CHARA_BIT_SEE_INVISIBLE, r1, 1
					continue
				}
				if ( rp2 == ENCHANT_RES_BLIND ) {
					cbitmod CHARA_BIT_RES_BLIND, r1, 1
					continue
				}
				if ( rp2 == ENCHANT_RES_PARALYZE ) {
					cbitmod CHARA_BIT_RES_PARALYZE, r1, 1
					continue
				}
				if ( rp2 == ENCHANT_RES_CONFUSE ) {
					cbitmod CHARA_BIT_RES_CONFUSE, r1, 1
					continue
				}
				if ( rp2 == ENCHANT_RES_FEAR ) {
					cbitmod CHARA_BIT_RES_FEAR, r1, 1
					continue
				}
				if ( rp2 == ENCHANT_RES_SLEEP ) {
					cbitmod CHARA_BIT_RES_SLEEP, r1, 1
					continue
				}
				if ( rp2 == ENCHANT_RES_POISON ) {
					cbitmod CHARA_BIT_RES_POISON, r1, 1
					continue
				}
				if ( rp2 == ENCHANT_EAT_ROTTEN ) {
					cbitmod CHARA_BIT_EAT_ROTTEN, r1, 1
					continue
				}
				if ( rp2 == ENCHANT_RES_STEAL ) {
					cbitmod CHARA_BIT_RES_STEAL, r1, 1
					continue
				}
				if ( rp2 == ENCHANT_CURE_BLEEDING ) {
					cbitmod CHARA_BIT_CURE_BLEEDING, r1, 1
					continue
				}
				if ( rp2 == ENCHANT_RES_PHYSICAL ) {
					cdata(CDATA_RES_DAMAGE, r1) += inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, rp) / 40 + 5
					continue
				}
				if ( rp2 == ENCHANT_IMMUNE_DAMAGE ) {
					cdata(CDATA_IMMUNE_DAMAGE, r1) += inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, rp) / 60 + 3
					continue
				}
				if ( rp2 == ENCHANT_REFLECT_DAMAGE ) {
					cdata(CDATA_REFLECT_DAMAGE, r1) += inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, rp) / 5
					continue
				}
				if ( rp2 == ENCHANT_CRIT_CHANCE ) {
					cdata(CDATA_CRIT_CHANCE, r1) += inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, rp) / 50
					continue
				}
				if ( rp2 == ENCHANT_DEC_ENEMY_CRIT_CHANCE ) {
					cdata(CDATA_DEC_ENEMY_CRIT_CHANCE, r1) += inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, rp) / 50
					continue
				}
				if ( rp2 == ENCHANT_PIERCING_CHANCE ) {
					cdata(CDATA_PIERCING_CHANCE, r1) += inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, rp) / 50
					continue
				}
				if ( rp2 == ENCHANT_ENHANCE_SPELL ) {
					cdata(CDATA_ENHANCE_SPELL, r1) += inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, rp)
					continue
				}
				if ( rp2 == ENCHANT_ENHANCE_BREATH ) {
					cdata(CDATA_ENHANCE_BREATH, r1) += inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, rp)
					continue
				}
				if ( rp2 == ENCHANT_ROCK_THROWING ) {
					cdata(CDATA_ROCK_THROWING, r1) += inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, rp)
					continue
				}
				if ( rp2 == ENCHANT_EXTRA_MELEE ) {
					cdata(CDATA_EXTRA_MELEE, r1) += inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, rp) / 15
					continue
				}
				if ( rp2 == ENCHANT_EXTRA_RANGED ) {
					cdata(CDATA_EXTRA_SHOOT, r1) += inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, rp) / 15
					continue
				}
				if ( rp2 == ENCHANT_SHOOTING_MECHANISM | rp2 == ENCHANT_PROXIMITY_ASSIST ) {
					cdata(CDATA_EXTRA_ATTACKS, r1)++
					continue
				}
				if ( rp2 == ENCHANT_REFLECT_MAGIC ) {
					cdata(CDATA_REFLECT_MAGIC, r1) += inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, rp) / 5
					continue
				}
				if ( rp2 == ENCHANT_REMOTE_BLOW ) {
					cdata(CDATA_REMOTE_BLOW, r1) += inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, rp) / 2
					continue
				}
				if ( rp2 == ENCHANT_RANDOM_TELEPORT | rp2 == ENCHANT_SUCK_BLOOD | rp2 == ENCHANT_DISTURB_GROWTH | rp2 == ENCHANT_ATTRACT_MONSTER | rp2 == ENCHANT_SUCK_MP ) {
					cbitmod CHARA_BIT_RES_CURSE, r1, 1
					continue
				}
				if ( r1 == CHARA_PLAYER ) {
					if ( rp2 == ENCHANT_RES_ETHERWIND ) {
						gdata(GDATA_RES_ETHERWIND) = 1
						continue
					}
					if ( rp2 == ENCHANT_RES_WEATHER ) {
						gdata(GDATA_RES_WEATHER) = 1
						continue
					}
				}
			}
		loop
	loop
	cdata(CDATA_SHIELD_PARRY, r1) = limit(cdata(CDATA_SHIELD_PARRY, r1), -5, 10)
	if ( r1 == CHARA_PLAYER ) {
		if ( trait(TRAIT_ETHER_BONES) != 0 ) {
			cdata(CDATA_REFLECT_DAMAGE, r1) += 50
		}
		if ( cdata(CDATA_REMOTE_BLOW, r1) == 0 ) {
			spact(SKILL_SPACT_DISTANT_ATTACK - STARTING_SKILL_SPACT) = 0
		}
		if ( cdata(CDATA_REMOTE_BLOW, r1) != 0 ) {
			if ( spact(SKILL_SPACT_DISTANT_ATTACK - STARTING_SKILL_SPACT) == 0 ) {
				spact(SKILL_SPACT_DISTANT_ATTACK - STARTING_SKILL_SPACT) = 1
			}
		}
		if ( cbit(CHARA_BIT_PREGNANT, r1) == 0 ) {
			spact(SKILL_SPACT_PREGNANT - STARTING_SKILL_SPACT) = 0
		}
		if ( trait(TRAIT_ETHER_BLADE_HANDS) != 0 ) {
			spact(SKILL_SPACT_DECAPITATION - STARTING_SKILL_SPACT) = 1
		}
		else {
			spact(SKILL_SPACT_DECAPITATION - STARTING_SKILL_SPACT) = 0
		}
		if ( trait(TRAIT_ETHER_TORN_MOUTH) != 0 ) {
			spact(SKILL_SPACT_VORACITY_FANG - STARTING_SKILL_SPACT) = 1
		}
		else {
			spact(SKILL_SPACT_VORACITY_FANG - STARTING_SKILL_SPACT) = 0
		}
	}
	if ( sdata(SKILL_NORMAL_EYE_OF_MIND, r1) ) {
		cdata(CDATA_CRIT_CHANCE, r1) += int(sqrt(sdata(SKILL_NORMAL_EYE_OF_MIND, r1))) + 2
	}
	repeat MAX_SKILL_ATTR - STARTING_SKILL_ATTR
		if ( cdata(STARTING_CDATA_ATTR + cnt, r1) != 0 ) {
			if ( cdata(CDATA_QUALITY, r1) >= FIX_QUALITY_MIRACLE ) {
				if ( cdata(STARTING_CDATA_ATTR + cnt, r1) < sorg(STARTING_SKILL_ATTR + cnt, r1) / 5 ) {
					cdata(STARTING_CDATA_ATTR + cnt, r1) = sorg(STARTING_SKILL_ATTR + cnt, r1) / 5
				}
			}
			sdata(STARTING_SKILL_ATTR + cnt, r1) += cdata(STARTING_CDATA_ATTR + cnt, r1)
		}
		if ( sdata(STARTING_SKILL_ATTR + cnt, r1) < 1 ) {
			sdata(STARTING_SKILL_ATTR + cnt, r1) = 1
		}
	loop
	if ( r1 == CHARA_PLAYER ) {
		gosub *god_effect
		traitmode = 1
		repeat MAX_TRAIT
			if ( trait(cnt) != 0 ) {
				tid = cnt
				gosub *trait_ref
			}
		loop
	}
	if ( r1 != CHARA_PLAYER ) {
		cdata(CDATA_PIETY, r1) = sdata(SKILL_NORMAL_FAITH, r1) * 50
	}
	if ( cdata(CDATA_ID, r1) == CREATURE_ID_JALDABAOTH_THE_CHAOS_CHILD ) {
		if ( gdata(GDATA_FLAG_MAIN) == 860 ) {
			sdata(SKILL_ATTR_SPD, r1) = 666666
		}
	}
	if ( cdata(CDATA_ID, r1) == CREATURE_ID_SPEED_HACK_CHEATAH ) {
		if ( sdata(SKILL_ATTR_SPD, r1) < 1000000 ) {
			sdata(SKILL_ATTR_SPD, r1) = 1000000
		}
	}
	if ( cdata(CDATA_ATTACK_STYLE, r1) & STYLE_SHIELD ) {
		if ( cdata(CDATA_PV, r1) > 0 ) {
			if ( cdata(CDATA_SHIELD_STYLE_TYPE, r1) == SHIELD_STYLE_NORMAL ) {
				cdata(CDATA_PV, r1) = cdata(CDATA_PV, r1) * (120 + int(sqrt(sdata(SKILL_NORMAL_SHIELD, r1))) * 2) / 100
			}
		}
	}
	else {
		if ( attacknum == 1 ) {
			cdata(CDATA_ATTACK_STYLE, r1) += STYLE_TWOHAND
		}
		else {
			if ( attacknum != 0 ) {
				cdata(CDATA_ATTACK_STYLE, r1) += STYLE_DUAL_WIELD
			}
		}
	}
	if ( cdata(CDATA_CONDITION_OIL, r1) > 0 ) {
		if ( cdata(CDATA_DV, r1) > 0 ) {
			cdata(CDATA_DV, r1) = cdata(CDATA_DV, r1) * 13 / 10
		}
		if ( cdata(CDATA_PV, r1) > 0 ) {
			cdata(CDATA_PV, r1) = cdata(CDATA_PV, r1) * 13 / 10
		}
	}
	lvhosei = limit(cdata(CDATA_LEVEL, r1) / 4 + limit(cdata(CDATA_LEVEL, r1) / 5, 0, 20) + limit(cdata(CDATA_LEVEL, r1) / 5, 1, 40) + limit(cdata(CDATA_LEVEL, r1) / 5, 1, 60) + limit(cdata(CDATA_LEVEL, r1) / 5, 1, 100), 1, 3000)
	cdata(CDATA_MAX_MP, r1) = limit((sdata(SKILL_ATTR_MAG, r1) * 3 + sdata(SKILL_ATTR_WIL, r1) + sdata(SKILL_ATTR_LER, r1)) / 3 * lvhosei / 10 + sdata(SKILL_ATTR_MAG, r1), 1, 2000000) * limit(sdata(SKILL_ATTR_MANA, r1), 1, 1000) / 100
	cdata(CDATA_MAX_HP, r1) = limit((sdata(SKILL_ATTR_CON, r1) * 3 + sdata(SKILL_ATTR_STR, r1) + sdata(SKILL_ATTR_WIL, r1)) / 3 * lvhosei / 10 + sdata(SKILL_ATTR_CON, r1), 1, 2000000) * limit(sdata(SKILL_ATTR_LIFE, r1), 1, 1000) / 100 + 5
	cdata(CDATA_MAX_SP, r1) = 100 + (sdata(SKILL_ATTR_WIL, r1) + sdata(SKILL_ATTR_CON, r1)) / 5 + trait(TRAIT_NORMAL_STAT_STAMINA) * 8
	if ( r1 == CHARA_PLAYER ) {
		if ( trait(TRAIT_ETHER_ABNORMAL_LIBIDO) != 0 ) {
			cdata(CDATA_MAX_SP, r1) = cdata(CDATA_MAX_SP, r1) * 6 / 5
		}
	}
	if ( cdata(CDATA_MAX_MP, r1) < 1 ) {
		cdata(CDATA_MAX_MP, r1) = 1
	}
	if ( cdata(CDATA_MAX_HP, r1) < 1 ) {
		cdata(CDATA_MAX_HP, r1) = 1
	}
	if ( r1 >= 57 & cdata(CDATA_ALLIED, r1) == 0 & r1 != CHARA_PLAYER ) {
		if ( cdata(CDATA_DRAIN_HP, r1) < 100 ) {
			cdata(CDATA_DV, r1) += limit(cdata(CDATA_LEVEL, r1) / 2, 1, 200)
		}
		if ( cdata(CDATA_DRAIN_HP, r1) < 100 ) {
			cdata(CDATA_PV, r1) += limit(cdata(CDATA_LEVEL, r1) / 2, 1, 200)
		}
		if ( cdata(CDATA_QUALITY, r1) == FIX_QUALITY_GREAT ) {
			cdata(CDATA_MAX_HP, r1) = cdata(CDATA_MAX_HP, r1) * 3 / 2
		}
		if ( cdata(CDATA_QUALITY, r1) >= FIX_QUALITY_MIRACLE | cdata(CDATA_ID, r1) == CREATURE_ID_AILE_THE_ATTENDANT ) {
			cdata(CDATA_MAX_HP, r1) = cdata(CDATA_MAX_HP, r1) * 6
			sdata(SKILL_RES_FIRE, r1) += 150
			sdata(SKILL_RES_COLD, r1) += 150
			sdata(SKILL_RES_LIGHTNING, r1) += 150
			sdata(SKILL_RES_NERVE, r1) += 150
			sdata(SKILL_RES_MIND, r1) += 150
			sdata(SKILL_RES_NETHER, r1) += 150
			sdata(SKILL_RES_POISON, r1) += 150
			sdata(SKILL_RES_SOUND, r1) += 150
			sdata(SKILL_RES_CHAOS, r1) += 150
			sdata(SKILL_RES_DARKNESS, r1) += 150
			sdata(SKILL_RES_MAGIC, r1) += 150
		}
	}
	else {
		cdata(CDATA_MAX_HP, r1) += 10
	}
	if ( cdata(CDATA_ID, r1) == CREATURE_ID_GUNFISH | cdata(CDATA_ID, r1) == CREATURE_ID_ARCHAYEEK_GUNNER | cdata(CDATA_ID, r1) == CREATURE_ID_MILIS_CAPTAIN_OF_THE_SPECIAL_FORCES | cdata(CDATA_ID, r1) == CREATURE_ID_CHAOS_HUNTER | cdata(CDATA_ID, r1) == CREATURE_ID_REQUIEM ) {
		cbitmod CHARA_BIT_QUICK_SHOOTING, r1, 1
	}
	repeat MAX_BLESSINGS + MAX_HEXES
		rp = cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, r1)
		if ( rp == 0 ) {
			break
		}
		calcbuff r1, rp, cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF + 1, r1)
	loop
	if ( cdata(CDATA_ATTACK_STYLE, r1) & STYLE_DUAL_WIELD ) {
		cdata(CDATA_EXTRA_MELEE, r1) += int(sqrt(sdata(SKILL_NORMAL_DUAL_WIELD, r1))) * 3 / 2 + 1
	}
	if ( cdata(CDATA_DEC_ENEMY_CRIT_CHANCE, r1) > 30 ) {
		cdata(CDATA_DEC_ENEMY_CRIT_CHANCE, r1) = 30
	}
	if ( cdata(CDATA_CRIT_CHANCE, r1) > 30 ) {
		cdata(CDATA_ATTACK, r1) += (cdata(CDATA_CRIT_CHANCE, r1) - 30) * 2
		cdata(CDATA_CRIT_CHANCE, r1) = 30
	}
	gosub *calcBurdenPc
	refreshspeed r1
	cbitmod CHARA_BIT_REFRESH, r1, 0
	chararefreshhack = 0
	return

