#deffunc csvstr2 array csvstr2_arg1, str csvstr2_arg2
	locvar_csvstr2_word = csvstr2_arg2
	locvar_csvstr2_p = 0
	locvar_csvstr2_i = strlen(locvar_csvstr2_word)
	repeat 40
		csvstr2_arg1(cnt) = ""
		getstr csvstr2_arg1(cnt), locvar_csvstr2_word, limit(locvar_csvstr2_p, 0, locvar_csvstr2_i), 44
		if ( strsize > locvar_csvstr2_i ) {
			break
		}
		locvar_csvstr2_p += strsize
	loop
	return

#deffunc cargocheck
	if ( refitem(inv(INV_ITEM_ID, ci), DBSPEC_CARGO) == 0 ) {
		return 1
	}
	if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD & mdata(MDATA_TYPE) != MAP_TYPE_HOME & mdata(MDATA_TYPE) != MAP_TYPE_TOWN & mdata(MDATA_TYPE) != MAP_TYPE_LOCAL & mdata(MDATA_TYPE) != MAP_TYPE_FIELD & mdata(MDATA_TYPE) != MAP_TYPE_VILLAGE ) {
		return 1
	}
	return 1

#deffunc rndshuffle array rndshuffle_arg1
	locvar_rndshuffle_p = length(rndshuffle_arg1)
	repeat locvar_rndshuffle_p
		locvar_rndshuffle_r = rnd(locvar_rndshuffle_p)
		locvar_rndshuffle_p--
		locvar_rndshuffle_i = rndshuffle_arg1(locvar_rndshuffle_r)
		rndshuffle_arg1(locvar_rndshuffle_r) = rndshuffle_arg1(locvar_rndshuffle_p)
		rndshuffle_arg1(locvar_rndshuffle_p) = locvar_rndshuffle_i
	loop
	return

#defcfunc dist int dist_arg1, int dist_arg2, int dist_arg3, int dist_arg4
	locvar_dist_d = (dist_arg1 - dist_arg3) * (dist_arg1 - dist_arg3) + (dist_arg2 - dist_arg4) * (dist_arg2 - dist_arg4)
	return int(sqrt(locvar_dist_d))

#defcfunc winposy int winposy_arg1, int winposy_arg2
	if ( winposy_arg2 == 0 ) {
		return ((inf_screenh + 1) * inf_tiles - winposy_arg1) / 2 + 8
	}
	return (windowh - winposy_arg1) / 2

#deffunc cutname var cutname_arg1, int cutname_arg2
	if ( strlen(cutname_arg1) > cutname_arg2 ) {
		locvar_cutname_len = zentohan(cutname_arg1, locvar_cutname_buf, 0)
		sdim locvar_cutname_buf, locvar_cutname_len
		locvar_cutname_ret = zentohan(cutname_arg1, cutname_arg1, locvar_cutname_len)
		if ( strlen(cutname_arg1) > cutname_arg2 ) {
			locvar_cutname_len = 0
			repeat
				if ( locvar_cutname_len >= cutname_arg2 ) {
					break
				}
				locvar_cutname_p = peek(cutname_arg1, locvar_cutname_len)
				if ( locvar_cutname_p >= 129 & locvar_cutname_p <= 159 | locvar_cutname_p >= 224 & locvar_cutname_p <= 252 ) {
					locvar_cutname_p = 2
				}
				else {
					locvar_cutname_p = 1
				}
				locvar_cutname_len += locvar_cutname_p
			loop
			cutname_arg1 = strmid(cutname_arg1, 0, locvar_cutname_len) + ".."
		}
	}
	return

#deffunc cs_list str cs_list_arg1, int cs_list_arg2, int cs_list_arg3, int cs_list_arg4, int cs_list_arg5, int cs_list_arg6, int cs_list_arg7
	if ( cs == cnt ) {
		locvar_cs_list_tx = limit(strlen(cs_list_arg1) * 7 + 32 + cs_list_arg5, 10, 480)
		gsel 3
		pos 264, 96
		gcopy 0, cs_list_arg2, cs_list_arg3, locvar_cs_list_tx, cs_list_arg4
		gsel 0
		pos cs_list_arg2, cs_list_arg3
		gfini locvar_cs_list_tx, cs_list_arg4
		gfdec2 30, 10, 0
		pos cs_list_arg2 + 1, cs_list_arg3 + 1
		gfini locvar_cs_list_tx - 2, cs_list_arg4 - 2
		gfinc 50, 50, 50
		pos cs_list_arg2 + locvar_cs_list_tx - 20, cs_list_arg3 + 4
		gcopy 3, 48, 360, 16, 16
		cs_posbk = cs_list_arg2, cs_list_arg3, locvar_cs_list_tx, cs_list_arg4
	}
	if ( cs_list_arg6 == 0 ) {
		color 10, 10, 10
	}
	if ( cs_list_arg6 == 1 ) {
		color 0, 0, 0 // ITEM_KNOWN_NONE
		if ( inv(INV_ITEM_KNOWN, cs_list_arg7) >= ITEM_KNOWN_FULL ) {
			color 10, 40, 120
			if ( inv(INV_ITEM_STATUS, cs_list_arg7) == ITEM_STATUS_BLESSED ) {
				color 10, 110, 30
			}
			if ( inv(INV_ITEM_STATUS, cs_list_arg7) == ITEM_STATUS_CURSED ) {
				color 150, 10, 10
			}
			if ( inv(INV_ITEM_STATUS, cs_list_arg7) == ITEM_STATUS_DOOMED ) {
				color 100, 10, 100
			}
		}

		/********** ANNA/BLOODYSHADE CUSTOM - BEGINNING **********/ // Highlight/Filter Items.

		if ( ItemHighlight(inv(INV_ITEM_ID, cs_list_arg7)) == 1 & TweakData(TWEAK_CONVENIENCE_HIGHLIGHT_FILTER, TWEAK_CATEGORY_CONVENIENCE) > 0 ) {
			if ( inv(INV_ITEM_KNOWN, cs_list_arg7) < ITEM_KNOWN_FULL ) {
				color 25, 80, 110
			}

			if ( inv(INV_ITEM_KNOWN, cs_list_arg7) >= ITEM_KNOWN_FULL & inv(INV_ITEM_STATUS, cs_list_arg7) == ITEM_STATUS_NORMAL ) {
				color 50, 50, 220
			}
		}

		/********** ANNA/BLOODYSHADE CUSTOM - ENDING **********/

		if ( ibit(ITEM_BIT_NO_DROP, cs_list_arg7) ) {
			color 120, 80, 0
		}
	}
	if ( cs_list_arg6 == 2 ) {
		color 240, 240, 240
	}
	if ( cs_list_arg6 == 3 ) {
		color 160, 10, 10
	}
	pos cs_list_arg2 + 4 + cs_list_arg5, cs_list_arg3 + 3
	mes cs_list_arg1
	return

#deffunc cs_listbk
	if ( cs_bk == (-1) ) {
		return
	}
	pos cs_posbk, cs_posbk(1)
	gcopy 3, 264, 96, cs_posbk(2), cs_posbk(3)
	return

#deffunc gohostile
	repeat MAX_CHARA_TOTAL - MAX_CHARA_SAVE, MAX_CHARA_SAVE
		if ( cdata(CDATA_ROLE, cnt) == ROLE_GUARD | cdata(CDATA_ROLE, cnt) == ROLE_SHOP_GUARD | cdata(CDATA_ROLE, cnt) == ROLE_SHOP_WANDER | cdata(CDATA_ROLE, cnt) == ROLE_BOUNTY_HUNTER ) {
			cdata(CDATA_RELATION, cnt) = -3
			cdata(CDATA_AI_AGGRO, cnt) = 80
			cdata(CDATA_EMO_ICON, cnt) = 18 + 100 * 2
		}
	loop
	return

#deffunc modgauge int modgauge_charaidx, int modgauge_amount
	locvar_modgauge_a = modgauge_amount
	cdata(CDATA_POWER_GAUGE, modgauge_charaidx) += locvar_modgauge_a
	locvar_modgauge_max = 100
	if ( cdata(CDATA_SHIFT_FORM, modgauge_charaidx) > SHIFT_FORM_NONE ) {
		locvar_modgauge_max = 200
	}
	if ( cdata(CDATA_EVOLUTION_STAGE, modgauge_charaidx) > 0 ) {
		locvar_modgauge_max = 200
	}
	if ( cdata(CDATA_QUALITY, modgauge_charaidx) >= FIX_QUALITY_MIRACLE ) {
		locvar_modgauge_max = 200
	}
	if ( cdata(CDATA_POWER_GAUGE, modgauge_charaidx) > locvar_modgauge_max ) {
		cdata(CDATA_POWER_GAUGE, modgauge_charaidx) = locvar_modgauge_max
	}
	if ( cdata(CDATA_POWER_GAUGE, modgauge_charaidx) < 0 ) {
		cdata(CDATA_POWER_GAUGE, modgauge_charaidx) = 0
	}
	return

#deffunc modkarma int modkarma_arg1, int modkarma_arg2
	locvar_modkarma_a = modkarma_arg2
	if ( trait(TRAIT_OTHER_WICKED) ) {
		if ( locvar_modkarma_a < 0 ) {
			locvar_modkarma_a = locvar_modkarma_a * 75 / 100
			if ( locvar_modkarma_a == 0 ) {
				return
			}
		}
	}
	if ( trait(TRAIT_OTHER_SAINT) ) {
		if ( locvar_modkarma_a < 0 ) {
			locvar_modkarma_a = locvar_modkarma_a * 150 / 100
		}
	}
	txtmore
	if ( locvar_modkarma_a >= 0 ) {
		txtef COLOR_YELLOW
	}
	else {
		txtef COLOR_PURPLE
	}
	txt lang("カルマ変動(" + locvar_modkarma_a + ") ", "Karma(" + locvar_modkarma_a + ")")
	if ( locvar_modkarma_a > 0 ) {
		if ( cdata(CDATA_KARMA, modkarma_arg1) < (-30) ) {
			if ( cdata(CDATA_KARMA, modkarma_arg1) + locvar_modkarma_a >= (-30) ) {
				txtmore
				txtef COLOR_GREEN
				txt lang("あなたの罪は軽くなった。", "You are no longer a criminal.")
			}
		}
	}
	if ( locvar_modkarma_a < 0 ) {
		if ( cdata(CDATA_KARMA, modkarma_arg1) >= (-30) ) {
			if ( cdata(CDATA_KARMA, modkarma_arg1) + locvar_modkarma_a < (-30) ) {
				txtmore
				txtef COLOR_PURPLE
				txt lang("あなたは今や罪人だ。", "You are a criminal now.")
				gohostile
			}
		}
	}
	cdata(CDATA_KARMA, modkarma_arg1) += locvar_modkarma_a
	locvar_modkarma_max = 20
	if ( trait(TRAIT_OTHER_WICKED) ) {
		locvar_modkarma_max -= 20
	}
	if ( trait(TRAIT_OTHER_SAINT) ) {
		locvar_modkarma_max += 20
	}
	if ( cdata(CDATA_KARMA, modkarma_arg1) > locvar_modkarma_max ) {
		cdata(CDATA_KARMA, modkarma_arg1) = locvar_modkarma_max
	}
	if ( cdata(CDATA_KARMA, modkarma_arg1) < (-100) ) {
		cdata(CDATA_KARMA, modkarma_arg1) = -100
	}
	return

#deffunc modrank int modrank_arg1, int modrank_arg2, int modrank_arg3
	locvar_modrank_p = 120 + modrank_arg1
	locvar_modrank_p(1) = gdata(locvar_modrank_p) / 100
	locvar_modrank_orgrank = gdata(locvar_modrank_p)
	locvar_modrank_i = modrank_arg2
	if ( modrank_arg2 > 0 ) {
		locvar_modrank_i = modrank_arg2 * (locvar_modrank_p(1) + 20) * (locvar_modrank_p(1) + 20) / 2500
		gdata(STARTING_GDATA_RANK_NORMA + modrank_arg1) = ranknorma(modrank_arg1)
		if ( gdata(locvar_modrank_p) == 100 ) {
			return
		}
		if ( modrank_arg3 != 0 ) {
			if ( locvar_modrank_i / 100 > modrank_arg3 ) {
				locvar_modrank_i = modrank_arg3 * 100
			}
		}
	}
	gdata(locvar_modrank_p) -= locvar_modrank_i
	if ( gdata(locvar_modrank_p) >= 10000 ) {
		gdata(locvar_modrank_p) = 10000
	}
	if ( gdata(locvar_modrank_p) < 100 ) {
		gdata(locvar_modrank_p) = 100
	}
	if ( locvar_modrank_orgrank / 100 != gdata(locvar_modrank_p) / 100 ) {
		locvar_modrank_i = gdata(locvar_modrank_p) / 100 - locvar_modrank_orgrank / 100
		txtmore
		if ( locvar_modrank_i < 0 ) {
			txtef COLOR_GREEN
		}
		else {
			txtef COLOR_PURPLE
		}
		locvar_modrank_s = " " + locvar_modrank_orgrank / 100 + lang("位 → ", " -> ") + gdata(locvar_modrank_p) / 100 + lang("位 ", "")
		txt lang("ランク変動", "Ranking Change ") + "(" + rankn(10, modrank_arg1) + locvar_modrank_s + ") " + lang("《", "<") + ranktitle(modrank_arg1) + lang("》", ">")
	}
	else {
		if ( locvar_modrank_i > 0 ) {
			txtef COLOR_GREEN
			txtmore
			txt lang("着実に次のランクに近づいている。", "You are one step closer to the next rank.")
		}
	}
	return

#defcfunc sexp int sexp_skillid, int sexp_charid
	return sdata(sexp_skillid + STARTING_SKILL_SPACT, sexp_charid) \ 1000000 / 1000

#defcfunc sgrowth int sgrowth_skillid, int sgrowth_charid
	return sdata(sgrowth_skillid + STARTING_SKILL_SPACT, sgrowth_charid) \ 1000

#deffunc modgrowth int modgrowth_charid, int modgrowth_skillid, int modgrowth_arg3
	locvar_modgrowth_growth = sdata(modgrowth_skillid + STARTING_SKILL_SPACT, modgrowth_charid) \ 1000 + modgrowth_arg3
	if ( locvar_modgrowth_growth > 400 ) {
		locvar_modgrowth_growth = 400
	}
	if ( locvar_modgrowth_growth < 1 ) {
		locvar_modgrowth_growth = 1
		if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_PURGE ) {
			locvar_modgrowth_growth = 2
		}
	}
	sdata(modgrowth_skillid + STARTING_SKILL_SPACT, modgrowth_charid) = sorg(modgrowth_skillid, modgrowth_charid) * 1000000 + sexp(modgrowth_skillid, modgrowth_charid) * 1000 + locvar_modgrowth_growth
	return

#deffunc skillgain int skillgain_charid, int skillgain_skillid, int skillgain_arg3, int skillgain_arg4
	if ( skillgain_skillid >= STARTING_SKILL_SPELL ) {
		if ( skillgain_charid == CHARA_PLAYER ) {
			spell(skillgain_skillid - STARTING_SKILL_SPELL) += skillgain_arg4
		}
	}
	if ( sorg(skillgain_skillid, skillgain_charid) != 0 ) {
		if ( skillgain_skillid < STARTING_SKILL_SPELL ) {
			modgrowth skillgain_charid, skillgain_skillid, 20
		}
		return
	}
	locvar_skillgain_lv = sorg(skillgain_skillid, skillgain_charid) + skillgain_arg3
	if ( locvar_skillgain_lv < 1 ) {
		locvar_skillgain_lv = 1
	}
	if ( skillgain_skillid >= STARTING_SKILL_SPELL ) {
		modgrowth skillgain_charid, skillgain_skillid, 200
	}
	else {
		modgrowth skillgain_charid, skillgain_skillid, 50
	}
	sdata(skillgain_skillid + STARTING_SKILL_SPACT, skillgain_charid) = limit(locvar_skillgain_lv, 0, 2000) * 1000000 + sexp(skillgain_skillid, skillgain_charid) * 1000 + sgrowth(skillgain_skillid, skillgain_charid)
	r1 = skillgain_charid
	gosub *charaRefresh
	return

#deffunc skillmod int skillmod_skillid, int skillmod_charid, int skillmod_arg3
	locvar_skillmod_lv = sorg(skillmod_skillid, skillmod_charid)
	locvar_skillmod_exp = sexp(skillmod_skillid, skillmod_charid) + skillmod_arg3
	locvar_skillmod_growth = sgrowth(skillmod_skillid, skillmod_charid)
	if ( locvar_skillmod_growth < 1 ) {
		locvar_skillmod_growth = 1
		if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_PURGE ) {
			locvar_skillmod_growth = 2
		}
	}
	if ( locvar_skillmod_exp >= 1000 ) {
		locvar_skillmod_lvchange = locvar_skillmod_exp / 1000
		locvar_skillmod_lv += locvar_skillmod_lvchange
		locvar_skillmod_exp = locvar_skillmod_exp \ 1000
		sdata(skillmod_skillid + STARTING_SKILL_SPACT, skillmod_charid) = limit(locvar_skillmod_lv, 0, 2000) * 1000000 + locvar_skillmod_exp * 1000 + locvar_skillmod_growth
		if ( synccheck(skillmod_charid, -1) ) {
			if ( skillmod_charid == CHARA_PLAYER | skillmod_charid < MAX_CHARA_FOLLOWER ) {
				snd SOUNDLIST_DING3
				txtef COLOR_GREEN
			}
			txt txtskillchange(skillmod_skillid, 0, skillmod_charid)
		}
		r1 = skillmod_charid
		gosub *charaRefresh
		return 1
	}
	if ( locvar_skillmod_exp < 0 ) {
		locvar_skillmod_lvchange = -locvar_skillmod_exp / 1000 + 1
		locvar_skillmod_exp = 1000 + locvar_skillmod_exp \ 1000
		if ( locvar_skillmod_lv - locvar_skillmod_lvchange < 1 ) {
			locvar_skillmod_lvchange = locvar_skillmod_lv - 1
			if ( locvar_skillmod_lv == 1 ) {
				if ( locvar_skillmod_lvchange == 0 ) {
					locvar_skillmod_exp = 0
				}
			}
		}
		locvar_skillmod_lv -= locvar_skillmod_lvchange
		repeat locvar_skillmod_lvchange
			locvar_skillmod_growth = int(double(locvar_skillmod_growth) * ((-0.9) + 2)) + 1
			if ( locvar_skillmod_growth > 400 ) {
				locvar_skillmod_growth = 400
			}
		loop
		sdata(skillmod_skillid + STARTING_SKILL_SPACT, skillmod_charid) = limit(locvar_skillmod_lv, 0, 2000) * 1000000 + locvar_skillmod_exp * 1000 + locvar_skillmod_growth
		if ( skillmod_charid == CHARA_PLAYER | skillmod_charid < MAX_CHARA_FOLLOWER ) {
			if ( synccheck(skillmod_charid, -1) ) {
				if ( locvar_skillmod_lvchange != 0 ) {
					txtef COLOR_RED
					txt txtskillchange(skillmod_skillid, 1, skillmod_charid)
				}
			}
		}
		r1 = skillmod_charid
		gosub *charaRefresh
		return 1
	}
	sdata(skillmod_skillid + STARTING_SKILL_SPACT, skillmod_charid) = limit(locvar_skillmod_lv, 0, 2000) * 1000000 + locvar_skillmod_exp * 1000 + locvar_skillmod_growth
	return

#deffunc skillexp int skillexp_skillid, int skillexp_charid, int skillexp_amount, int skillexp_arg4, int skillexp_arg5
	if ( sorg(skillexp_skillid, skillexp_charid) <= 0 ) {
		return 0
	}
	if ( skillexp_amount == 0 ) {
		return
	}
	if ( sdataref(SKILL_DATAREF_USE, skillexp_skillid) != 0 ) {
		skillexp sdataref(SKILL_DATAREF_USE, skillexp_skillid), skillexp_charid, skillexp_amount / (2 + skillexp_arg4)
	}
	locvar_skillmod_lv = sorg(skillexp_skillid, skillexp_charid)
	locvar_skillexp_lvs = limit(sorg(skillexp_skillid, skillexp_charid), 1, 400)
	locvar_skillexp_lvli = sqrt(locvar_skillexp_lvs * 10) * 2
	locvar_skillmod_growth = sgrowth(skillexp_skillid, skillexp_charid)
	if ( locvar_skillmod_growth == 0 ) {
		return
	}
	if ( skillexp_amount > 0 ) {
		if ( locvar_skillmod_lv >= cdata(CDATA_INIT_SPEED, skillexp_charid) + 100 ) {
			locvar_skillmod_exp = (skillexp_amount + 16000 / (cdata(CDATA_INIT_LIFEMANA, skillexp_charid) + cdata(CDATA_INIT_ATTR, skillexp_charid) + 500) + 1) * locvar_skillmod_growth / (100 + locvar_skillexp_lvli * 10)
		}
		else {
			locvar_skillmod_exp = skillexp_amount * locvar_skillmod_growth / (100 + locvar_skillexp_lvli * 10)
		}
		if ( skillexp_skillid >= STARTING_SKILL_ATTR ) {
			if ( skillexp_skillid < MAX_SKILL_ATTR ) {
				if ( cdata(STARTING_CDATA_FOOD_EXP + skillexp_skillid - RANGE_CDATA_FOOD_EXP, skillexp_charid) > 0 ) {
					locvar_skillmod_exp = locvar_skillmod_exp * (100 + cdata(STARTING_CDATA_FOOD_EXP + skillexp_skillid - RANGE_CDATA_FOOD_EXP, skillexp_charid)) / 100
				}
			}
		}
		if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_PURGE ) {
			if ( locvar_skillmod_exp == 0 ) {
				locvar_skillmod_exp = 1
			}
		}
		if ( locvar_skillmod_exp == 0 ) {
			if ( rnd(locvar_skillexp_lvli / 10 + 1) == 0 ) {
				locvar_skillmod_exp = 1
			}
			else {
				return 0
			}
		}
	}
	else {
		locvar_skillmod_exp = skillexp_amount
	}
	if ( gdata(GDATA_TEMPORARY_FLAGS2) == 1200 ) {
		if ( rnd(10) <= 6 ) {
			locvar_skillmod_exp = 0
		}
	}
	if ( gdata(GDATA_AREA) == AREA_SHOW_HOUSE ) {
		locvar_skillmod_exp = 0
	}

	/********** ANNA CUSTOM - BEGINNING **********/

	if ( PreservedTarget != (-1) ) {
		if ( cbit(CHARA_BIT_SANDBAG, TrueTarget) & TweakData(TWEAK_GAMEPLAY_SANDBAG_TRAINING, TWEAK_CATEGORY_GAMEPLAY) == 0 ) {
			locvar_skillmod_exp = 0
		}
	}

	/********** ANNA CUSTOM - ENDING **********/

	if ( cbit(CHARA_BIT_SANDBAG, skillexp_charid) & TweakData(TWEAK_GAMEPLAY_SANDBAG_TRAINING, TWEAK_CATEGORY_GAMEPLAY) == 0 ) {
		locvar_skillmod_exp = 0
	}
	if ( gdata(GDATA_SENSE_OBJECT) == 0 & TweakData(TWEAK_GAMEPLAY_DISABLE_STUDY_DAYS, TWEAK_CATEGORY_GAMEPLAY) == FALSE ) {
		if ( skillexp_charid < MAX_CHARA_FOLLOWER ) {
			if ( gdata(GDATA_FLAG_STUDY_BONUS_KIND) == 0 ) {
				if ( skillexp_skillid == SKILL_NORMAL_WEIGHT_LIFTING | skillexp_skillid == SKILL_NORMAL_HEALING | skillexp_skillid == SKILL_NORMAL_MEDITATION | skillexp_skillid == SKILL_NORMAL_MAGIC_CAPACITY | skillexp_skillid == SKILL_NORMAL_HEAVY_ARMOR | skillexp_skillid == SKILL_NORMAL_MEDIUM_ARMOR | skillexp_skillid == SKILL_NORMAL_LIGHT_ARMOR | skillexp_skillid == SKILL_NORMAL_FAITH ) {
					locvar_skillmod_exp = locvar_skillmod_exp * 3
				}
			}
			if ( gdata(GDATA_FLAG_STUDY_BONUS_KIND) == 1 ) {
				if ( skillexp_skillid == SKILL_NORMAL_TACTICS | skillexp_skillid == SKILL_NORMAL_DUAL_WIELD | skillexp_skillid == SKILL_NORMAL_TWO_HAND | skillexp_skillid == SKILL_NORMAL_SHIELD | skillexp_skillid == SKILL_NORMAL_EVASION | skillexp_skillid == SKILL_NORMAL_EYE_OF_MIND | skillexp_skillid == SKILL_NORMAL_GREATER_EVASION | skillexp_skillid == SKILL_NORMAL_MARKSMAN | (skillexp_skillid >= SKILL_WEAPON_LONGSWORD & skillexp_skillid < MAX_SKILL_WEAPON) ) {
					locvar_skillmod_exp = locvar_skillmod_exp * 3
				}
			}
			if ( gdata(GDATA_FLAG_STUDY_BONUS_KIND) == 2 ) {
				if ( skillexp_skillid == SKILL_NORMAL_NEGOTIATION | skillexp_skillid == SKILL_NORMAL_INVESTING | skillexp_skillid == SKILL_NORMAL_CARPENTRY | skillexp_skillid == SKILL_NORMAL_TAILORING | skillexp_skillid == SKILL_NORMAL_ALCHEMY | skillexp_skillid == SKILL_NORMAL_JEWELER | skillexp_skillid == SKILL_NORMAL_GARDENING | skillexp_skillid == SKILL_NORMAL_PERFORMER | skillexp_skillid == SKILL_NORMAL_COOKING | skillexp_skillid == SKILL_NORMAL_FISHING | skillexp_skillid == SKILL_ACTIVE_PICKPOCKET ) {
					locvar_skillmod_exp = locvar_skillmod_exp * 3
				}
			}
			if ( gdata(GDATA_FLAG_STUDY_BONUS_KIND) == 3 ) {
				if ( skillexp_skillid == SKILL_NORMAL_STEALTH | skillexp_skillid == SKILL_NORMAL_LOCK_PICKING | skillexp_skillid == SKILL_NORMAL_DETECTION | skillexp_skillid == SKILL_NORMAL_MINING | skillexp_skillid == SKILL_NORMAL_DISARM_TRAP | skillexp_skillid == SKILL_NORMAL_TRAVELING | skillexp_skillid == SKILL_NORMAL_SWIMMING | skillexp_skillid == SKILL_ACTIVE_RIDING ) {
					locvar_skillmod_exp = locvar_skillmod_exp * 3
				}
			}
			if ( gdata(GDATA_FLAG_STUDY_BONUS_KIND) == 4 ) {
				if ( skillexp_skillid == SKILL_NORMAL_LITERACY | skillexp_skillid == SKILL_NORMAL_GENE_ENGINEER | skillexp_skillid == SKILL_NORMAL_ANATOMY | skillexp_skillid == SKILL_NORMAL_SENSE_QUALITY | skillexp_skillid == SKILL_NORMAL_MEMORIZATION | skillexp_skillid == SKILL_NORMAL_CASTING | skillexp_skillid == SKILL_NORMAL_MAGIC_DEVICE | skillexp_skillid == SKILL_NORMAL_CONTROL_MAGIC ) {
					locvar_skillmod_exp = locvar_skillmod_exp * 3
				}
			}
			if ( skillexp_skillid >= SKILL_SPELL_HEAL_LIGHT & skillexp_skillid < MAX_SPELL ) {
				if ( cdata(CDATA_ADVANCED_CASTING_ENABLED, CHARA_PLAYER) == TRUE ) {
					if ( gdata(GDATA_TEMPORARY_FLAGS) != 11111111 ) {
						locvar_skillmod_exp = locvar_skillmod_exp * 3
					}
				}
			}
		}
	}
	if ( cdata(STARTING_CDATA_FOOD_EXP + SKILL_ATTR_LUC - RANGE_CDATA_FOOD_EXP, skillexp_charid) > 0 & TweakData(TWEAK_GAMEPLAY_REVERT_POST_190_EXP_CHANGES, TWEAK_CATEGORY_GAMEPLAY) == FALSE ) {
		if ( skillexp_skillid >= STARTING_SKILL_WEAPON & skillexp_skillid < MAX_SKILL_ACTIVE ) {
			locvar_skillmod_exp = locvar_skillmod_exp * 11 / 10
		}
	}
	if ( skillexp_skillid >= STARTING_SKILL_WEAPON ) {
		if ( skillexp_charid == CHARA_PLAYER & TweakData(TWEAK_GAMEPLAY_REVERT_POST_190_EXP_CHANGES, TWEAK_CATEGORY_GAMEPLAY) == FALSE ) {
			locvar_skillmod_exp = locvar_skillmod_exp * 3
		}
		if ( skillexp_charid != CHARA_PLAYER & skillexp_charid < MAX_CHARA_FOLLOWER ) {
			locvar_skillmod_exp = locvar_skillmod_exp * 4
		}
	}
	if ( locvar_skillmod_exp > 20000 ) {
		locvar_skillmod_exp = 20000
	}
	if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_OVERDOSE ) {
		if ( locvar_skillmod_exp > 0 ) {
			locvar_skillmod_exp = locvar_skillmod_exp * (gdata(GDATA_FLAG_OVERDOSE_MODE_EXP_MULT) + 3)
		}
	}
	if ( gdata(GDATA_SLEEP) >= 50 ) {
		if ( skillexp_charid == CHARA_PLAYER | skillexp_charid < MAX_CHARA_FOLLOWER ) {
			locvar_skillmod_exp = 0
		}
	}
	if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_PURGE ) {
		if ( skillexp_charid < MAX_CHARA_FOLLOWER ) {
			if ( locvar_skillmod_exp < gdata(GDATA_FLAG_GUARANTEED_EXP_PERCENTAGE) ) {
				locvar_skillmod_exp = gdata(GDATA_FLAG_GUARANTEED_EXP_PERCENTAGE)
			}
		}
	}
	if ( TweakData(TWEAK_GAMEPLAY_DISABLE_STUDY_DAYS, TWEAK_CATEGORY_GAMEPLAY) == FALSE ) {
		if ( skillexp_skillid == SKILL_NORMAL_WEIGHT_LIFTING | skillexp_skillid == SKILL_NORMAL_HEALING | skillexp_skillid == SKILL_NORMAL_MEDITATION | skillexp_skillid == SKILL_NORMAL_MAGIC_CAPACITY | skillexp_skillid == SKILL_NORMAL_HEAVY_ARMOR | skillexp_skillid == SKILL_NORMAL_MEDIUM_ARMOR | skillexp_skillid == SKILL_NORMAL_LIGHT_ARMOR | skillexp_skillid == SKILL_NORMAL_FAITH ) {
			if ( gdata(GDATA_FLAG_STUDY_BONUS_TRAINING_EXP) < 15000 ) {
				gdata(GDATA_FLAG_STUDY_BONUS_TRAINING_EXP) += locvar_skillmod_exp
				if ( gdata(GDATA_FLAG_STUDY_BONUS_TRAINING_EXP) >= 15000 ) {
					if ( gdata(GDATA_FLAG_DESTINY_LETTERS) < 7 ) {
						gdata(GDATA_FLAG_DESTINY_LETTERS)++
					}
				}
			}
		}
		if ( skillexp_skillid == SKILL_NORMAL_TACTICS | skillexp_skillid == SKILL_NORMAL_DUAL_WIELD | skillexp_skillid == SKILL_NORMAL_TWO_HAND | skillexp_skillid == SKILL_NORMAL_SHIELD | skillexp_skillid == SKILL_NORMAL_EVASION | skillexp_skillid == SKILL_NORMAL_EYE_OF_MIND | skillexp_skillid == SKILL_NORMAL_GREATER_EVASION | skillexp_skillid == SKILL_NORMAL_MARKSMAN | (skillexp_skillid >= SKILL_WEAPON_LONGSWORD & skillexp_skillid < MAX_SKILL_WEAPON) ) {
			if ( gdata(GDATA_FLAG_STUDY_BONUS_COMBAT_EXP) < 15000 ) {
				gdata(GDATA_FLAG_STUDY_BONUS_COMBAT_EXP) += locvar_skillmod_exp
				if ( gdata(GDATA_FLAG_STUDY_BONUS_COMBAT_EXP) >= 15000 ) {
					if ( gdata(GDATA_FLAG_DESTINY_LETTERS) < 7 ) {
						gdata(GDATA_FLAG_DESTINY_LETTERS)++
					}
				}
			}
		}
		if ( skillexp_skillid == SKILL_NORMAL_NEGOTIATION | skillexp_skillid == SKILL_NORMAL_INVESTING | skillexp_skillid == SKILL_NORMAL_CARPENTRY | skillexp_skillid == SKILL_NORMAL_TAILORING | skillexp_skillid == SKILL_NORMAL_ALCHEMY | skillexp_skillid == SKILL_NORMAL_JEWELER | skillexp_skillid == SKILL_NORMAL_GARDENING | skillexp_skillid == SKILL_NORMAL_PERFORMER | skillexp_skillid == SKILL_NORMAL_COOKING | skillexp_skillid == SKILL_NORMAL_FISHING | skillexp_skillid == SKILL_ACTIVE_PICKPOCKET ) {
			if ( gdata(GDATA_FLAG_STUDY_BONUS_JOB_EXP) < 15000 ) {
				gdata(GDATA_FLAG_STUDY_BONUS_JOB_EXP) += locvar_skillmod_exp
				if ( gdata(GDATA_FLAG_STUDY_BONUS_JOB_EXP) >= 15000 ) {
					if ( gdata(GDATA_FLAG_DESTINY_LETTERS) < 7 ) {
						gdata(GDATA_FLAG_DESTINY_LETTERS)++
					}
				}
			}
		}
		if ( skillexp_skillid == SKILL_NORMAL_STEALTH | skillexp_skillid == SKILL_NORMAL_LOCK_PICKING | skillexp_skillid == SKILL_NORMAL_DETECTION | skillexp_skillid == SKILL_NORMAL_MINING | skillexp_skillid == SKILL_NORMAL_DISARM_TRAP | skillexp_skillid == SKILL_NORMAL_TRAVELING | skillexp_skillid == SKILL_NORMAL_SWIMMING | skillexp_skillid == SKILL_ACTIVE_RIDING ) {
			if ( gdata(GDATA_FLAG_STUDY_BONUS_EXPLORATION_EXP) < 15000 ) {
				gdata(GDATA_FLAG_STUDY_BONUS_EXPLORATION_EXP) += locvar_skillmod_exp
				if ( gdata(GDATA_FLAG_STUDY_BONUS_EXPLORATION_EXP) >= 15000 ) {
					if ( gdata(GDATA_FLAG_DESTINY_LETTERS) < 7 ) {
						gdata(GDATA_FLAG_DESTINY_LETTERS)++
					}
				}
			}
		}
		if ( skillexp_skillid == SKILL_NORMAL_LITERACY | skillexp_skillid == SKILL_NORMAL_GENE_ENGINEER | skillexp_skillid == SKILL_NORMAL_ANATOMY | skillexp_skillid == SKILL_NORMAL_SENSE_QUALITY | skillexp_skillid == SKILL_NORMAL_MEMORIZATION | skillexp_skillid == SKILL_NORMAL_CASTING | skillexp_skillid == SKILL_NORMAL_MAGIC_DEVICE | skillexp_skillid == SKILL_NORMAL_CONTROL_MAGIC ) {
			if ( gdata(GDATA_FLAG_STUDY_BONUS_STUDY_EXP) < 15000 ) {
				gdata(GDATA_FLAG_STUDY_BONUS_STUDY_EXP) += locvar_skillmod_exp
				if ( gdata(GDATA_FLAG_STUDY_BONUS_STUDY_EXP) >= 15000 ) {
					if ( gdata(GDATA_FLAG_DESTINY_LETTERS) < 7 ) {
						gdata(GDATA_FLAG_DESTINY_LETTERS)++
					}
				}
			}
		}
	}
	if ( locvar_skillmod_exp > 0 ) {
		if ( skillexp_skillid >= STARTING_SKILL_WEAPON ) {
			if ( skillexp_arg5 != 1000 ) {
				if ( cdata(CDATA_EXP_TO_NEXT_LVL, skillexp_charid) < 1000 ) {
					locvar_skillexp_exp2 = rnd(cdata(CDATA_EXP_TO_NEXT_LVL, skillexp_charid) * locvar_skillmod_exp / 1000 / (cdata(CDATA_LEVEL, skillexp_charid) + skillexp_arg5) + 1) + rnd(2)
				}
				if ( cdata(CDATA_EXP_TO_NEXT_LVL, skillexp_charid) >= 1000 ) {
					locvar_skillexp_exp2 = rnd(cdata(CDATA_EXP_TO_NEXT_LVL, skillexp_charid) / 1000 * locvar_skillmod_exp / (cdata(CDATA_LEVEL, skillexp_charid) + skillexp_arg5) + 1) + rnd(2)
				}
				cdata(CDATA_EXP, skillexp_charid) += locvar_skillexp_exp2
				if ( skillexp_charid == CHARA_PLAYER ) {
					gdata(GDATA_SLEEP_EXP) += locvar_skillexp_exp2
				}
			}
		}
	}
	locvar_skillmod_exp += sexp(skillexp_skillid, skillexp_charid)
	if ( locvar_skillmod_exp >= 1000 ) {
		locvar_skillmod_lvchange = locvar_skillmod_exp / 1000
		locvar_skillmod_exp = locvar_skillmod_exp \ 1000
		locvar_skillmod_lv += locvar_skillmod_lvchange
		repeat locvar_skillmod_lvchange
			if ( gdata(GDATA_FLAG_GAME_MODE) != GAMEMODE_OVERDOSE & gdata(GDATA_FLAG_GAME_MODE) != GAMEMODE_PURGE ) {
				locvar_skillmod_growth = int(double(locvar_skillmod_growth) * 0.9)
				locvar_skillmod_growth = int(double(locvar_skillmod_growth) * 0.9)
			}
			locvar_skillmod_growth -= 5
			if ( locvar_skillmod_growth <= 1 ) {
				locvar_skillmod_growth = 0
				if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_PURGE ) {
					locvar_skillmod_growth = 1
				}
			}
		loop
		sdata(skillexp_skillid + STARTING_SKILL_SPACT, skillexp_charid) = limit(locvar_skillmod_lv, 0, 2000) * 1000000 + locvar_skillmod_exp * 1000 + locvar_skillmod_growth
		if ( synccheck(skillexp_charid, -1) ) {
			if ( skillexp_charid == CHARA_PLAYER | skillexp_charid < MAX_CHARA_FOLLOWER ) {
				snd SOUNDLIST_DING3
				txtef COLOR_GREEN
				msgalert = 1
			}
			txt txtskillchange(skillexp_skillid, 0, skillexp_charid)
		}
		r1 = skillexp_charid
		gosub *charaRefresh
		return 1
	}
	if ( locvar_skillmod_exp < 0 ) {
		locvar_skillmod_lvchange = -locvar_skillmod_exp / 1000 + 1
		locvar_skillmod_exp = 1000 + locvar_skillmod_exp \ 1000
		if ( locvar_skillmod_lv - locvar_skillmod_lvchange < 1 ) {
			locvar_skillmod_lvchange = locvar_skillmod_lv - 1
			if ( locvar_skillmod_lv == 1 ) {
				if ( locvar_skillmod_lvchange == 0 ) {
					locvar_skillmod_exp = 0
				}
			}
		}
		locvar_skillmod_lv -= locvar_skillmod_lvchange
		repeat locvar_skillmod_lvchange
			locvar_skillmod_growth = int(double(locvar_skillmod_growth) * ((-0.9) + 2)) + 1
			if ( locvar_skillmod_growth > 400 ) {
				locvar_skillmod_growth = 400
			}
		loop
		sdata(skillexp_skillid + STARTING_SKILL_SPACT, skillexp_charid) = limit(locvar_skillmod_lv, 0, 2000) * 1000000 + locvar_skillmod_exp * 1000 + locvar_skillmod_growth
		if ( synccheck(skillexp_charid, -1) ) {
			if ( skillexp_charid == CHARA_PLAYER | skillexp_charid < MAX_CHARA_FOLLOWER ) {
				if ( locvar_skillmod_lvchange != 0 ) {
					msgalert = 1
					txtef COLOR_RED
					txt txtskillchange(skillexp_skillid, 1, skillexp_charid)
				}
			}
		}
		r1 = skillexp_charid
		gosub *charaRefresh
		return 1
	}
	sdata(skillexp_skillid + STARTING_SKILL_SPACT, skillexp_charid) = limit(locvar_skillmod_lv, 0, 2000) * 1000000 + locvar_skillmod_exp * 1000 + locvar_skillmod_growth
	return 0

#defcfunc calcfame int calcfame_charid, int calcfame_amount
	locvar_calcfame_p = calcfame_amount * 100 / (100 + cdata(CDATA_FAME, calcfame_charid) / 100 * (cdata(CDATA_FAME, calcfame_charid) / 100) / 2500)
	if ( locvar_calcfame_p < 5 ) {
		locvar_calcfame_p = rnd(5) + 1
	}
	return locvar_calcfame_p

#deffunc decfame int decfame_charid, int decfame_amount
	locvar_calcfame_p = cdata(CDATA_FAME, decfame_charid) / decfame_amount + 5
	locvar_calcfame_p = locvar_calcfame_p + rnd(locvar_calcfame_p / 2) - rnd(locvar_calcfame_p / 2)
	cdata(CDATA_FAME, decfame_charid) -= locvar_calcfame_p
	if ( cdata(CDATA_FAME, decfame_charid) < 0 ) {
		cdata(CDATA_FAME, decfame_charid) = 0
	}
	return locvar_calcfame_p

#defcfunc getworker int getworker_arg1, int getworker_arg2
	locvar_getworker_p = -1
	repeat MAX_CHARA_FOLLOWER
		if ( cnt == CHARA_PLAYER ) {
			continue
		}
		if ( getworker_arg2 != 0 ) {
			if ( cnt != getworker_arg2 ) {
				continue
			}
		}
		if ( cdata(CDATA_AREA, cnt) == getworker_arg1 ) {
			locvar_getworker_p = cnt
			break
		}
	loop
	return locvar_getworker_p

#deffunc removeworker int removeworker_arg1
	repeat MAX_CHARA_FOLLOWER
		if ( cnt == CHARA_PLAYER ) {
			continue
		}
		if ( cdata(CDATA_AREA, cnt) == removeworker_arg1 ) {
			cdata(CDATA_AREA, cnt) = AREA_NONE
		}
	loop
	return

#defcfunc calcshopreform
	return mdata(MDATA_MAX_INV) * 100 + 1000

#deffunc delmef int delmef_arg1
	if ( mef(0, delmef_arg1) == 7 ) {
		evadd EVENT_NUKE, mef(2, delmef_arg1), mef(3, delmef_arg1)
	}
	map(mef(2, delmef_arg1), mef(3, delmef_arg1), 8) = 0
	mef(0, delmef_arg1) = 0
	locvar_delmef_i = 200 - 1
	repeat 200 - delmef_arg1
		if ( mef(0, locvar_delmef_i) != 0 ) {
			repeat 9
				mef(cnt, delmef_arg1) = mef(cnt, locvar_delmef_i)
			loop
			map(mef(2, locvar_delmef_i), mef(3, locvar_delmef_i), 8) = delmef_arg1 + 1
			mef(0, locvar_delmef_i) = 0
			break
		}
		locvar_delmef_i--
	loop
	return

#deffunc addmef int addmef_arg1, int addmef_arg2, int addmef_arg3, int addmef_arg4, int addmef_arg5, int addmef_arg6, int addmef_arg7, int addmef_arg8, int addmef_arg9, int addmef_arg10
	locvar_addmef_p = map(addmef_arg1, addmef_arg2, 0)
	if ( addmef_arg3 == 5 ) {
		if ( chipm(CHIPM_ROLE, locvar_addmef_p) == MAP_CHIP_ROLE_WATER ) {
			return
		}
	}
	if ( map(addmef_arg1, addmef_arg2, 8) != 0 ) {
		locvar_delmef_i = map(addmef_arg1, addmef_arg2, 8) - 1
	}
	else {
		locvar_delmef_i = -1
		repeat 200
			if ( mef(0, cnt) == 0 ) {
				locvar_delmef_i = cnt
				break
			}
		loop
		if ( locvar_delmef_i == (-1) ) {
			locvar_delmef_i = rnd(200)
			map(mef(2, locvar_delmef_i), mef(3, locvar_delmef_i), 8) = 0
		}
	}
	mef(0, locvar_delmef_i) = addmef_arg3, addmef_arg4 + addmef_arg10 * 10000, addmef_arg1, addmef_arg2, addmef_arg5, addmef_arg6, addmef_arg7, addmef_arg8, addmef_arg9
	map(addmef_arg1, addmef_arg2, 8) = locvar_delmef_i + 1
	return

#deffunc cell_featset int cell_featset_arg1, int cell_featset_arg2, int cell_featset_arg3, int cell_featset_arg4, int cell_featset_arg5, int cell_featset_arg6
	if ( cell_featset_arg3 != (-1) ) {
		locvar_cell_featset_feat = cell_featset_arg3
	}
	else {
		locvar_cell_featset_feat = map(cell_featset_arg1, cell_featset_arg2, 6) \ 1000
	}
	if ( cell_featset_arg4 != (-1) ) {
		locvar_cell_featset_feat(1) = cell_featset_arg4
	}
	else {
		locvar_cell_featset_feat(1) = map(cell_featset_arg1, cell_featset_arg2, 6) / 1000 \ 100
	}
	if ( cell_featset_arg5 != (-1) ) {
		locvar_cell_featset_feat(2) = cell_featset_arg5
	}
	else {
		locvar_cell_featset_feat(2) = map(cell_featset_arg1, cell_featset_arg2, 6) / 100000 \ 100
	}
	if ( cell_featset_arg6 != (-1) ) {
		locvar_cell_featset_feat(3) = cell_featset_arg6
	}
	else {
		locvar_cell_featset_feat(3) = map(cell_featset_arg1, cell_featset_arg2, 6) / 10000000
	}
	map(cell_featset_arg1, cell_featset_arg2, 6) = locvar_cell_featset_feat + locvar_cell_featset_feat(1) * 1000 + locvar_cell_featset_feat(2) * 100000 + locvar_cell_featset_feat(3) * 10000000
	return

#deffunc cell_featread int cell_featread_arg1, int cell_featread_arg2, int
	feat = map(cell_featread_arg1, cell_featread_arg2, 6) \ 1000, map(cell_featread_arg1, cell_featread_arg2, 6) / 1000 \ 100, map(cell_featread_arg1, cell_featread_arg2, 6) / 100000 \ 100, map(cell_featread_arg1, cell_featread_arg2, 6) / 10000000
	return 0

#deffunc cell_featclear int cell_featclear_arg1, int cell_featclear_arg2
	map(cell_featclear_arg1, cell_featclear_arg2, 6) = 0
	return

#deffunc cell_check int cell_check_arg1, int cell_check_arg2
	cellaccessover = 1
	cellaccess = 1
	cellchara = -1
	cellfeat = -1
	if ( cell_check_arg1 < 0 | cell_check_arg1 >= mdata(MDATA_WIDTH) | cell_check_arg2 < 0 | cell_check_arg2 >= mdata(MDATA_HEIGHT) ) {
		cellaccess = 0
		cellaccessover = 0
		return
	}
	if ( map(cell_check_arg1, cell_check_arg2, 1) != 0 ) {
		cellchara = map(cell_check_arg1, cell_check_arg2, 1) - 1
		cellaccess = 0
	}
	if ( map(cell_check_arg1, cell_check_arg2, 6) != 0 ) {
		cellfeat = map(cell_check_arg1, cell_check_arg2, 6) / 1000 \ 100
		if ( chipm(CHIPM_ATTRIB, map(cell_check_arg1, cell_check_arg2, 6) \ 1000) & CHIPM_ATTRIB_CANT_PASS ) {
			cellaccess = 0
		}
	}
	if ( chipm(CHIPM_ATTRIB, map(cell_check_arg1, cell_check_arg2, 0)) & CHIPM_ATTRIB_CANT_PASS ) {
		cellaccess = 0
	}
	return

#deffunc cell_swap int cell_swap_arg1, int cell_swap_arg2, int cell_swap_arg3, int cell_swap_arg4
	if ( gdata(GDATA_RIDER) != 0 ) {
		if ( gdata(GDATA_RIDER) == cell_swap_arg1 | gdata(GDATA_RIDER) == cell_swap_arg2 ) {
			return
		}
	}
	if ( cell_swap_arg2 != (-1) ) {
		if ( cdata(CDATA_IN_TAGTEAM, cell_swap_arg1) == 1 ) {
			return
		}
		if ( cdata(CDATA_TAGTEAM_PARTNER, cell_swap_arg2) == 0 ) {
			if ( cdata(CDATA_IN_TAGTEAM, cell_swap_arg2) == 1 ) {
				return
			}
		}
	}
	locvar_cell_swap_tc = cell_swap_arg2
	if ( locvar_cell_swap_tc == (-1) ) {
		if ( map(cell_swap_arg3, cell_swap_arg4, 1) != 0 ) {
			locvar_cell_swap_tc = map(cell_swap_arg3, cell_swap_arg4, 1) - 1
		}
	}
	if ( locvar_cell_swap_tc != (-1) ) {
		map(cdata(CDATA_X, cell_swap_arg1), cdata(CDATA_Y, cell_swap_arg1), 1) = locvar_cell_swap_tc + 1
		locvar_cell_swap_x2 = cdata(CDATA_X, locvar_cell_swap_tc)
		locvar_cell_swap_y2 = cdata(CDATA_Y, locvar_cell_swap_tc)
		cdata(CDATA_X, locvar_cell_swap_tc) = cdata(CDATA_X, cell_swap_arg1)
		cdata(CDATA_Y, locvar_cell_swap_tc) = cdata(CDATA_Y, cell_swap_arg1)
	}
	else {
		map(cdata(CDATA_X, cell_swap_arg1), cdata(CDATA_Y, cell_swap_arg1), 1) = 0
		locvar_cell_swap_x2 = cell_swap_arg3
		locvar_cell_swap_y2 = cell_swap_arg4
	}
	map(locvar_cell_swap_x2, locvar_cell_swap_y2, 1) = cell_swap_arg1 + 1
	cdata(CDATA_X, cell_swap_arg1) = locvar_cell_swap_x2
	cdata(CDATA_Y, cell_swap_arg1) = locvar_cell_swap_y2
	if ( cell_swap_arg1 == 0 | locvar_cell_swap_tc == 0 ) {
		if ( gdata(GDATA_RIDER) ) {
			cdata(CDATA_X, gdata(GDATA_RIDER)) = cdata(CDATA_X, CHARA_PLAYER)
			cdata(CDATA_Y, gdata(GDATA_RIDER)) = cdata(CDATA_Y, CHARA_PLAYER)
		}
	}
	if ( cdata(CDATA_IN_TAGTEAM, cell_swap_arg1) == (-1) ) {
		cdata(CDATA_X, cdata(CDATA_TAGTEAM_PARTNER, cell_swap_arg1)) = cdata(CDATA_X, cell_swap_arg1)
		cdata(CDATA_Y, cdata(CDATA_TAGTEAM_PARTNER, cell_swap_arg1)) = cdata(CDATA_Y, cell_swap_arg1)
	}
	if ( locvar_cell_swap_tc != (-1) ) {
		if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_swap_tc) == (-1) ) {
			cdata(CDATA_X, cdata(CDATA_TAGTEAM_PARTNER, locvar_cell_swap_tc)) = cdata(CDATA_X, locvar_cell_swap_tc)
			cdata(CDATA_Y, cdata(CDATA_TAGTEAM_PARTNER, locvar_cell_swap_tc)) = cdata(CDATA_Y, locvar_cell_swap_tc)
		}
	}
	return

#deffunc cell_movechara int cell_movechara_arg1, int cell_movechara_arg2, int cell_movechara_arg3
	if ( map(cell_movechara_arg2, cell_movechara_arg3, 1) != 0 ) {
		locvar_cell_movechara_rc = map(cell_movechara_arg2, cell_movechara_arg3, 1) - 1
		if ( locvar_cell_movechara_rc == cell_movechara_arg1 ) {
			return
		}
		cell_swap cell_movechara_arg1, locvar_cell_swap_tc
	}
	else {
		map(cdata(CDATA_X, cell_movechara_arg1), cdata(CDATA_Y, cell_movechara_arg1), 1) = 0
		cdata(CDATA_X, cell_movechara_arg1) = cell_movechara_arg2
		cdata(CDATA_Y, cell_movechara_arg1) = cell_movechara_arg3
		map(cdata(CDATA_X, cell_movechara_arg1), cdata(CDATA_Y, cell_movechara_arg1), 1) = cell_movechara_arg1 + 1
	}
	return

#deffunc route_info var route_info_arg1, var route_info_arg2, int route_info_arg3
	if ( route(0, route_info_arg3 \ maxroute) == 1 ) {
		route_info_arg1 += route(1, route_info_arg3 \ maxroute)
	}
	else {
		route_info_arg2 += route(1, route_info_arg3 \ maxroute)
	}
	if ( route_info_arg3 \ maxroute \ 2 == 0 ) {
		if ( route(0, (route_info_arg3 + 1) \ maxroute) != route(0, route_info_arg3 \ maxroute) ) {
			return -1
		}
	}
	if ( route_info_arg3 >= maxroute ) {
		if ( route_info_arg1 < scx | route_info_arg2 < scy | route_info_arg1 >= scx + inf_screenw | route_info_arg2 >= scy + inf_screenh ) {
			return 0
		}
		if ( route_info_arg1 < 0 | route_info_arg2 < 0 | route_info_arg1 >= mdata(MDATA_WIDTH) | route_info_arg2 >= mdata(MDATA_HEIGHT) ) {
			return 0
		}
		if ( chipm(CHIPM_ATTRIB, map(route_info_arg1, route_info_arg2, 0)) & CHIPM_ATTRIB_CANT_SEE ) {
			return 0
		}
		if ( map(route_info_arg1, route_info_arg2, 6) != 0 ) {
			cell_featread route_info_arg1, route_info_arg2
			if ( chipm(CHIPM_ATTRIB, feat) & CHIPM_ATTRIB_CANT_SEE ) {
				return 0
			}
		}
		if ( map(route_info_arg1, route_info_arg2, 8) != 0 ) {
			if ( mef(0, map(route_info_arg1, route_info_arg2, 8) - 1) == 9 ) {
				if ( gdata(STARTING_GDATA_FLAG + 348) == 0 ) {
					return 0
				}
			}
		}
	}
	if ( route(1, route_info_arg3 \ maxroute) == 0 ) {
		return -1
	}
	return 1

#deffunc breath_list
	dim breathlist, 2, 100
	maxbreath = 0
	breathw = 1
	dx = cdata(CDATA_X, cc)
	dy = cdata(CDATA_Y, cc)
	repeat sdataref(SKILL_DATAREF_TG_RANGE, efid) \ EXT_SDATAREF + 1
		if ( route(0, cnt \ maxroute) == 1 ) {
			dx += route(1, cnt \ maxroute)
		}
		else {
			dy += route(1, cnt \ maxroute)
		}
		if ( kouiki == 100 ) {
			if ( cnt < 5 ) {
				if ( cnt == 1 ) {
					breathw = 3
				}
				if ( cnt == 2 ) {
					breathw = 3
				}
				if ( cnt == 3 ) {
					breathw = 5
				}
				if ( cnt == 4 ) {
					breathw = 7
				}
			}
			else {
				if ( cnt == 5 ) {
					breathw = 7
				}
				if ( cnt == 6 ) {
					breathw = 9
				}
				if ( cnt >= 7 ) {
					breathw = 13
				}
			}
		}
		else {
			if ( cnt < 6 ) {
				if ( cnt \ 3 == 1 ) {
					breathw += 2
				}
			}
			else {
				breathw -= 2
				if ( breathw < 3 ) {
					breathw = 3
				}
			}
		}
		repeat breathw
			ty = cnt - breathw / 2 + dy
			repeat breathw
				tx = cnt - breathw / 2 + dx
				if ( tx < scx | ty < scy ) {
					continue
				}
				if ( tx < 0 | ty < 0 | tx >= mdata(MDATA_WIDTH) | ty >= mdata(MDATA_HEIGHT) ) {
					continue
				}
				if ( efid != SKILL_SPACT_MP_BREATH & efid != SKILL_SPACT_GRAVITON_BUSTER ) {
					if ( chipm(CHIPM_ATTRIB, map(tx, ty, 0)) & CHIPM_ATTRIB_CANT_SEE ) {
						continue
					}
				}
				if ( maxbreath >= 100 ) {
					break
				}
				p = 0
				repeat maxbreath
					if ( breathlist(0, cnt) == tx ) {
						if ( breathlist(1, cnt) == ty ) {
							p = 1
							break
						}
					}
				loop
				if ( p == 1 ) {
					continue
				}
				breathlist(0, maxbreath) = tx, ty
				maxbreath++
			loop
		loop
	loop
	return 1

#deffunc draw_emo int draw_emo_arg1, int draw_emo_arg2, int draw_emo_arg3
	gmode 2, 16, 16
	pos draw_emo_arg2 + 16, draw_emo_arg3
	gcopy 3, 32 + cdata(CDATA_EMO_ICON, draw_emo_arg1) \ 100 * 16, 608
	return

#deffunc chara_preparepic int chara_preparepic_arg1, int chara_preparepic_arg2
	if ( chara_preparepic_arg2 == 0 ) {
		locvar_chara_preparepic_p = chara_preparepic_arg1 / 1000
	}
	else {
		locvar_chara_preparepic_p = chara_preparepic_arg2
	}
	gsel 5
	color 0
	boxf 0, 960, chipc(CHIPC_WIDTH, chara_preparepic_arg1), chipc(CHIPC_HEIGHT, chara_preparepic_arg1) + 960
	pos 0, 960
	gcopy 5, chipc(CHIPC_X, chara_preparepic_arg1), chipc(CHIPC_Y, chara_preparepic_arg1), chipc(CHIPC_WIDTH, chara_preparepic_arg1), chipc(CHIPC_HEIGHT, chara_preparepic_arg1)
	gfini chipc(CHIPC_WIDTH, chara_preparepic_arg1), chipc(CHIPC_HEIGHT, chara_preparepic_arg1)
	gfdec2 c_col(0, locvar_chara_preparepic_p), c_col(1, locvar_chara_preparepic_p), c_col(2, locvar_chara_preparepic_p)
	gsel selcur
	return

#deffunc preparePicItem int ich, int cch
    gsel BUFFER_ITEM
    color 0 
    boxf 0,960,chipi(CHIPI_WIDTH, ich),chipi(CHIPI_HEIGHT, ich)+960

	if ich=528 { ; Cards
        gmode 2
        pos 0,960
        gcopy BUFFER_ITEM,0,768,inf_tiles,inf_tiles
        pos 0,1008
        gzoom 22,20,BUFFER_CHR,chipc(CHIPC_X, cch)+8,chipc(CHIPC_Y, cch)+4+(chipc(CHIPC_HEIGHT, cch)>inf_tiles)*8,chipc(CHIPC_WIDTH, cch)-16,chipc(CHIPC_HEIGHT, cch)-8-(chipc(CHIPC_HEIGHT, cch)>inf_tiles)*10,1
        pos 6,974
        gcopy BUFFER_ITEM,0,1008,22,20
        gsel BUFFER_CUR
        return
    }

    if ich=531 { ; Figurines
        pos 8,1058-chipc(CHIPC_HEIGHT, cch)
        gcopy BUFFER_CHR,chipc(CHIPC_X, cch)+8,chipc(CHIPC_Y, cch)+2,chipc(CHIPC_WIDTH, cch)-16,chipc(CHIPC_HEIGHT, cch)-8
        gmode 4,,,150
        color 0,0,0
        pos 0,960+(chipc(CHIPC_HEIGHT, cch)=inf_tiles)*48
        gcopy BUFFER_ITEM,144,768+(chipc(CHIPC_HEIGHT, cch)>inf_tiles)*48,inf_tiles,chipc(CHIPC_HEIGHT, cch)+(chipc(CHIPC_HEIGHT, cch)>inf_tiles)*48 // * 0
        gmode 2
        gsel BUFFER_CUR
        return
    }

	if ich=1119 { ; Meat Filling (30, 33)
	    pos 0, 1055 - chipc(CHIPC_HEIGHT, cch)
	    gcopy BUFFER_CHR, chipc(CHIPC_X, cch), chipc(CHIPC_Y, cch), chipc(CHIPC_WIDTH, cch), chipc(CHIPC_HEIGHT, cch)
        gmode 2
        gsel BUFFER_CUR
        return
    }

	if ich=1206 { ; Golden Doll (18, 36)
		pos 0, 1055 - chipc(CHIPC_HEIGHT, cch)
		gcopy BUFFER_CHR, chipc(CHIPC_X, cch), chipc(CHIPC_Y, cch), chipc(CHIPC_WIDTH, cch), chipc(CHIPC_HEIGHT, cch)
		gfini chipi(CHIPI_WIDTH, ich), chipi(CHIPI_HEIGHT, ich)
		gfdec2 0, 0, 255
        gsel BUFFER_CUR
        return
    }

    pos 0,960
    gcopy BUFFER_ITEM,chipi(CHIPI_X, ich),chipi(CHIPI_Y, ich),chipi(CHIPI_WIDTH, ich),chipi(CHIPI_HEIGHT, ich)
    gfini@ chipi(CHIPI_WIDTH, ich),chipi(CHIPI_HEIGHT, ich)
    gfdec2@ c_col@(0,cch),c_col@(1,cch),c_col@(2,cch)
    gsel BUFFER_CUR

    return

#deffunc cell_shownull int cell_shownull_x, int cell_shownull_y
	locvar_cell_shownull_dx = (cell_shownull_x - scx) * inf_tiles + inf_screenx
	if ( locvar_cell_shownull_dx <= -inf_tiles | locvar_cell_shownull_dx >= windoww ) {
		return
	}
	locvar_cell_shownull_dy = (cell_shownull_y - scy) * inf_tiles + inf_screeny
	if ( locvar_cell_shownull_dy <= -inf_tiles | locvar_cell_shownull_dy >= windowh - inf_verh ) {
		return
	}
	locvar_cell_shownull_p = tile_fog
	gmode 0, inf_tiles, inf_tiles
	pos locvar_cell_shownull_dx, locvar_cell_shownull_dy
	gcopy 2, locvar_cell_shownull_p \ 33 * inf_tiles, locvar_cell_shownull_p / 33 * inf_tiles
	gmode 2
	return

#deffunc cell_show int cell_show_x, int cell_show_y, int cell_show_see
	locvar_cell_shownull_dx = (cell_show_x - scx) * inf_tiles
	if ( scx != scxbk ) {
		locvar_cell_shownull_dx += sxfix
	}
	locvar_cell_shownull_dy = (cell_show_y - scy) * inf_tiles
	if ( scy != scybk ) {
		locvar_cell_shownull_dy += syfix
	}
	if ( locvar_cell_shownull_dx <= -inf_tiles | locvar_cell_shownull_dx >= windoww ) {
		return
	}
	if ( locvar_cell_shownull_dy <= -inf_tiles | locvar_cell_shownull_dy >= windowh - inf_verh ) {
		return
	}
	locvar_cell_show_ground = map(cell_show_x, cell_show_y, 2)
	locvar_cell_show_sel = 2
	gmode 0, inf_tiles, inf_tiles
	pos locvar_cell_shownull_dx, locvar_cell_shownull_dy
	locvar_cell_show_wall = 0
	if ( mdata(MDATA_TILE_FILE) == 1 | mdata(MDATA_TILE_FILE) == 3 ) {
		if ( chipm(CHIPM_WALL, locvar_cell_show_ground) == 2 ) {
			if ( cell_show_y < mdata(MDATA_HEIGHT) - 1 ) {
				if ( chipm(CHIPM_WALL, map(cell_show_x, cell_show_y + 1, 2)) != 2 ) {
					if ( map(cell_show_x, cell_show_y + 1, 2) != tile_fog ) {
						locvar_cell_show_ground += 33
					}
				}
			}
		}
		if ( chipm(CHIPM_WALL, locvar_cell_show_ground) ) {
			locvar_cell_show_wall = 1
		}
	}
	if ( chipm(CHIPM_ANIM, locvar_cell_show_ground) != 0 ) {
		gcopy locvar_cell_show_sel, locvar_cell_show_ground \ 33 * inf_tiles, locvar_cell_show_ground / 33 * inf_tiles
	}
	else {
		gcopy locvar_cell_show_sel, locvar_cell_show_ground \ 33 * inf_tiles, locvar_cell_show_ground / 33 * inf_tiles
	}
	gmode 2, inf_tiles, inf_tiles
	if ( cell_show_see ) {
		if ( map(cell_show_x, cell_show_y, 7) != 0 ) {
			locvar_cell_shownull_p = map(cell_show_x, cell_show_y, 7) \ 10, map(cell_show_x, cell_show_y, 7) / 10
			if ( locvar_cell_shownull_p(1) ) {
				gcopy 5, locvar_cell_shownull_p(1) * inf_tiles + 288, 1152
			}
			if ( locvar_cell_shownull_p ) {
				if ( locvar_cell_shownull_p > 6 ) {
					locvar_cell_shownull_p = 6
				}
				gcopy 5, locvar_cell_shownull_p * inf_tiles, 1152
			}
		}
	}
	if ( map(cell_show_x, cell_show_y, 6) != 0 ) {
		if ( map(cell_show_x, cell_show_y, 2) == map(cell_show_x, cell_show_y, 0) ) {
			locvar_cell_shownull_p = map(cell_show_x, cell_show_y, 6) \ 1000
			if ( locvar_cell_shownull_p != 999 & locvar_cell_shownull_p != 0 ) {
				pos locvar_cell_shownull_dx, locvar_cell_shownull_dy
				gcopy 2, locvar_cell_shownull_p \ 33 * inf_tiles, locvar_cell_shownull_p / 33 * inf_tiles
			}
			if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
				locvar_cell_shownull_p = map(cell_show_x, cell_show_y, 6) / 100000 \ 100 + map(cell_show_x, cell_show_y, 6) / 10000000 * 100
				if ( adata(ADATA_ID, locvar_cell_shownull_p) == AREA_RANDOM_DUNGEON ) {
					if ( adata(ADATA_DEEPEST, locvar_cell_shownull_p) == adata(ADATA_MAX_LEVEL, locvar_cell_shownull_p) ) {
						pos locvar_cell_shownull_dx + 16, locvar_cell_shownull_dy - 16
						gcopy 3, 32, 624, 16, 16
					}
					else {
						if ( adata(ADATA_DEEPEST, locvar_cell_shownull_p) != 0 ) {
							pos locvar_cell_shownull_dx + 16, locvar_cell_shownull_dy - 16
							gcopy 3, 48, 624, 16, 16
						}
					}
					if ( adata(ADATA_WAKEUP_NEFIA, locvar_cell_shownull_p) == WAKEUP_NEFIA_NORMAL ) {
						pos locvar_cell_shownull_dx + 16, locvar_cell_shownull_dy - 20
						gcopy 3, 32, 640, 16, 16
					}
				}
			}
		}
	}
	if ( cell_show_see ) {
		if ( map(cell_show_x, cell_show_y, 8) != 0 ) {
			locvar_cell_shownull_p = map(cell_show_x, cell_show_y, 8) - 1
			pos locvar_cell_shownull_dx, locvar_cell_shownull_dy
			if ( mef(1, locvar_cell_shownull_p) > 10000 ) {
                preparePicItem mef(1, locvar_cell_shownull_p) \ 10000, mef(1, locvar_cell_shownull_p) / 10000
				gcopy 1, 0, 960, inf_tiles, inf_tiles
			}
			else {
				gcopy 1, mef(1, locvar_cell_shownull_p) \ 33 * inf_tiles, mef(1, locvar_cell_shownull_p) / 33 * inf_tiles
			}
		}
	}
	if ( map(cell_show_x, cell_show_y, 5) != 0 ) {
		locvar_cell_shownull_p = wpeek(map(cell_show_x, cell_show_y, 5), 0)
		locvar_cell_show_i = wpeek(map(cell_show_x, cell_show_y, 5), 2)

        preparePicItem locvar_cell_shownull_p, locvar_cell_show_i

		if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
			gmode 2, chipi(CHIPI_WIDTH, locvar_cell_shownull_p), chipi(CHIPI_HEIGHT, locvar_cell_shownull_p)
			pos locvar_cell_shownull_dx + 24, locvar_cell_shownull_dy + 24
			grotate 1, 0, 960, 0, 24, 24
		}
		else {
			pos locvar_cell_shownull_dx, locvar_cell_shownull_dy - chipi(CHIPI_F, locvar_cell_shownull_p)
			if ( chipi(CHIPI_ANIM, locvar_cell_shownull_p) == 0 ) {
				gcopy 1, 0, 960, chipi(CHIPI_WIDTH, locvar_cell_shownull_p), chipi(CHIPI_HEIGHT, locvar_cell_shownull_p)
			}
			else {
				gcopy 1, chipi(CHIPI_X, locvar_cell_shownull_p) + scrturn \ chipi(CHIPI_ANIM, locvar_cell_shownull_p) * inf_tiles, chipi(CHIPI_Y, locvar_cell_shownull_p), chipi(CHIPI_WIDTH, locvar_cell_shownull_p), chipi(CHIPI_HEIGHT, locvar_cell_shownull_p)
			}
		}
	}
	if ( map(cell_show_x, cell_show_y, 1) != 0 ) {
		locvar_cell_show_c = map(cell_show_x, cell_show_y, 1) - 1
		if ( synccheck(locvar_cell_show_c, -1) ) {
			if ( cbit(CHARA_BIT_INVISIBLE, locvar_cell_show_c) == 1 ) {
				if ( cbit(CHARA_BIT_SEE_INVISIBLE, CHARA_PLAYER) == 0 ) {
					if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
						if ( cdata(CDATA_CONDITION_WET, locvar_cell_show_c) == 0 ) {
							locvar_cell_show_c = 0
						}
					}
				}
			}
			if ( locvar_cell_show_c != 0 ) {
				if ( gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_KIND) > VEHICLE_NONE & mdata(MDATA_TYPE) == MAP_TYPE_WORLD & cdata(CDATA_RELATION, locvar_cell_show_c) == RELATION_ALLY ) {
					locvar_cell_show_c = 0
				}
            }
			if ( locvar_cell_show_c != 0 ) {
				if ( cdata(CDATA_PIC, locvar_cell_show_c) == xy2pic(0, 0) ) {
					if ( cdata(CDATA_CHARA_PIC, locvar_cell_show_c) == xy2pic(1, 0) ) {
						cdata(CDATA_PIC, locvar_cell_show_c) = 13000
					}
				}
				locvar_cell_show_col = (cdata(CDATA_PIC, locvar_cell_show_c) - cdata(CDATA_CHARA_PIC, locvar_cell_show_c) * COLOR_TINT_MULT) / COLOR_TINT_MULT
				locvar_cell_shownull_p = cdata(CDATA_PIC, locvar_cell_show_c) \ COLOR_TINT_MULT + cdata(CDATA_CHARA_PIC, locvar_cell_show_c) * COLOR_TINT_MULT
				if ( cdata(CDATA_PIC, locvar_cell_show_c) >= xy2pic(1, 21) & cdata(CDATA_PIC, locvar_cell_show_c) <= xy2pic(31, 21) ) {
					locvar_cell_show_col = 0
					locvar_cell_shownull_p = cdata(CDATA_PIC, locvar_cell_show_c)
				}
				gsel 5
				color 0
				boxf 0, 960, chipc(CHIPC_WIDTH, locvar_cell_shownull_p), chipc(CHIPC_HEIGHT, locvar_cell_shownull_p) + 960
				pos 0, 960
				gcopy 5, chipc(CHIPC_X, locvar_cell_shownull_p), chipc(CHIPC_Y, locvar_cell_shownull_p), chipc(CHIPC_WIDTH, locvar_cell_shownull_p), chipc(CHIPC_HEIGHT, locvar_cell_shownull_p)
				gfini chipc(CHIPC_WIDTH, locvar_cell_shownull_p), chipc(CHIPC_HEIGHT, locvar_cell_shownull_p)
				gfdec2 c_col(0, locvar_cell_show_col), c_col(1, locvar_cell_show_col), c_col(2, locvar_cell_show_col)
				gsel selcur
				if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
					gmode 4, 32, 16, 85
					color 0, 0, 0
					pos locvar_cell_shownull_dx + 24, locvar_cell_shownull_dy + 24
					grotate 3, 240, 384, 0, 20, 10
					gmode 2, chipc(CHIPC_WIDTH, locvar_cell_shownull_p), chipc(CHIPC_HEIGHT, locvar_cell_shownull_p)
					pos locvar_cell_shownull_dx + 24, locvar_cell_shownull_dy + 24 - chipc(CHIPC_F, locvar_cell_shownull_p) / 2
					grotate 5, 0, 960, 0, 24, chipc(CHIPC_HEIGHT, locvar_cell_shownull_p) / 2
				}
				else {
					if ( chipm(CHIPM_ROLE, locvar_cell_show_ground) == MAP_CHIP_ROLE_WATER ) {
						gmode 4, inf_tiles, inf_tiles, 100
						color 0, 0, 0
						pos locvar_cell_shownull_dx, locvar_cell_shownull_dy + 16 - chipc(CHIPC_F, locvar_cell_shownull_p) - (chipm(CHIPM_ROLE, locvar_cell_show_ground) == MAP_CHIP_ROLE_WATER) * (-16)
						gcopy 5, 0, 976, chipc(CHIPC_WIDTH, locvar_cell_shownull_p), chipc(CHIPC_HEIGHT, locvar_cell_shownull_p) - 16
						gmode 2, inf_tiles, inf_tiles
						pos locvar_cell_shownull_dx, locvar_cell_shownull_dy - chipc(CHIPC_F, locvar_cell_shownull_p) - (chipm(CHIPM_ROLE, locvar_cell_show_ground) == MAP_CHIP_ROLE_WATER) * (-16)
						gcopy 5, 0, 960, chipc(CHIPC_WIDTH, locvar_cell_shownull_p), chipc(CHIPC_HEIGHT, locvar_cell_shownull_p) - 16
					}
					else {
						gmode 4, , , 110
						color 0, 0, 0
						pos locvar_cell_shownull_dx + 8, locvar_cell_shownull_dy + 20
						gcopy 3, 240, 384, 32, 16
						gmode 2, inf_tiles, inf_tiles
						pos locvar_cell_shownull_dx, locvar_cell_shownull_dy - chipc(CHIPC_F, locvar_cell_shownull_p) - (chipm(CHIPM_ROLE, locvar_cell_show_ground) == MAP_CHIP_ROLE_WATER) * (-16)
						gcopy 5, 0, 960, chipc(CHIPC_WIDTH, locvar_cell_shownull_p), chipc(CHIPC_HEIGHT, locvar_cell_shownull_p)
					}
				}
				if ( cdata(CDATA_CONDITION_ANGRY, locvar_cell_show_c) != 0 ) {
					pos locvar_cell_shownull_dx + 12, locvar_cell_shownull_dy - chipc(CHIPC_F, locvar_cell_shownull_p) - 12
					gcopy 3, 32, 608, 16, 16
				}
				if ( cdata(CDATA_EMO_ICON, locvar_cell_show_c) != 0 ) {
					draw_emo locvar_cell_show_c, locvar_cell_shownull_dx + 4, locvar_cell_shownull_dy - chipc(CHIPC_F, locvar_cell_shownull_p) - 16
				}
			}
		}
	}
	if ( map(cell_show_x, cell_show_y, 1) != 0 ) {
		if ( cdata(CDATA_IN_TAGTEAM, map(cell_show_x, cell_show_y, 1) - 1) != 0 ) {
			locvar_cell_show_c = cdata(CDATA_TAGTEAM_PARTNER, map(cell_show_x, cell_show_y, 1) - 1)
			if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_show_c) == 1 ) {
				if ( cbit(CHARA_BIT_INVISIBLE, locvar_cell_show_c) == 1 ) {
					if ( cbit(CHARA_BIT_SEE_INVISIBLE, CHARA_PLAYER) == 0 ) {
						if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
							if ( cdata(CDATA_CONDITION_WET, locvar_cell_show_c) == 0 ) {
								locvar_cell_show_c = 0
							}
						}
					}
				}
				if ( locvar_cell_show_c != 0 ) {
					if ( gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_KIND) > 0 & mdata(MDATA_TYPE) == MAP_TYPE_WORLD & cdata(CDATA_RELATION, locvar_cell_show_c) == RELATION_ALLY ) {
						locvar_cell_show_c = 0
					}
				}
				if ( locvar_cell_show_c != 0 ) {
					if ( cdata(CDATA_PIC, locvar_cell_show_c) == xy2pic(0, 0) ) {
						if ( cdata(CDATA_CHARA_PIC, locvar_cell_show_c) == xy2pic(1, 0) ) {
							cdata(CDATA_PIC, locvar_cell_show_c) = 13000
						}
					}
					locvar_cell_show_col = (cdata(CDATA_PIC, locvar_cell_show_c) - cdata(CDATA_CHARA_PIC, locvar_cell_show_c) * COLOR_TINT_MULT) / COLOR_TINT_MULT
					locvar_cell_shownull_p = cdata(CDATA_PIC, locvar_cell_show_c) \ COLOR_TINT_MULT + cdata(CDATA_CHARA_PIC, locvar_cell_show_c) * COLOR_TINT_MULT
					if ( cdata(CDATA_PIC, locvar_cell_show_c) >= xy2pic(1, 21) & cdata(CDATA_PIC, locvar_cell_show_c) <= xy2pic(31, 21) ) {
						locvar_cell_show_col = 0
						locvar_cell_shownull_p = cdata(CDATA_PIC, locvar_cell_show_c)
					}
					gsel 5
					color 0
					boxf 0, 960, chipc(CHIPC_WIDTH, locvar_cell_shownull_p), chipc(CHIPC_HEIGHT, locvar_cell_shownull_p) + 960
					pos 0 + cdata(CDATA_IN_TAGTEAM, locvar_cell_show_c) * 12, 960
					gcopy 5, chipc(CHIPC_X, locvar_cell_shownull_p), chipc(CHIPC_Y, locvar_cell_shownull_p), chipc(CHIPC_WIDTH, locvar_cell_shownull_p), chipc(CHIPC_HEIGHT, locvar_cell_shownull_p)
					gfini chipc(CHIPC_WIDTH, locvar_cell_shownull_p), chipc(CHIPC_HEIGHT, locvar_cell_shownull_p)
					gfdec2 c_col(0, locvar_cell_show_col), c_col(1, locvar_cell_show_col), c_col(2, locvar_cell_show_col)
					gsel selcur
					if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
						gmode 4, 32, 16, 85
						color 0, 0, 0
						pos locvar_cell_shownull_dx + 24, locvar_cell_shownull_dy + 24
						grotate 3, 240, 384, 0, 20, 10
						gmode 2, chipc(CHIPC_WIDTH, locvar_cell_shownull_p), chipc(CHIPC_HEIGHT, locvar_cell_shownull_p)
						pos locvar_cell_shownull_dx + 24 + cdata(CDATA_IN_TAGTEAM, locvar_cell_show_c) * 12, locvar_cell_shownull_dy + 24 - chipc(CHIPC_F, locvar_cell_shownull_p) / 2
						grotate 5, 0, 960, 0, 24, chipc(CHIPC_HEIGHT, locvar_cell_shownull_p) / 2
					}
					else {
						if ( chipm(CHIPM_ROLE, locvar_cell_show_ground) == MAP_CHIP_ROLE_WATER ) {
							gmode 4, inf_tiles, inf_tiles, 100
							color 0, 0, 0
							pos locvar_cell_shownull_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_show_c) * 12, locvar_cell_shownull_dy + 16 - chipc(CHIPC_F, locvar_cell_shownull_p) - (chipm(CHIPM_ROLE, locvar_cell_show_ground) == MAP_CHIP_ROLE_WATER) * (-16)
							gcopy 5, 0, 976, chipc(CHIPC_WIDTH, locvar_cell_shownull_p), chipc(CHIPC_HEIGHT, locvar_cell_shownull_p) - 16
							gmode 2, inf_tiles, inf_tiles
							pos locvar_cell_shownull_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_show_c) * 12, locvar_cell_shownull_dy - chipc(CHIPC_F, locvar_cell_shownull_p) - (chipm(CHIPM_ROLE, locvar_cell_show_ground) == MAP_CHIP_ROLE_WATER) * (-16)
							gcopy 5, 0, 960, chipc(CHIPC_WIDTH, locvar_cell_shownull_p), chipc(CHIPC_HEIGHT, locvar_cell_shownull_p) - 16
						}
						else {
							gmode 4, , , 110
							color 0, 0, 0
							pos locvar_cell_shownull_dx + 8, locvar_cell_shownull_dy + 20
							gcopy 3, 240, 384, 32, 16
							gmode 2, inf_tiles, inf_tiles
							pos locvar_cell_shownull_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_show_c) * 12, locvar_cell_shownull_dy - chipc(CHIPC_F, locvar_cell_shownull_p) - (chipm(CHIPM_ROLE, locvar_cell_show_ground) == MAP_CHIP_ROLE_WATER) * (-16)
							gcopy 5, 0, 960, chipc(CHIPC_WIDTH, locvar_cell_shownull_p), chipc(CHIPC_HEIGHT, locvar_cell_shownull_p)
						}
					}
					if ( cdata(CDATA_CONDITION_ANGRY, locvar_cell_show_c) != 0 ) {
						pos locvar_cell_shownull_dx + 12 + cdata(CDATA_IN_TAGTEAM, locvar_cell_show_c) * 12, locvar_cell_shownull_dy - chipc(CHIPC_F, locvar_cell_shownull_p) - 12
						gcopy 3, 32, 608, 16, 16
					}
					if ( cdata(CDATA_EMO_ICON, locvar_cell_show_c) != 0 ) {
						draw_emo locvar_cell_show_c, locvar_cell_shownull_dx + 4 + cdata(CDATA_IN_TAGTEAM, locvar_cell_show_c) * 12, locvar_cell_shownull_dy - chipc(CHIPC_F, locvar_cell_shownull_p) - 16
					}
				}
			}
		}
	}
	locvar_cell_show_sel = 2
	if ( locvar_cell_show_wall == 0 ) {
		if ( locvar_cell_show_ground != tile_fog ) {
			if ( cell_show_y > 0 ) {
				if ( locvar_cell_shownull_dy > 48 ) {
					locvar_cell_show_ground = map(cell_show_x, cell_show_y - 1, 0)
					if ( chipm(CHIPM_WALL, locvar_cell_show_ground) ) {
						pos locvar_cell_shownull_dx + (locvar_cell_shownull_dx < 0) * (-locvar_cell_shownull_dx), locvar_cell_shownull_dy
						gfini inf_tiles - (locvar_cell_shownull_dx > windoww - inf_tiles) * (locvar_cell_shownull_dx + inf_tiles - windoww) + (locvar_cell_shownull_dx < 0) * locvar_cell_shownull_dx, 24
						gfdec2 35, 35, 35
						pos locvar_cell_shownull_dx + (locvar_cell_shownull_dx < 0) * (-locvar_cell_shownull_dx), locvar_cell_shownull_dy + 24
						gfini inf_tiles - (locvar_cell_shownull_dx > windoww - inf_tiles) * (locvar_cell_shownull_dx + inf_tiles - windoww) + (locvar_cell_shownull_dx < 0) * locvar_cell_shownull_dx, 12
						gfdec2 25, 25, 25
					}
				}
			}
		}
	}
	else {
		gmode 0
		if ( cell_show_y > 0 ) {
			locvar_cell_shownull_p = map(cell_show_x, cell_show_y - 1, 2)
			if ( chipm(CHIPM_WALL, locvar_cell_shownull_p) != 2 ) {
				if ( locvar_cell_shownull_p != tile_fog ) {
					if ( locvar_cell_shownull_dy > 20 ) {
						pos locvar_cell_shownull_dx, locvar_cell_shownull_dy - 12
						gcopy locvar_cell_show_sel, locvar_cell_show_ground \ 33 * inf_tiles, locvar_cell_show_ground / 33 * inf_tiles, inf_tiles - (locvar_cell_shownull_dx > windoww - inf_tiles) * (locvar_cell_shownull_dx + inf_tiles - windoww), 12
						pos locvar_cell_shownull_dx + (locvar_cell_shownull_dx < 0) * (-locvar_cell_shownull_dx), locvar_cell_shownull_dy - 20
						gfini inf_tiles - (locvar_cell_shownull_dx > windoww - inf_tiles) * (locvar_cell_shownull_dx + inf_tiles - windoww) + (locvar_cell_shownull_dx < 0) * locvar_cell_shownull_dx, 8
						gfdec2 25, 25, 25
					}
				}
			}
		}
	}
	gmode 2
	return

#deffunc cell_draw
	locvar_cell_draw_syfix = (scy != scybk) * syfix
	locvar_cell_draw_sxfix = (scx != scxbk) * sxfix
	locvar_cell_draw_scrturn = scrturn / 5
	if ( locvar_cell_draw_scrturn != locvar_cell_draw_scrturnbk ) {
		locvar_cell_draw_scrturnbk = locvar_cell_draw_scrturn
		locvar_cell_draw_scrturnnew = 1
	}
	else {
		locvar_cell_draw_scrturnnew = 0
	}
	locvar_cell_draw_light = gdata(GDATA_LIGHT)
	randomize locvar_cell_draw_scrturn
	if ( gdata(GDATA_LIGHT_SOURCE) == 1 ) {
		if ( mdata(MDATA_TYPE) >= MAP_TYPE_DUNGEON_MIN & mdata(MDATA_TYPE) <= MAP_TYPE_DUNGEON_MAX ) {
			locvar_cell_draw_light -= 50
		}
	}
	if ( gdata(GDATA_HOUR) > 17 | gdata(GDATA_HOUR) < 6 ) {
		locvar_cell_draw_flick = rnd(10)
	}
	else {
		locvar_cell_draw_flick = -15
	}
	repw(2) = repw(1)
	reph(2) = cdata(CDATA_Y, CHARA_PLAYER) + (syfix < 0)
	reph(3) = reph(2) + 1
	if ( cdata(CDATA_Y, CHARA_PLAYER) == mdata(MDATA_HEIGHT) - 2 ) {
		if ( syfix < 0 ) {
			reph(3)--
		}
	}
	if ( cdata(CDATA_Y, CHARA_PLAYER) == mdata(MDATA_HEIGHT) - 1 ) {
		if ( syfix > 0 ) {
			reph(3)--
		}
	}
	locvar_cell_draw_dy = (reph(1) - scy) * inf_tiles + inf_screeny + locvar_cell_draw_syfix
	locvar_cell_draw_ly = 1
	repeat reph, reph(1)
		locvar_cell_draw_y = cnt
		locvar_cell_draw_dx = (repw(1) + repw - 1 - scx) * inf_tiles + inf_screenx + locvar_cell_draw_sxfix
		locvar_cell_draw_lx = 1
		if ( locvar_cell_draw_dy <= -inf_tiles | locvar_cell_draw_dy >= windowh - inf_verh ) {
			locvar_cell_draw_dy += inf_tiles
			locvar_cell_draw_lx++
			continue
		}
		if ( locvar_cell_draw_y < 0 | locvar_cell_draw_y >= mdata(MDATA_HEIGHT) ) {
			repeat inf_screenw, scx
				locvar_cell_draw_sx = cnt
				gmode 0, inf_tiles, inf_tiles
				locvar_cell_draw_p = tile_fog
				pos locvar_cell_draw_dx, locvar_cell_draw_dy
				gcopy 2, locvar_cell_draw_p \ 33 * inf_tiles, locvar_cell_draw_p / 33 * inf_tiles
				locvar_cell_draw_dx -= inf_tiles
				locvar_cell_draw_lx++
			loop
			locvar_cell_draw_dy += inf_tiles
			locvar_cell_draw_ly++
			continue
		}
		color 0, 0, 0
		repeat repw
			locvar_cell_draw_x = repw(1) + repw - 1 - cnt
			if ( reph(3) == locvar_cell_draw_y ) {
				if ( locvar_cell_draw_x == repw(2) ) {
					locvar_cell_draw_px = (cdata(CDATA_X, CHARA_PLAYER) - scx) * inf_tiles + inf_screenx - 48
					if ( scxbk == scx ) {
						locvar_cell_draw_px -= sxfix
					}
					locvar_cell_draw_py = (cdata(CDATA_Y, CHARA_PLAYER) + 1 - scy) * inf_tiles + inf_screeny
					if ( scybk == scy ) {
						locvar_cell_draw_py -= syfix
					}
					color 0, 0, 0
					gmode 5, inf_tiles, inf_tiles, 50 + locvar_cell_draw_flick
					pos locvar_cell_draw_px, locvar_cell_draw_py
					gcopy 3, 800, 208, 144, 48
				}
			}
			if ( reph(2) == locvar_cell_draw_y ) {
				if ( locvar_cell_draw_x == repw(2) ) {
					if ( cdata(CDATA_EXIST, CHARA_PLAYER) == CHAR_STATE_ALIVE ) {
						locvar_cell_draw_ground = map(cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0)
						locvar_cell_draw_px = (cdata(CDATA_X, CHARA_PLAYER) - scx) * inf_tiles + inf_screenx
						if ( scxbk == scx ) {
							locvar_cell_draw_px -= sxfix
						}
						locvar_cell_draw_py = (cdata(CDATA_Y, CHARA_PLAYER) - scy) * inf_tiles + inf_screeny
						if ( scybk == scy ) {
							locvar_cell_draw_py -= syfix
						}
						color 0, 0, 0
						gmode 5, inf_tiles, inf_tiles, 50 + locvar_cell_draw_flick
						pos locvar_cell_draw_px - 48, locvar_cell_draw_py - 48
						gcopy 3, 800, 112, 144, 96
						if ( cbit(CHARA_BIT_MARK_ITEM, CHARA_PLAYER) ) {
							if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
								if ( cdata(CDATA_MARK_ITEM_PIC, CHARA_PLAYER) > 0 ) {
									if ( cdata(CDATA_IN_TAGTEAM, CHARA_PLAYER) == 1 ) {
										pos locvar_cell_draw_px + 12 + cdata(CDATA_IN_TAGTEAM, CHARA_PLAYER) * 15 + cdata(CDATA_MARK_ITEM_X, CHARA_PLAYER), locvar_cell_draw_py + 18 + cdata(CDATA_MARK_ITEM_Y, CHARA_PLAYER) + (chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER) * 16 - (cbit(CHARA_BIT_SANDBAG, CHARA_PLAYER) == 1) * 24
									}
									else {
										pos locvar_cell_draw_px + 12 + cdata(CDATA_MARK_ITEM_X, CHARA_PLAYER), locvar_cell_draw_py + 18 + cdata(CDATA_MARK_ITEM_Y, CHARA_PLAYER) + (chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER) * 16 - (cbit(CHARA_BIT_SANDBAG, CHARA_PLAYER) == 1) * 24
									}

                                    preparePicItem cdata(CDATA_MARK_ITEM_PIC, CHARA_PLAYER), cdata(CDATA_MARK_ITEM_COL, CHARA_PLAYER)

									gmode 2, 48, 48
									grotate 1, 0, 960, cdata(CDATA_MARK_ITEM_ADJUST_R, CHARA_PLAYER) * 6.54498469498, 24 + cdata(CDATA_MARK_ITEM_ADJUST_W, CHARA_PLAYER) * 2, 24 + cdata(CDATA_MARK_ITEM_ADJUST_L, CHARA_PLAYER) * 2
								}
							}
						}
						if ( locvar_cell_draw_py < windowh - inf_verh - 24 ) {
							if ( cdata(CDATA_ROW_ACT, CHARA_PLAYER) == ACTION_FISH ) {
								locvar_cell_draw_ani = 0
							}
							else {
								locvar_cell_draw_ani = cdata(CDATA_TURN, CHARA_PLAYER) \ 4 * 32
							}
							if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
								if ( gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_KIND) > VEHICLE_NONE ) {
									locvar_cell_draw_wide = 1
									if ( gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_KIND) == VEHICLE_LAND_BATTLESHIP ) {
										locvar_cell_draw_wide = 2
									}
									if ( gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_KIND) == VEHICLE_MAGIC_LOCOMOTIVE ) {
										preparePicItem xy2pic(13, 35), (gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_PIC) - gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_KIND)) / 1000
										if ( gdata(GDATA_RUN_DIR) == 2 ) {
											pos locvar_cell_draw_px - 10, locvar_cell_draw_py + 8
											gmode 2, 33, 48
											grotate BUFFER_ITEM, 0, 960, 0, -33, 48
										}
										if ( gdata(GDATA_RUN_DIR) == 1 ) {
											pos locvar_cell_draw_px + 53, locvar_cell_draw_py + 8
											gmode 2, 33, 48
											grotate BUFFER_ITEM, 0, 960, 0, 33, 48
										}
									}
									gmode 6, , , 110
									color 0, 0, 0
									pos locvar_cell_draw_px + 8, locvar_cell_draw_py + 20
									gcopy BUFFER_INF, 240, 384, 32, 16
									if ( cfg_pcc_show == 0 ) {
										gmode 2, 32, 48
										pos locvar_cell_draw_px + 22, locvar_cell_draw_py + 8
										grotate BUFFER_PCC, locvar_cell_draw_ani, cdata(CDATA_DIR, CHARA_PLAYER) * 48, 0, 32 * locvar_cell_draw_wide, 48
									}
									if ( cfg_pcc_show == 1 ) {
										gmode 2, 32, 48
										pos locvar_cell_draw_px + 24, locvar_cell_draw_py + 8
										grotate BUFFER_PCC, locvar_cell_draw_ani, cdata(CDATA_DIR, CHARA_PLAYER) * 48, 0, 24 * locvar_cell_draw_wide, 40
									}
								}
                                else {
									gmode 6, 32, 16, 85
									color 0, 0, 0
									pos locvar_cell_draw_px + 24, locvar_cell_draw_py + 27
									grotate 3, 240, 384, 0, 20, 10
									if ( cfg_pcc_show == 0 ) {
										gmode 2, 32, 48
										pos locvar_cell_draw_px + 24, locvar_cell_draw_py + 14
										grotate 10, locvar_cell_draw_ani, cdata(CDATA_DIR, CHARA_PLAYER) * 48, 0, 24, 36
									}
									if ( cfg_pcc_show == 1 ) {
										gmode 2, 32, 48
										pos locvar_cell_draw_px + 24, locvar_cell_draw_py + 14
										grotate 10, locvar_cell_draw_ani, cdata(CDATA_DIR, CHARA_PLAYER) * 48, 0, 16, 24
									}
                                }
							}
							else {
								if ( chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER ) {
									if ( cfg_pcc_show == 0 ) {
										gmode 4, 32, 24, 146
										color 0, 0, 0
										pos locvar_cell_draw_px + 22, locvar_cell_draw_py + 36
										grotate 10, locvar_cell_draw_ani, cdata(CDATA_DIR, CHARA_PLAYER) * 48 + 28, 0, 32, 24
									}
									if ( cfg_pcc_show == 1 ) {
										gmode 4, 32, 20, 146
										color 0, 0, 0
										pos locvar_cell_draw_px + 24, locvar_cell_draw_py + 36
										grotate 10, locvar_cell_draw_ani, cdata(CDATA_DIR, CHARA_PLAYER) * 48 + 28, 0, 24, 16
									}
									if ( cfg_pcc_show == 0 ) {
										gmode 2, 32, 28
										pos locvar_cell_draw_px + 22, locvar_cell_draw_py + 10
										grotate 10, locvar_cell_draw_ani, cdata(CDATA_DIR, CHARA_PLAYER) * 48, 0, 32, 28
									}
									if ( cfg_pcc_show == 1 ) {
										gmode 2, 32, 28
										pos locvar_cell_draw_px + 24, locvar_cell_draw_py + 16
										grotate 10, locvar_cell_draw_ani, cdata(CDATA_DIR, CHARA_PLAYER) * 48, 0, 24, 24
									}
								}
								else {
									gmode 6, , , 110
									color 0, 0, 0
									pos locvar_cell_draw_px + 8, locvar_cell_draw_py + 20
									gcopy 3, 240, 384, 32, 16
									if ( fishanime == 3 ) {
										if ( fishanime(1) \ 8 < 4 ) {
											locvar_cell_draw_py -= fishanime(1) \ 4 * (fishanime(1) \ 4)
										}
										else {
											locvar_cell_draw_py += fishanime(1) \ 4 * (fishanime(1) \ 4) - 9
										}
									}
									if ( gdata(GDATA_FLAG_MAIN) >= 875 & gdata(GDATA_FLAG_MAIN) < 900 ) {
										if ( gdata(GDATA_FLAG_MAIN) < 885 ) {
											if ( cfg_pcc_show == 0 ) {
												gmode 5, 32, 48, 120
												pos locvar_cell_draw_px + 22, locvar_cell_draw_py + 8
												grotate BUFFER_PCC, locvar_cell_draw_ani, cdata(CDATA_DIR, CHARA_PLAYER) * 48, 0, 32, 48
											}
										}
										if ( gdata(GDATA_FLAG_MAIN) < 885 ) {
											if ( cfg_pcc_show == 1 ) {
												gmode 5, 32, 48, 120
												pos locvar_cell_draw_px + 24, locvar_cell_draw_py + 8
												grotate BUFFER_PCC, locvar_cell_draw_ani, cdata(CDATA_DIR, CHARA_PLAYER) * 48, 0, 24, 40
											}
										}
										if ( gdata(GDATA_FLAG_MAIN) >= 885 ) {
											if ( cfg_pcc_show == 0 ) {
												gmode 6, 32, 48, 320
												pos locvar_cell_draw_px + 22, locvar_cell_draw_py + 8
												grotate BUFFER_PCC, locvar_cell_draw_ani, cdata(CDATA_DIR, CHARA_PLAYER) * 48, 0, 32, 48
											}
										}
										if ( gdata(GDATA_FLAG_MAIN) >= 885 ) {
											if ( cfg_pcc_show == 1 ) {
												gmode 6, 32, 48, 320
												pos locvar_cell_draw_px + 24, locvar_cell_draw_py + 8
												grotate BUFFER_PCC, locvar_cell_draw_ani, cdata(CDATA_DIR, CHARA_PLAYER) * 48, 0, 24, 40
											}
										}
									}
									else {
										if ( cfg_pcc_show == 0 ) {
											gmode 2, 32, 48
											pos locvar_cell_draw_px + 22, locvar_cell_draw_py + 8
											grotate 10, locvar_cell_draw_ani, cdata(CDATA_DIR, CHARA_PLAYER) * 48, 0, 32, 48
										}
										if ( cfg_pcc_show == 1 ) {
											gmode 2, 32, 48
											pos locvar_cell_draw_px + 24, locvar_cell_draw_py + 8
											grotate 10, locvar_cell_draw_ani, cdata(CDATA_DIR, CHARA_PLAYER) * 48, 0, 24, 40
										}
                                    }
								}
							}
							gmode 2
							color 0, 0, 0
						}
						if ( cdata(CDATA_CONDITION_ANGRY, CHARA_PLAYER) != 0 ) {
							pos locvar_cell_draw_px, locvar_cell_draw_py - 24
							gcopy 3, 32, 608, 16, 16
						}
						if ( cdata(CDATA_EMO_ICON, CHARA_PLAYER) != 0 ) {
							draw_emo 0, locvar_cell_draw_px + 4, locvar_cell_draw_py - 32
						}
						if ( cbit(CHARA_BIT_MARK_ITEM, CHARA_PLAYER) == 0 ) {
							if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
								if ( cdata(CDATA_MARK_ITEM_PIC, CHARA_PLAYER) > xy2pic(0, 0) ) {
									if ( cdata(CDATA_IN_TAGTEAM, CHARA_PLAYER) == 1 ) {
										pos locvar_cell_draw_px + 12 + cdata(CDATA_IN_TAGTEAM, CHARA_PLAYER) * 15 + cdata(CDATA_MARK_ITEM_X, CHARA_PLAYER), locvar_cell_draw_py + 18 + cdata(CDATA_MARK_ITEM_Y, CHARA_PLAYER) + (chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER) * 16 - (cbit(CHARA_BIT_SANDBAG, CHARA_PLAYER) == 1) * 24
									}
									else {
										pos locvar_cell_draw_px + 12 + cdata(CDATA_MARK_ITEM_X, CHARA_PLAYER), locvar_cell_draw_py + 18 + cdata(CDATA_MARK_ITEM_Y, CHARA_PLAYER) + (chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER) * 16 - (cbit(CHARA_BIT_SANDBAG, CHARA_PLAYER) == 1) * 24
									}

                                    preparePicItem cdata(CDATA_MARK_ITEM_PIC, CHARA_PLAYER), cdata(CDATA_MARK_ITEM_COL, CHARA_PLAYER)

									gmode 2, 48, 48
									grotate 1, 0, 960, cdata(CDATA_MARK_ITEM_ADJUST_R, CHARA_PLAYER) * 6.54498469498, 24 + cdata(CDATA_MARK_ITEM_ADJUST_W, CHARA_PLAYER) * 2, 24 + cdata(CDATA_MARK_ITEM_ADJUST_L, CHARA_PLAYER) * 2
								}
							}
						}
						if ( cdata(CDATA_SP_EARNED, CHARA_PLAYER) <= (-1000000) & cdata(CDATA_SP_EARNED, CHARA_PLAYER) > (-2000000) ) {
							pos locvar_cell_draw_px, locvar_cell_draw_py - 5
							gmode 4, inf_tiles, inf_tiles, 157 + rnd(3) * 50
							gcopy BUFFER_INF, 192 + 48 * 20 + rnd(1) * inf_tiles, 704
						}
						if ( cdata(CDATA_SP_EARNED, CHARA_PLAYER) <= (-2000000) ) {
							pos locvar_cell_draw_px, locvar_cell_draw_py - 5
							gmode 4, inf_tiles, inf_tiles, 157 + rnd(3) * 50
							gcopy BUFFER_INF, 192 + 48 * 21 + rnd(1) * inf_tiles, 704
						}
						if ( gdata(GDATA_FLAG_MAIN) >= 900 & gdata(GDATA_FLAG_MAIN) < 1000 ) {
							pos locvar_cell_draw_px, locvar_cell_draw_py - 15
							gmode 5, inf_tiles, inf_tiles, 120 + rnd(100)
							gcopy BUFFER_INF, 192 + 48 * 11 + rnd(1) * inf_tiles, 704
						}
					}
				}
			}
			if ( locvar_cell_draw_dx <= -inf_tiles | locvar_cell_draw_dx >= windoww ) {
				locvar_cell_draw_dx -= inf_tiles
				locvar_cell_draw_lx++
				continue
			}
			if ( locvar_cell_draw_x < 0 | locvar_cell_draw_x >= mdata(MDATA_WIDTH) ) {
				gmode 0, inf_tiles, inf_tiles
				locvar_cell_draw_p = tile_fog
				pos locvar_cell_draw_dx, locvar_cell_draw_dy
				gcopy 2, locvar_cell_draw_p \ 33 * inf_tiles, locvar_cell_draw_p / 33 * inf_tiles
				locvar_cell_draw_dx -= inf_tiles
				continue
			}
			locvar_cell_draw_ground = map(locvar_cell_draw_x, locvar_cell_draw_y, 2)
			locvar_cell_draw_sel = 2
			gmode 0, inf_tiles, inf_tiles
			pos locvar_cell_draw_dx, locvar_cell_draw_dy
			locvar_cell_draw_wall = 0
			if ( chipm(CHIPM_WALL, locvar_cell_draw_ground) == 2 ) {
				if ( locvar_cell_draw_y < mdata(MDATA_HEIGHT) - 1 ) {
					if ( chipm(CHIPM_WALL, map(locvar_cell_draw_x, locvar_cell_draw_y + 1, 2)) != 2 ) {
						if ( map(locvar_cell_draw_x, locvar_cell_draw_y + 1, 2) != tile_fog ) {
							locvar_cell_draw_ground += 33
						}
					}
				}
			}
			if ( chipm(CHIPM_WALL, locvar_cell_draw_ground) ) {
				locvar_cell_draw_wall = 1
			}
			if ( chipm(CHIPM_ANIM, locvar_cell_draw_ground) != 0 ) {
				gcopy locvar_cell_draw_sel, (locvar_cell_draw_ground \ 33 + (locvar_cell_draw_scrturn \ (chipm(CHIPM_ANIM, locvar_cell_draw_ground) + 1) - (locvar_cell_draw_scrturn \ (chipm(CHIPM_ANIM, locvar_cell_draw_ground) + 1) == chipm(CHIPM_ANIM, locvar_cell_draw_ground)) * 2 * (chipm(CHIPM_ANIM, locvar_cell_draw_ground) != 0))) * inf_tiles, locvar_cell_draw_ground / 33 * inf_tiles
			}
			else {
				gcopy locvar_cell_draw_sel, locvar_cell_draw_ground \ 33 * inf_tiles, locvar_cell_draw_ground / 33 * inf_tiles
			}
			gmode 2, inf_tiles, inf_tiles
			if ( map(locvar_cell_draw_x, locvar_cell_draw_y, 7) != 0 ) {
				if ( mapsync(locvar_cell_draw_x, locvar_cell_draw_y) == msync ) {
					locvar_cell_draw_p = map(locvar_cell_draw_x, locvar_cell_draw_y, 7) \ 10, map(locvar_cell_draw_x, locvar_cell_draw_y, 7) / 10
					if ( locvar_cell_draw_p(1) ) {
						gcopy 5, locvar_cell_draw_p(1) * inf_tiles + 288, 1152
					}
					if ( locvar_cell_draw_p ) {
						if ( locvar_cell_draw_p > 6 ) {
							locvar_cell_draw_p = 6
						}
						gcopy 5, locvar_cell_draw_p * inf_tiles, 1152
					}
				}
			}
			if ( efmap(1, locvar_cell_draw_x, locvar_cell_draw_y) > 0 ) {
				if ( mapsync(locvar_cell_draw_x, locvar_cell_draw_y) == msync ) {
					locvar_cell_draw_p = efmap(0, locvar_cell_draw_x, locvar_cell_draw_y)
					if ( locvar_cell_draw_scrturnnew == 1 ) {
						efmap(1, locvar_cell_draw_x, locvar_cell_draw_y)--
					}
					if ( mefsubref(MEFSUBREF_TYPE, locvar_cell_draw_p) == 1 ) {
						gmode 4, 32, 32, efmap(1, locvar_cell_draw_x, locvar_cell_draw_y) * 12 + 30
						pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 24
						grotate 3, mefsubref(MEFSUBREF_X, locvar_cell_draw_p) + efmap(3, locvar_cell_draw_x, locvar_cell_draw_y) * 32, mefsubref(MEFSUBREF_Y, locvar_cell_draw_p), 0.785 * efmap(2, locvar_cell_draw_x, locvar_cell_draw_y), 32, 32
					}
					else {
						gmode 4, 32, 32, 150
						pos locvar_cell_draw_dx + 8, locvar_cell_draw_dy + 8
						gcopy 3, mefsubref(MEFSUBREF_X, locvar_cell_draw_p) + efmap(1, locvar_cell_draw_x, locvar_cell_draw_y) * 32, mefsubref(MEFSUBREF_Y, locvar_cell_draw_p)
					}
					gmode 2, inf_tiles, inf_tiles
				}
			}
			if ( map(locvar_cell_draw_x, locvar_cell_draw_y, 6) != 0 ) {
				if ( map(locvar_cell_draw_x, locvar_cell_draw_y, 2) == map(locvar_cell_draw_x, locvar_cell_draw_y, 0) ) {
					locvar_cell_draw_p = map(locvar_cell_draw_x, locvar_cell_draw_y, 6) \ 1000
					if ( locvar_cell_draw_p != 999 & locvar_cell_draw_p != 0 ) {
						pos locvar_cell_draw_dx, locvar_cell_draw_dy - chipm(CHIPM_F, locvar_cell_draw_p)
						gcopy 2, locvar_cell_draw_p \ 33 * inf_tiles, locvar_cell_draw_p / 33 * inf_tiles, inf_tiles, 48 + chipm(CHIPM_H, locvar_cell_draw_p)
					}
					if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
						locvar_cell_draw_p = map(locvar_cell_draw_x, locvar_cell_draw_y, 6) / 100000 \ 100 + map(locvar_cell_draw_x, locvar_cell_draw_y, 6) / 10000000 * 100
						if ( adata(ADATA_ID, locvar_cell_draw_p) == AREA_RANDOM_DUNGEON ) {
							if ( adata(ADATA_DEEPEST, locvar_cell_draw_p) == adata(ADATA_MAX_LEVEL, locvar_cell_draw_p) ) {
								pos locvar_cell_draw_dx + 16, locvar_cell_draw_dy - 16
								gcopy 3, 32, 624, 16, 16
							}
							else {
								if ( adata(ADATA_DEEPEST, locvar_cell_draw_p) != 0 ) {
									pos locvar_cell_draw_dx + 16, locvar_cell_draw_dy - 16
									gcopy 3, 48, 624, 16, 16
								}
							}
							if ( adata(ADATA_WAKEUP_NEFIA, locvar_cell_draw_p) == WAKEUP_NEFIA_NORMAL ) {
								pos locvar_cell_draw_dx + 16, locvar_cell_draw_dy - 5
								gcopy 3, 32, 640, 16, 16
							}
						}
					}
				}
			}
			if ( map(locvar_cell_draw_x, locvar_cell_draw_y, 8) != 0 ) {
				if ( mapsync(locvar_cell_draw_x, locvar_cell_draw_y) == msync ) {
					locvar_cell_draw_p2 = map(locvar_cell_draw_x, locvar_cell_draw_y, 8) - 1
					locvar_cell_draw_p = mef(1, locvar_cell_draw_p2) \ 10000, mef(1, locvar_cell_draw_p2) / 10000
					pos locvar_cell_draw_dx, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p)
					if ( chipi(CHIPI_ANIM, locvar_cell_draw_p) ) {
						locvar_cell_draw_p += (locvar_cell_draw_scrturn + locvar_cell_draw_p2) \ (chipi(CHIPI_ANIM, locvar_cell_draw_p) + 1) - ((locvar_cell_draw_scrturn + locvar_cell_draw_p2) \ (chipi(CHIPI_ANIM, locvar_cell_draw_p) + 1) == chipi(CHIPI_ANIM, locvar_cell_draw_p)) * 2 * (chipi(CHIPI_ANIM, locvar_cell_draw_p) != 0)
					}
					if ( mef(1, locvar_cell_draw_p2) > 10000 ) {
                        preparePicItem locvar_cell_draw_p, locvar_cell_draw_p(1)
						gcopy 1, 0, 960, inf_tiles, inf_tiles
					}
					else {
						gcopy 1, chipi(CHIPI_X, locvar_cell_draw_p), chipi(CHIPI_Y, locvar_cell_draw_p), inf_tiles, inf_tiles
					}
				}
			}
			if ( map(locvar_cell_draw_x, locvar_cell_draw_y, 5) != 0 ) {
				if ( map(locvar_cell_draw_x, locvar_cell_draw_y, 5) < 0 ) {
					if ( mode == MODELIST_SHOP | mode == MODELIST_TXT_ADV ) {
						locvar_cell_draw_i = 0
						locvar_cell_draw_p = 363
						goto *skipitemDraw
					}
					locvar_cell_draw_p = -map(locvar_cell_draw_x, locvar_cell_draw_y, 5)
					locvar_cell_draw_flooritem = locvar_cell_draw_p \ 1000 + RANGE_INV2, locvar_cell_draw_p / 1000 \ 1000 + RANGE_INV2, locvar_cell_draw_p / 1000000 \ 1000 + RANGE_INV2
					locvar_cell_draw_stackh = 0
					repeat 3
						locvar_cell_draw_cnt2 = 2 - cnt
						if ( locvar_cell_draw_flooritem(locvar_cell_draw_cnt2) == 999 + RANGE_INV2 ) {
							continue
						}
						locvar_cell_draw_p = inv(INV_ITEM_PIC, locvar_cell_draw_flooritem(locvar_cell_draw_cnt2))
						locvar_cell_draw_i = inv(INV_ITEM_COL, locvar_cell_draw_flooritem(locvar_cell_draw_cnt2))

                        preparePicItem locvar_cell_draw_p, locvar_cell_draw_i 

						if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
							gmode 2, chipi(CHIPI_WIDTH, locvar_cell_draw_p), chipi(CHIPI_HEIGHT, locvar_cell_draw_p)
							pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 24 - locvar_cell_draw_stackh / 2
							grotate 1, 0, 960, 0, 24, 24
						}
						else {
							if ( cfg_objectshadow & can_objectshadow ) {
								if ( chipi(CHIPI_SH, locvar_cell_draw_p) ) {
									gmode 2, chipi(CHIPI_WIDTH, locvar_cell_draw_p), chipi(CHIPI_HEIGHT, locvar_cell_draw_p), 70
									if ( chipi(CHIPI_HEIGHT, locvar_cell_draw_p) == inf_tiles ) {
										pos locvar_cell_draw_dx + chipi(CHIPI_WIDTH, locvar_cell_draw_p) / 2 + chipi(CHIPI_SH, locvar_cell_draw_p) / 80 + 2, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 22 - locvar_cell_draw_stackh
										if ( chipi(CHIPI_F, locvar_cell_draw_p) < 24 ) {
											_grotate 1, 0, 960, chipi(CHIPI_SH, locvar_cell_draw_p) / 2, chipi(CHIPI_WIDTH, locvar_cell_draw_p), chipi(CHIPI_HEIGHT, locvar_cell_draw_p)
										}
									}
									else {
										pos locvar_cell_draw_dx + chipi(CHIPI_WIDTH, locvar_cell_draw_p) / 2 + chipi(CHIPI_SH, locvar_cell_draw_p) / 4, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 46 - locvar_cell_draw_stackh
										_grotate 1, 0, 960, chipi(CHIPI_SH, locvar_cell_draw_p) * 2, chipi(CHIPI_WIDTH, locvar_cell_draw_p), chipi(CHIPI_HEIGHT, locvar_cell_draw_p)
									}
									gmode 2
								}
							}
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) - locvar_cell_draw_stackh
							if ( chipi(CHIPI_ANIM, locvar_cell_draw_p) == 0 ) {
								gcopy 1, 0, 960, chipi(CHIPI_WIDTH, locvar_cell_draw_p), chipi(CHIPI_HEIGHT, locvar_cell_draw_p)
							}
							else {
								gcopy 1, chipi(CHIPI_X, locvar_cell_draw_p) + (locvar_cell_draw_scrturn \ (chipi(CHIPI_ANIM, locvar_cell_draw_p) + 1) - (locvar_cell_draw_scrturn \ (chipi(CHIPI_ANIM, locvar_cell_draw_p) + 1) == chipi(CHIPI_ANIM, locvar_cell_draw_p)) * 2 * (chipi(CHIPI_ANIM, locvar_cell_draw_p) != 0)) * inf_tiles, chipi(CHIPI_Y, locvar_cell_draw_p), chipi(CHIPI_WIDTH, locvar_cell_draw_p), chipi(CHIPI_HEIGHT, locvar_cell_draw_p)
							}
						}
						locvar_cell_draw_stackh += chipi(CHIPI_S, locvar_cell_draw_p)
						if ( locvar_cell_draw_p == xy2pic(3, 16) | locvar_cell_draw_p == xy2pic(30, 33) | locvar_cell_draw_p == xy2pic(18, 36) ) {
							if ( chipc(CHIPC_HEIGHT, locvar_cell_draw_i) == 96 ) {
								locvar_cell_draw_stackh += 44
							}
						}
					loop
				}
				else {
					locvar_cell_draw_i = wpeek(map(locvar_cell_draw_x, locvar_cell_draw_y, 5), 2)
					locvar_cell_draw_p = wpeek(map(locvar_cell_draw_x, locvar_cell_draw_y, 5), 0)
*skipitemDraw
                    preparePicItem locvar_cell_draw_p, locvar_cell_draw_i 

					if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
						gmode 2, chipi(CHIPI_WIDTH, locvar_cell_draw_p), chipi(CHIPI_HEIGHT, locvar_cell_draw_p)
						pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 24
						grotate 1, 0, 960, 0, 24, 24
					}
					else {
						if ( cfg_objectshadow & can_objectshadow ) {
							if ( chipi(CHIPI_SH, locvar_cell_draw_p) >= 0 ) {
								gmode 2, chipi(CHIPI_WIDTH, locvar_cell_draw_p), chipi(CHIPI_HEIGHT, locvar_cell_draw_p), 80
								if ( chipi(CHIPI_HEIGHT, locvar_cell_draw_p) == inf_tiles ) {
									pos locvar_cell_draw_dx + chipi(CHIPI_WIDTH, locvar_cell_draw_p) / 2 + chipi(CHIPI_SH, locvar_cell_draw_p) / 80 + 2, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 22
									if ( chipi(CHIPI_F, locvar_cell_draw_p) < 24 ) {
										_grotate 1, 0, 960, chipi(CHIPI_SH, locvar_cell_draw_p) / 2, chipi(CHIPI_WIDTH, locvar_cell_draw_p), chipi(CHIPI_HEIGHT, locvar_cell_draw_p)
									}
								}
								else {
									pos locvar_cell_draw_dx + chipi(CHIPI_WIDTH, locvar_cell_draw_p) / 2 + chipi(CHIPI_SH, locvar_cell_draw_p) / 4, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 46
									_grotate 1, 0, 960, chipi(CHIPI_SH, locvar_cell_draw_p) * 2, chipi(CHIPI_WIDTH, locvar_cell_draw_p), chipi(CHIPI_HEIGHT, locvar_cell_draw_p)
								}
								gmode 2
							}
						}
						if ( chipi(CHIPI_SH, locvar_cell_draw_p) == (-1) ) {
							pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24
							locvar_cell_draw_kaiten = 0
							if ( locvar_cell_draw_p == 825 ) {
								pos locvar_cell_draw_dx + 24 - rnd(2), locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24
							}
							if ( locvar_cell_draw_p == 826 ) {
								if ( rnd(3) == 0 ) {
									pos locvar_cell_draw_dx + 24 - rnd(2), locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24
								}
							}
							if ( locvar_cell_draw_p == 827 ) {
								pos locvar_cell_draw_dx + 24 - rnd(2), locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24
								if ( rnd(3) == 0 ) {
									locvar_cell_draw_kaiten = rnd(2)
								}
							}
							if ( locvar_cell_draw_p == 828 ) {
								pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
							}
							if ( locvar_cell_draw_p == 831 ) {
								pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
								if ( rnd(5) == 0 ) {
									locvar_cell_draw_kaiten = rnd(2)
								}
							}
							if ( locvar_cell_draw_p == 832 ) {
								if ( rnd(3) == 0 ) {
									pos locvar_cell_draw_dx + 24 - rnd(2) + rnd(2), locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
								}
							}
							if ( locvar_cell_draw_p == 833 ) {
								if ( rnd(4) == 0 ) {
									pos locvar_cell_draw_dx + 24 - rnd(2) + rnd(2), locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
									locvar_cell_draw_kaiten = rnd(2)
								}
							}
							if ( locvar_cell_draw_p == 834 ) {
								if ( rnd(4) == 0 ) {
									pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
									locvar_cell_draw_kaiten = rnd(2)
								}
							}
							if ( locvar_cell_draw_p == 837 ) {
								pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
							}
							if ( locvar_cell_draw_p == 838 ) {
								pos locvar_cell_draw_dx + 24 - rnd(2) + rnd(2), locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24
							}
							if ( locvar_cell_draw_p == 1174 ) {
								if ( rnd(8) == 0 ) {
									pos locvar_cell_draw_dx + 24 - rnd(2) + rnd(2), locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
								}
							}
							if ( locvar_cell_draw_p == 840 ) {
								if ( rnd(8) == 0 ) {
									pos locvar_cell_draw_dx + 24 - rnd(2) + rnd(2), locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
								}
							}
							if ( locvar_cell_draw_p == 843 ) {
								if ( rnd(5) == 0 ) {
									pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
									locvar_cell_draw_kaiten = rnd(2)
								}
							}
							if ( locvar_cell_draw_p == 844 ) {
								if ( rnd(4) == 0 ) {
									pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
								}
							}
							if ( locvar_cell_draw_p == 845 ) {
								pos locvar_cell_draw_dx + 24 - rnd(2) + rnd(2), locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
							}
							if ( locvar_cell_draw_p == 846 ) {
								if ( rnd(4) == 0 ) {
									pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
								}
							}
							if ( locvar_cell_draw_p == 849 ) {
								pos locvar_cell_draw_dx + 24 - rnd(2) + rnd(2), locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
							}
							if ( locvar_cell_draw_p == 850 ) {
								if ( rnd(2) == 0 ) {
									pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
									locvar_cell_draw_kaiten = rnd(2)
								}
							}
							if ( locvar_cell_draw_p == 851 ) {
								if ( rnd(2) == 0 ) {
									pos locvar_cell_draw_dx + 24 - rnd(2) + rnd(2), locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
								}
							}
							if ( locvar_cell_draw_p == 852 ) {
								pos locvar_cell_draw_dx + 24 - rnd(2) + rnd(2), locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
								locvar_cell_draw_kaiten = rnd(2)
							}
							if ( locvar_cell_draw_p == 855 ) {
								pos locvar_cell_draw_dx + 24 - rnd(2), locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24
								if ( rnd(2) == 0 ) {
									locvar_cell_draw_kaiten = rnd(2)
								}
							}
							if ( locvar_cell_draw_p == 856 ) {
								pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
							}
							if ( locvar_cell_draw_p == 857 ) {
								pos locvar_cell_draw_dx + 24 - rnd(2) + rnd(2), locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24
							}
							if ( locvar_cell_draw_p == 858 ) {
								if ( rnd(5) == 0 ) {
									pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
								}
							}
							if ( locvar_cell_draw_p == 871 ) {
								if ( rnd(3) == 0 ) {
									pos locvar_cell_draw_dx + 24 - rnd(3) + rnd(3), locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24
								}
							}
							if ( locvar_cell_draw_p == 318 ) {
								pos locvar_cell_draw_dx + 24 - rnd(2), locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24
								if ( rnd(2) == 0 ) {
									locvar_cell_draw_kaiten = -1
								}
							}
							if ( locvar_cell_draw_p == 317 ) {
								pos locvar_cell_draw_dx + 24 - rnd(2), locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24
								locvar_cell_draw_kaiten = -1
							}
							if ( locvar_cell_draw_p == 316 ) {
								pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(5)
							}
							if ( locvar_cell_draw_p == 315 ) {
								if ( rnd(3) == 0 ) {
									pos locvar_cell_draw_dx + 24 - rnd(2), locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24
								}
							}
							if ( locvar_cell_draw_p == 314 ) {
								pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
								locvar_cell_draw_kaiten = -1
							}
							if ( locvar_cell_draw_p == 313 ) {
								if ( rnd(3) == 0 ) {
									pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(3)
								}
							}
							if ( locvar_cell_draw_p == 312 ) {
								if ( rnd(5) == 0 ) {
									pos locvar_cell_draw_dx + 24 + rnd(3), locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24
								}
							}
							if ( locvar_cell_draw_p == 311 ) {
								pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
								if ( rnd(3) == 0 ) {
									locvar_cell_draw_kaiten = rnd(2) - rnd(2)
								}
							}
							if ( locvar_cell_draw_p == 310 ) {
								pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(4)
								locvar_cell_draw_kaiten = -1
							}
							if ( locvar_cell_draw_p == 309 ) {
								pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
								if ( rnd(3) == 0 ) {
									locvar_cell_draw_kaiten = -1
								}
							}
							if ( locvar_cell_draw_p == 1173 ) {
								pos locvar_cell_draw_dx + 24 - rnd(2) + rnd(2), locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
							}
							if ( locvar_cell_draw_p == 1186 ) {
								if ( rnd(3) == 0 ) {
									pos locvar_cell_draw_dx + 24 - rnd(2) + rnd(2), locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 24 - rnd(2)
								}
							}
							if ( chipm(CHIPM_ROLE, map(locvar_cell_draw_x, locvar_cell_draw_y, MAP_TILE_ID_MEMORY)) == MAP_CHIP_ROLE_WATER ) {
								gmode 4, inf_tiles, inf_tiles, 140
								color 0, 0, 0
								grotate BUFFER_ITEM, 0, 960, 0 - locvar_cell_draw_kaiten, chipi(CHIPI_WIDTH, locvar_cell_draw_p), chipi(CHIPI_HEIGHT, locvar_cell_draw_p)
							}
							if ( chipm(CHIPM_ROLE, map(locvar_cell_draw_x, locvar_cell_draw_y, MAP_TILE_ID_MEMORY)) != MAP_CHIP_ROLE_WATER ) {
								grotate BUFFER_ITEM, 0, 960, 0 - locvar_cell_draw_kaiten, chipi(CHIPI_WIDTH, locvar_cell_draw_p), chipi(CHIPI_HEIGHT, locvar_cell_draw_p)
							}
 						}
						else {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p)
							if ( chipm(CHIPM_ROLE, map(locvar_cell_draw_x, locvar_cell_draw_y, MAP_TILE_ID_MEMORY)) == MAP_CHIP_ROLE_WATER ) {
								if ( chipi(CHIPI_F, locvar_cell_draw_p) == 0 ) {
									gmode 4, inf_tiles, inf_tiles, 140
									color 0, 0, 0
									pos locvar_cell_draw_dx, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p)
									gcopy BUFFER_ITEM, 0, 960, chipi(CHIPI_WIDTH, locvar_cell_draw_p), chipi(CHIPI_HEIGHT, locvar_cell_draw_p)
								}
								else {
									gmode 4, inf_tiles, inf_tiles, 140
									color 0, 0, 0
									pos locvar_cell_draw_dx, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p) + 22
									gcopy BUFFER_ITEM, 0, 982, chipi(CHIPI_WIDTH, locvar_cell_draw_p), chipi(CHIPI_HEIGHT, locvar_cell_draw_p) - 22
									pos locvar_cell_draw_dx, locvar_cell_draw_dy - chipi(CHIPI_F, locvar_cell_draw_p)
									gmode 2, inf_tiles, inf_tiles
									if ( chipi(CHIPI_ANIM, locvar_cell_draw_p) == 0 ) {
										gcopy BUFFER_ITEM, 0, 960, chipi(CHIPI_WIDTH, locvar_cell_draw_p), chipi(CHIPI_HEIGHT, locvar_cell_draw_p) - 22
									}
									else {
										gcopy BUFFER_ITEM, chipi(CHIPI_X, locvar_cell_draw_p) + (locvar_cell_draw_scrturn \ (chipi(CHIPI_ANIM, locvar_cell_draw_p) + 1) - (locvar_cell_draw_scrturn \ (chipi(CHIPI_ANIM, locvar_cell_draw_p) + 1) == chipi(CHIPI_ANIM, locvar_cell_draw_p)) * 2 * (chipi(CHIPI_ANIM, locvar_cell_draw_p) != 0)) * inf_tiles, chipi(CHIPI_Y, locvar_cell_draw_p), chipi(CHIPI_WIDTH, locvar_cell_draw_p), chipi(CHIPI_HEIGHT, locvar_cell_draw_p) - 22
									}
								}
							}
							else {
								if ( chipi(CHIPI_ANIM, locvar_cell_draw_p) == 0 ) {
									gcopy BUFFER_ITEM, 0, 960, chipi(CHIPI_WIDTH, locvar_cell_draw_p), chipi(CHIPI_HEIGHT, locvar_cell_draw_p)
								}
								else {
									gcopy BUFFER_ITEM, chipi(CHIPI_X, locvar_cell_draw_p) + (locvar_cell_draw_scrturn \ (chipi(CHIPI_ANIM, locvar_cell_draw_p) + 1) - (locvar_cell_draw_scrturn \ (chipi(CHIPI_ANIM, locvar_cell_draw_p) + 1) == chipi(CHIPI_ANIM, locvar_cell_draw_p)) * 2 * (chipi(CHIPI_ANIM, locvar_cell_draw_p) != 0)) * inf_tiles, chipi(CHIPI_Y, locvar_cell_draw_p), chipi(CHIPI_WIDTH, locvar_cell_draw_p), chipi(CHIPI_HEIGHT, locvar_cell_draw_p)
								}
							}
						}
					}
				}
			}
			if ( map(locvar_cell_draw_x, locvar_cell_draw_y, 1) != 0 ) {
				locvar_cell_draw_c = map(locvar_cell_draw_x, locvar_cell_draw_y, 1) - 1
				if ( synccheck(locvar_cell_draw_c, -1) ) {
					if ( cbit(CHARA_BIT_INVISIBLE, locvar_cell_draw_c) == 1 ) {
						if ( cbit(CHARA_BIT_SEE_INVISIBLE, CHARA_PLAYER) == 0 ) {
							if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
								if ( cdata(CDATA_CONDITION_WET, locvar_cell_draw_c) == 0 ) {
									locvar_cell_draw_c = CHARA_PLAYER
								}
							}
						}
					}
					if ( locvar_cell_draw_c != CHARA_PLAYER ) {
						if ( gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_KIND) > 0 & mdata(MDATA_TYPE) == MAP_TYPE_WORLD & cdata(CDATA_RELATION, locvar_cell_draw_c) == RELATION_ALLY ) {
							locvar_cell_draw_c = 0
						}
					}
					if ( locvar_cell_draw_c != 0 ) {
						if ( cbit(CHARA_BIT_MARK_ITEM, locvar_cell_draw_c) ) {
							if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
								if ( cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c) > xy2pic(0, 0) ) {
									if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 1 ) {
										if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) > 48 ) {
											pos locvar_cell_draw_dx + 12 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12 + cdata(CDATA_MARK_ITEM_X, locvar_cell_draw_c), locvar_cell_draw_dy + 14 + cdata(CDATA_MARK_ITEM_Y, locvar_cell_draw_c) + (chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER) * 16 - (cbit(CHARA_BIT_SANDBAG, locvar_cell_draw_c) == 1) * 24
										}
										if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) <= 48 ) {
											pos locvar_cell_draw_dx + 12 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12 + cdata(CDATA_MARK_ITEM_X, locvar_cell_draw_c), locvar_cell_draw_dy + 18 + cdata(CDATA_MARK_ITEM_Y, locvar_cell_draw_c) + (chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER) * 16 - (cbit(CHARA_BIT_SANDBAG, locvar_cell_draw_c) == 1) * 24
										}
									}
									else {
										if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) > 48 ) {
											pos locvar_cell_draw_dx + 12 + cdata(CDATA_MARK_ITEM_X, locvar_cell_draw_c), locvar_cell_draw_dy + 14 + cdata(CDATA_MARK_ITEM_Y, locvar_cell_draw_c) + (chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER) * 16 - (cbit(CHARA_BIT_SANDBAG, locvar_cell_draw_c) == 1) * 24
										}
										if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) <= 48 ) {
											pos locvar_cell_draw_dx + 12 + cdata(CDATA_MARK_ITEM_X, locvar_cell_draw_c), locvar_cell_draw_dy + 18 + cdata(CDATA_MARK_ITEM_Y, locvar_cell_draw_c) + (chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER) * 16 - (cbit(CHARA_BIT_SANDBAG, locvar_cell_draw_c) == 1) * 24
										}
									}

                                    preparePicItem cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c), cdata(CDATA_MARK_ITEM_COL, locvar_cell_draw_c)

									if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) > 48 ) {
										gmode 2, chipi(CHIPI_WIDTH, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)), chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c))
										grotate 1, 0, 960, cdata(CDATA_MARK_ITEM_ADJUST_R, locvar_cell_draw_c) * 6.54498469498, chipi(CHIPI_WIDTH, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) / 4 + cdata(CDATA_MARK_ITEM_ADJUST_W, locvar_cell_draw_c) * 2, chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) / 4 + cdata(CDATA_MARK_ITEM_ADJUST_L, locvar_cell_draw_c) * 2
									}
									if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) <= 48 ) {
										gmode 2, chipi(CHIPI_WIDTH, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)), chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c))
										grotate 1, 0, 960, cdata(CDATA_MARK_ITEM_ADJUST_R, locvar_cell_draw_c) * 6.54498469498, chipi(CHIPI_WIDTH, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) / 2 + cdata(CDATA_MARK_ITEM_ADJUST_W, locvar_cell_draw_c) * 2, chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) / 2 + cdata(CDATA_MARK_ITEM_ADJUST_L, locvar_cell_draw_c) * 2
									}
								}
							}
						}
						if ( cbit(CHARA_BIT_PCC, locvar_cell_draw_c) == 1 ) {
							if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
								gmode 6, 32, 16, 85
								color 0, 0, 0
								pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 27
								grotate 3, 240, 384, 0, 20, 10
								if ( cfg_pcc_show == 0 ) {
									gmode 2, 32, 48
									pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 14
									grotate 10 + locvar_cell_draw_c, locvar_cell_draw_ani, cdata(CDATA_DIR, locvar_cell_draw_c) * 48, 0, 24, 36
								}
								if ( cfg_pcc_show == 1 ) {
									gmode 2, 32, 48
									pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 14
									grotate 10 + locvar_cell_draw_c, locvar_cell_draw_ani, cdata(CDATA_DIR, locvar_cell_draw_c) * 48, 0, 16, 24
								}
							}
							else {
								if ( chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER ) {
									if ( cfg_pcc_show == 0 ) {
										gmode 4, 32, 24, 146
										color 0, 0, 0
										pos locvar_cell_draw_dx + 22, locvar_cell_draw_dy + 36
										grotate 10 + locvar_cell_draw_c, locvar_cell_draw_ani, cdata(CDATA_DIR, locvar_cell_draw_c) * 48 + 28, 0, 32, 24
									}
									if ( cfg_pcc_show == 1 ) {
										gmode 4, 32, 20, 146
										color 0, 0, 0
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 36
										grotate 10 + locvar_cell_draw_c, locvar_cell_draw_ani, cdata(CDATA_DIR, locvar_cell_draw_c) * 48 + 28, 0, 24, 16
									}
									if ( cfg_pcc_show == 0 ) {
										gmode 2, 32, 28
										pos locvar_cell_draw_dx + 22, locvar_cell_draw_dy + 10
										grotate 10 + locvar_cell_draw_c, locvar_cell_draw_ani, cdata(CDATA_DIR, locvar_cell_draw_c) * 48, 0, 32, 28
									}
									if ( cfg_pcc_show == 1 ) {
										gmode 2, 32, 28
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 16
										grotate 10 + locvar_cell_draw_c, locvar_cell_draw_ani, cdata(CDATA_DIR, locvar_cell_draw_c) * 48, 0, 24, 24
									}
								}
								else {
									gmode 6, , , 110
									color 0, 0, 0
									pos locvar_cell_draw_dx + 8, locvar_cell_draw_dy + 20
									gcopy 3, 240, 384, 32, 16
									if ( cfg_pcc_show == 0 ) {
										gmode 2, 32, 48
										pos locvar_cell_draw_dx + 22, locvar_cell_draw_dy + 8
										grotate 10 + locvar_cell_draw_c, locvar_cell_draw_ani, cdata(CDATA_DIR, locvar_cell_draw_c) * 48, 0, 32, 48
									}
									if ( cfg_pcc_show == 1 ) {
										gmode 2, 32, 48
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 8
										grotate 10 + locvar_cell_draw_c, locvar_cell_draw_ani, cdata(CDATA_DIR, locvar_cell_draw_c) * 48, 0, 24, 40
									}
								}
							}
							gmode 2
							color 0, 0, 0
							if ( cdata(CDATA_CONDITION_ANGRY, locvar_cell_draw_c) != 0 ) {
								pos locvar_cell_draw_dx + 12, locvar_cell_draw_dy - 28
								gcopy 3, 32, 608, 16, 16
							}
							if ( cdata(CDATA_EMO_ICON, locvar_cell_draw_c) != 0 ) {
								draw_emo locvar_cell_draw_c, locvar_cell_draw_dx + 4, locvar_cell_draw_dy - 32
							}
						}
						else {
							if ( cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(0, 0) ) {
								if ( cdata(CDATA_CHARA_PIC, locvar_cell_draw_c) == xy2pic(1, 0) ) {
									cdata(CDATA_PIC, locvar_cell_draw_c) = 13000
								}
							}
							locvar_cell_draw_col = (cdata(CDATA_PIC, locvar_cell_draw_c) - cdata(CDATA_CHARA_PIC, locvar_cell_draw_c) * COLOR_TINT_MULT) / COLOR_TINT_MULT
							locvar_cell_draw_p = cdata(CDATA_PIC, locvar_cell_draw_c) \ COLOR_TINT_MULT + cdata(CDATA_CHARA_PIC, locvar_cell_draw_c) * COLOR_TINT_MULT
							if ( cdata(CDATA_PIC, locvar_cell_draw_c) >= xy2pic(1, 21) & cdata(CDATA_PIC, locvar_cell_draw_c) <= xy2pic(31, 21) ) {
								locvar_cell_draw_col = 0
								locvar_cell_draw_p = cdata(CDATA_PIC, locvar_cell_draw_c)
							}
							if ( cbit(CHARA_BIT_SANDBAG, locvar_cell_draw_c) ) {
								gmode 2, 48, 96, 80
                                if ( can_objectshadow ) {
									pos locvar_cell_draw_dx + 26 - 11, locvar_cell_draw_dy - 32 + 11
									_grotate 1, 96, 816, -80, 48, 96
                                }
								pos locvar_cell_draw_dx, locvar_cell_draw_dy - 63
								gcopy 1, 96, 816, 48, 96
								chipc(CHIPC_F, locvar_cell_draw_p) += 24
							}
							gsel 5
							color 0
							boxf 0, 960, chipc(CHIPC_WIDTH, locvar_cell_draw_p), chipc(CHIPC_HEIGHT, locvar_cell_draw_p) + 960
							pos 0, 960
							gcopy 5, chipc(CHIPC_X, locvar_cell_draw_p), chipc(CHIPC_Y, locvar_cell_draw_p), chipc(CHIPC_WIDTH, locvar_cell_draw_p), chipc(CHIPC_HEIGHT, locvar_cell_draw_p)
							gfini chipc(CHIPC_WIDTH, locvar_cell_draw_p), chipc(CHIPC_HEIGHT, locvar_cell_draw_p)
							gfdec2 c_col(0, locvar_cell_draw_col), c_col(1, locvar_cell_draw_col), c_col(2, locvar_cell_draw_col)
							gsel selcur
							if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
								gmode 6, 32, 16, 85
								color 0, 0, 0
								pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 32
								grotate 3, 240, 384, 0, 20, 10
								gmode 2, chipc(CHIPC_WIDTH, locvar_cell_draw_p), chipc(CHIPC_HEIGHT, locvar_cell_draw_p)
								pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 24 - chipc(CHIPC_F, locvar_cell_draw_p) / 2
								grotate 5, 0, 960, 0, 36, chipc(CHIPC_HEIGHT, locvar_cell_draw_p) * 3 / 4
								if ( cdata(CDATA_EMO_ICON, locvar_cell_draw_c) != 0 ) {
									draw_emo locvar_cell_draw_c, locvar_cell_draw_dx + 4, locvar_cell_draw_dy - chipc(CHIPC_F, locvar_cell_draw_p) / 2 - 16
								}
							}
							else {
								locvar_cell_draw_mimi = 0
								if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_CHAOS_MIMIC | cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_MIMIC ) {
									if ( locvar_cell_draw_c >= MAX_CHARA_FOLLOWER ) {
										locvar_cell_draw_mimi = 100
									}
								}
								if ( chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER ) {
									gmode 4, chipc(CHIPC_WIDTH, locvar_cell_draw_p), chipc(CHIPC_HEIGHT, locvar_cell_draw_p), 100
									color 0, 0, 0
									pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + chipc(CHIPC_HEIGHT, locvar_cell_draw_p) / 2 - cdata(CDATA_SPRITE_SIZE_MILK, locvar_cell_draw_c) * 2 - chipc(CHIPC_F, locvar_cell_draw_p) + 16
									grotate 5, 0, 960, 0, chipc(CHIPC_WIDTH, locvar_cell_draw_p) + cdata(CDATA_SPRITE_SIZE_MILK, locvar_cell_draw_c) * 3, chipc(CHIPC_HEIGHT, locvar_cell_draw_p) + cdata(CDATA_SPRITE_SIZE_MILK, locvar_cell_draw_c) * 4
									gmode 2, chipc(CHIPC_WIDTH, locvar_cell_draw_p), chipc(CHIPC_HEIGHT, locvar_cell_draw_p) + cdata(CDATA_SPRITE_SIZE_MILK, locvar_cell_draw_c) * 2 - 16
									pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + chipc(CHIPC_HEIGHT, locvar_cell_draw_p) / 2 - cdata(CDATA_SPRITE_SIZE_MILK, locvar_cell_draw_c) * 2 - chipc(CHIPC_F, locvar_cell_draw_p) + 8
									grotate 5, 0, 960, 0, chipc(CHIPC_WIDTH, locvar_cell_draw_p) + cdata(CDATA_SPRITE_SIZE_MILK, locvar_cell_draw_c) * 3, chipc(CHIPC_HEIGHT, locvar_cell_draw_p) + cdata(CDATA_SPRITE_SIZE_MILK, locvar_cell_draw_c) * 4 - 16
								}
								else {
									if ( locvar_cell_draw_mimi == 0 ) {
										gmode 6, , , 110
										color 0, 0, 0
										pos locvar_cell_draw_dx + 8, locvar_cell_draw_dy + 20
										gcopy 3, 240, 384, 32, 16
									}
									gmode 2, chipc(CHIPC_WIDTH, locvar_cell_draw_p), chipc(CHIPC_HEIGHT, locvar_cell_draw_p)
									pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + chipc(CHIPC_HEIGHT, locvar_cell_draw_p) / 2 - cdata(CDATA_SPRITE_SIZE_MILK, locvar_cell_draw_c) * 2 - chipc(CHIPC_F, locvar_cell_draw_p)
									grotate 5, 0, 960, 0, chipc(CHIPC_WIDTH, locvar_cell_draw_p) + cdata(CDATA_SPRITE_SIZE_MILK, locvar_cell_draw_c) * 3, chipc(CHIPC_HEIGHT, locvar_cell_draw_p) + cdata(CDATA_SPRITE_SIZE_MILK, locvar_cell_draw_c) * 4
								}
								if ( cdata(CDATA_CONDITION_ANGRY, locvar_cell_draw_c) != 0 & locvar_cell_draw_mimi == 0 ) {
									pos locvar_cell_draw_dx + 12, locvar_cell_draw_dy - chipc(CHIPC_F, locvar_cell_draw_p) - 12
									gcopy 3, 32, 608, 16, 16
								}
								if ( cdata(CDATA_EMO_ICON, locvar_cell_draw_c) != 0 & locvar_cell_draw_mimi == 0 ) {
									draw_emo locvar_cell_draw_c, locvar_cell_draw_dx + 4, locvar_cell_draw_dy - chipc(CHIPC_F, locvar_cell_draw_p) - 16
								}
							}
							if ( cbit(CHARA_BIT_SANDBAG, locvar_cell_draw_c) ) {
								pos locvar_cell_draw_dx, locvar_cell_draw_dy - 26
								gcopy 1, 96, 768, 48, 48
								chipc(CHIPC_F, locvar_cell_draw_p) -= 24
							}
						}
						if ( locvar_cell_draw_c != CHARA_PLAYER ) {
							if ( cbit(CHARA_BIT_MARK_ITEM, locvar_cell_draw_c) == 0 ) {
								if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
									if ( cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c) > xy2pic(0, 0) ) {
										if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 1 ) {
											if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) > 48 ) {
												pos locvar_cell_draw_dx + 12 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12 + cdata(CDATA_MARK_ITEM_X, locvar_cell_draw_c), locvar_cell_draw_dy + 14 + cdata(CDATA_MARK_ITEM_Y, locvar_cell_draw_c) + (chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER) * 16 - (cbit(CHARA_BIT_SANDBAG, locvar_cell_draw_c) == 1) * 24
											}
											if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) <= 48 ) {
												pos locvar_cell_draw_dx + 12 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12 + cdata(CDATA_MARK_ITEM_X, locvar_cell_draw_c), locvar_cell_draw_dy + 18 + cdata(CDATA_MARK_ITEM_Y, locvar_cell_draw_c) + (chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER) * 16 - (cbit(CHARA_BIT_SANDBAG, locvar_cell_draw_c) == 1) * 24
											}
										}
										else {
											if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) > 48 ) {
												pos locvar_cell_draw_dx + 12 + cdata(CDATA_MARK_ITEM_X, locvar_cell_draw_c), locvar_cell_draw_dy + 14 + cdata(CDATA_MARK_ITEM_Y, locvar_cell_draw_c) + (chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER) * 16 - (cbit(CHARA_BIT_SANDBAG, locvar_cell_draw_c) == 1) * 24
											}
											if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) <= 48 ) {
												pos locvar_cell_draw_dx + 12 + cdata(CDATA_MARK_ITEM_X, locvar_cell_draw_c), locvar_cell_draw_dy + 18 + cdata(CDATA_MARK_ITEM_Y, locvar_cell_draw_c) + (chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER) * 16 - (cbit(CHARA_BIT_SANDBAG, locvar_cell_draw_c) == 1) * 24
											}
										}

                                        preparePicItem cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c), cdata(CDATA_MARK_ITEM_COL, locvar_cell_draw_c)

										if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) > 48 ) {
											gmode 2, chipi(CHIPI_WIDTH, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)), chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c))
											grotate 1, 0, 960, cdata(CDATA_MARK_ITEM_ADJUST_R, locvar_cell_draw_c) * 6.54498469498, chipi(CHIPI_WIDTH, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) / 4 + cdata(CDATA_MARK_ITEM_ADJUST_W, locvar_cell_draw_c) * 2, chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) / 4 + cdata(CDATA_MARK_ITEM_ADJUST_L, locvar_cell_draw_c) * 2
										}
										if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) <= 48 ) {
											gmode 2, chipi(CHIPI_WIDTH, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)), chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c))
											grotate 1, 0, 960, cdata(CDATA_MARK_ITEM_ADJUST_R, locvar_cell_draw_c) * 6.54498469498, chipi(CHIPI_WIDTH, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) / 2 + cdata(CDATA_MARK_ITEM_ADJUST_W, locvar_cell_draw_c) * 2, chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) / 2 + cdata(CDATA_MARK_ITEM_ADJUST_L, locvar_cell_draw_c) * 2
										}
									}
								}
							}
						}
						if ( cbit(CHARA_BIT_STETHOSCOPE, locvar_cell_draw_c) == 1 | gdata(GDATA_SCOPE) == locvar_cell_draw_c | cbit(CHARA_BIT_NECRO, locvar_cell_draw_c) | (cdata(CDATA_RELATION, locvar_cell_draw_c) == 10 & locvar_cell_draw_c >= MAX_CHARA_FOLLOWER) ) {
							if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 0 ) {
								locvar_cell_draw_h = cdata(CDATA_HP, locvar_cell_draw_c) * 30 / cdata(CDATA_MAX_HP, locvar_cell_draw_c)
								if ( locvar_cell_draw_h > 30 ) {
									locvar_cell_draw_h = 30
								}
							}
							else {
								locvar_cell_draw_h = cdata(CDATA_HP, locvar_cell_draw_c) * 15 / cdata(CDATA_MAX_HP, locvar_cell_draw_c)
								if ( locvar_cell_draw_h > 15 ) {
									locvar_cell_draw_h = 15
								}
							}
							if ( cdata(CDATA_CHAIN_ATTACK_COUNT, locvar_cell_draw_c) >= 10 ) {
								font lang(cfg_font1, cfg_font2), 12 + en - en * 2, 0
								pos locvar_cell_draw_dx - 5, locvar_cell_draw_dy + 20
								color 0, 0, 0
								bmes " " + cdata(CDATA_CHAIN_ATTACK_COUNT, locvar_cell_draw_c) + "Chain！", 235, 185, 35
							}
							if ( gdata(GDATA_SCOPE) == locvar_cell_draw_c ) {
								if ( cdata(CDATA_ANALYSIS_GAUGE, locvar_cell_draw_c) < 20 ) {
									pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 23
									gcopy BUFFER_INF, 1392, 534, 8, 8
								}
								if ( cdata(CDATA_ANALYSIS_GAUGE, locvar_cell_draw_c) >= 20 & cdata(CDATA_ANALYSIS_GAUGE, locvar_cell_draw_c) < 40 ) {
									pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 23
									gcopy BUFFER_INF, 1392, 542, 8, 8
								}
								if ( cdata(CDATA_ANALYSIS_GAUGE, locvar_cell_draw_c) >= 40 & cdata(CDATA_ANALYSIS_GAUGE, locvar_cell_draw_c) < 60 ) {
									pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 23
									gcopy BUFFER_INF, 1392, 550, 8, 8
								}
								if ( cdata(CDATA_ANALYSIS_GAUGE, locvar_cell_draw_c) >= 60 & cdata(CDATA_ANALYSIS_GAUGE, locvar_cell_draw_c) < 80 ) {
									pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 23
									gcopy BUFFER_INF, 1392, 558, 8, 8
								}
								if ( cdata(CDATA_ANALYSIS_GAUGE, locvar_cell_draw_c) >= 80 & cdata(CDATA_ANALYSIS_GAUGE, locvar_cell_draw_c) < 100 ) {
									pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 23
									gcopy BUFFER_INF, 1392, 566, 8, 8
								}
								if ( cdata(CDATA_ANALYSIS_GAUGE, locvar_cell_draw_c) >= 100 ) {
									pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 23
									gcopy BUFFER_INF, 1392, 574, 42, 8
								}
							}
							if ( locvar_cell_draw_c < MAX_CHARA_FOLLOWER ) {
								if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
									if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 1 ) {
										pos locvar_cell_draw_dx + 9 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 15, locvar_cell_draw_dy + 31
									}
									else {
										pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 31
									}
									gcopy 3, 480 - locvar_cell_draw_h, 517, locvar_cell_draw_h, 3
									if ( cdata(CDATA_HUNGER, locvar_cell_draw_c) > 10000 ) {
										gcopy 3, 1440 - locvar_cell_draw_h, 511, locvar_cell_draw_h, 3
									}
									if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 1 ) {
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 31
										gcopy 3, 1393, 517, 5, 6
									}
									if ( cdata(CDATA_DIRECTIVE_MODE, locvar_cell_draw_c) == DIRECTIVE_MODE_DEFENSIVE ) {
										pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 25
										gcopy 3, 1410, 517, 9, 6
									}
									if ( cdata(CDATA_DIRECTIVE_MODE, locvar_cell_draw_c) == DIRECTIVE_MODE_INTERCEPT ) {
										pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 25
										gcopy 3, 1420, 517, 9, 6
									}
									if ( cdata(CDATA_DIRECTIVE_MODE, locvar_cell_draw_c) == DIRECTIVE_MODE_TALKING ) {
										pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 25
										gcopy 3, 1430, 517, 9, 6
									}
								}
							}
							else {
								if ( cbit(CHARA_BIT_NECRO, locvar_cell_draw_c) | (cdata(CDATA_RELATION, locvar_cell_draw_c) == 10 & locvar_cell_draw_c >= MAX_CHARA_FOLLOWER) ) {
									pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 31
									gcopy 3, 1440 - locvar_cell_draw_h, 500, locvar_cell_draw_h, 3
								}
								else {
									pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 31
									gcopy 3, 480 - locvar_cell_draw_h, 513, locvar_cell_draw_h, 3
								}
							}
						}
						if ( cbit(CHARA_BIT_MAGNETISM_S_POLE, locvar_cell_draw_c) ) {
							pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 25 - 9
							gcopy BUFFER_INF, 1383, 517, 8, 8
						}
						if ( cbit(CHARA_BIT_MAGNETISM_N_POLE, locvar_cell_draw_c) ) {
							pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 25 - 9
							gcopy BUFFER_INF, 1375, 517, 8, 8
						}
						if ( cdata(CDATA_POWER_GAUGE, locvar_cell_draw_c) < 0 ) {
							cdata(CDATA_POWER_GAUGE, locvar_cell_draw_c) = 0
						}
						locvar_cell_draw_powsel = 0
						if ( gdata(GDATA_FLAG_MAIN) < 350 ) {
							if ( cdata(CDATA_LEVEL, locvar_cell_draw_c) >= 130 ) {
								locvar_cell_draw_powsel = 100
							}
						}
						if ( gdata(GDATA_FLAG_MAIN) >= 350 ) {
							if ( cdata(CDATA_LEVEL, locvar_cell_draw_c) >= 50 ) {
								locvar_cell_draw_powsel = 100
							}
						}
						if ( locvar_cell_draw_c < MAX_CHARA_FOLLOWER ) {
							locvar_cell_draw_powsel = 100
						}
						if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_ABNORMAL ) {
							locvar_cell_draw_powsel = 100
						}
						locvar_cell_draw_mimi = 0
						if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_CHAOS_MIMIC | cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_MIMIC ) {
							if ( locvar_cell_draw_c >= MAX_CHARA_FOLLOWER ) {
								locvar_cell_draw_mimi = 100
							}
						}
						if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD & locvar_cell_draw_mimi == 0 & (locvar_cell_draw_c >= MAX_CHARA_FOLLOWER | cbit(CHARA_BIT_STETHOSCOPE, locvar_cell_draw_c) == 1 | gdata(GDATA_SCOPE) == locvar_cell_draw_c) ) {
							if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 0 ) {
								locvar_cell_draw_h = cdata(CDATA_POWER_GAUGE, locvar_cell_draw_c) * 30 / 100
								if ( locvar_cell_draw_h > 30 ) {
									locvar_cell_draw_h = 30
								}
							}
							else {
								locvar_cell_draw_h = cdata(CDATA_POWER_GAUGE, locvar_cell_draw_c) * 15 / 100
								if ( locvar_cell_draw_h > 15 ) {
									locvar_cell_draw_h = 15
								}
							}
							if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 1 ) {
								pos locvar_cell_draw_dx + 9 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 13, locvar_cell_draw_dy + 36
							}
							else {
								pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 36
							}
							if ( locvar_cell_draw_powsel == 100 ) {
								if ( cdata(CDATA_POWER_GAUGE, locvar_cell_draw_c) < 98 ) {
									gcopy 3, 1440 - locvar_cell_draw_h, 504, locvar_cell_draw_h, 3
								}
								else {
									gcopy 3, 1440 - locvar_cell_draw_h, 507, locvar_cell_draw_h, 3
								}
							}
							else {
								gcopy 3, 1440 - locvar_cell_draw_h, 531, locvar_cell_draw_h, 3
							}
							if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 0 ) {
								locvar_cell_draw_hg = cdata(CDATA_DRAIN_HP, locvar_cell_draw_c) * 30 / 100
								if ( locvar_cell_draw_hg > 30 ) {
									locvar_cell_draw_hg = 30
								}
							}
							else {
								locvar_cell_draw_hg = cdata(CDATA_DRAIN_HP, locvar_cell_draw_c) * 15 / 100
								if ( locvar_cell_draw_hg > 15 ) {
									locvar_cell_draw_hg = 15
								}
							}
							if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 1 ) {
								pos locvar_cell_draw_dx + 9 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 13, locvar_cell_draw_dy + 39
							}
							else {
								pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 39
							}
							if ( cdata(CDATA_DRAIN_HP, locvar_cell_draw_c) < 100 ) {
								gcopy BUFFER_INF, 1440 - locvar_cell_draw_hg, 588, locvar_cell_draw_hg, 3
							}
							else {
								gcopy BUFFER_INF, 1440 - locvar_cell_draw_hg, 591, locvar_cell_draw_hg, 3
							}
						}
						if ( cdata(CDATA_POWER_GAUGE, locvar_cell_draw_c) > 100 ) {
							if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD & locvar_cell_draw_mimi == 0 & (locvar_cell_draw_c >= MAX_CHARA_FOLLOWER | cbit(CHARA_BIT_STETHOSCOPE, locvar_cell_draw_c) == 1 | gdata(GDATA_SCOPE) == locvar_cell_draw_c) ) {
								if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 0 ) {
									locvar_cell_draw_h = (cdata(CDATA_POWER_GAUGE, locvar_cell_draw_c) - 100) * 30 / 100
									if ( locvar_cell_draw_h > 30 ) {
										locvar_cell_draw_h = 30
									}
								}
								else {
									locvar_cell_draw_h = (cdata(CDATA_POWER_GAUGE, locvar_cell_draw_c) - 100) * 15 / 100
									if ( locvar_cell_draw_h > 15 ) {
										locvar_cell_draw_h = 15
									}
								}
								if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 1 ) {
									pos locvar_cell_draw_dx + 9 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 13, locvar_cell_draw_dy + 36
								}
								else {
									pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 36
								}
								if ( locvar_cell_draw_powsel == 100 ) {
									if ( cdata(CDATA_POWER_GAUGE, locvar_cell_draw_c) < 198 ) {
										gcopy 3, 1440 - locvar_cell_draw_h, 494, locvar_cell_draw_h, 3
									}
									else {
										gcopy 3, 1440 - locvar_cell_draw_h, 497, locvar_cell_draw_h, 3
									}
								}
								else {
									gcopy 3, 1440 - locvar_cell_draw_h, 531, locvar_cell_draw_h, 3
								}
							}
						}
						if ( cbit(CHARA_BIT_STETHOSCOPE, locvar_cell_draw_c) == 1 | gdata(GDATA_SCOPE) == locvar_cell_draw_c | cbit(CHARA_BIT_NECRO, locvar_cell_draw_c) | (cdata(CDATA_RELATION, locvar_cell_draw_c) == 10 & locvar_cell_draw_c >= MAX_CHARA_FOLLOWER) ) {
							if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 0 ) {
								locvar_cell_draw_h = cdata(CDATA_MP, locvar_cell_draw_c) * 30 / cdata(CDATA_MAX_MP, locvar_cell_draw_c)
								if ( locvar_cell_draw_h > 30 ) {
									locvar_cell_draw_h = 30
								}
							}
							else {
								locvar_cell_draw_h = cdata(CDATA_MP, locvar_cell_draw_c) * 15 / cdata(CDATA_MAX_MP, locvar_cell_draw_c)
								if ( locvar_cell_draw_h > 15 ) {
									locvar_cell_draw_h = 15
								}
							}
							if ( locvar_cell_draw_c < MAX_CHARA_FOLLOWER ) {
								if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
									if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 1 ) {
										pos locvar_cell_draw_dx + 9 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 15, locvar_cell_draw_dy + 34
									}
									else {
										pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 34
									}
									gcopy 3, 1440 - locvar_cell_draw_h, 528, locvar_cell_draw_h, 2
								}
							}
							else {
								if ( cbit(CHARA_BIT_NECRO, locvar_cell_draw_c) | (cdata(CDATA_RELATION, locvar_cell_draw_c) == 10 & locvar_cell_draw_c >= MAX_CHARA_FOLLOWER) ) {
									pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 34
									gcopy 3, 1440 - locvar_cell_draw_h, 528, locvar_cell_draw_h, 2
								}
								else {
									pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 34
									gcopy 3, 1440 - locvar_cell_draw_h, 528, locvar_cell_draw_h, 2
								}
							}
						}
						if ( cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(24, 30) ) {
							pos locvar_cell_draw_dx - 24, locvar_cell_draw_dy - 63
							gmode 2, 96, 96
							gcopy 3, 1239, 390
						}
						if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_JALDABAOTH_THE_CHAOS_CHILD ) {
							if ( cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(21, 28) ) {
								pos locvar_cell_draw_dx - 48, locvar_cell_draw_dy - 63
								gmode 2, 144, 96
								gcopy BUFFER_INF, 908 + rnd(3) * 144, 494
							}
						}
						if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_HAND_OF_THE_GOD & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(15, 6) + COLOR_YELLOW * COLOR_TINT_MULT | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_GOLD_SHEEP & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(5, 5) + COLOR_YELLOW * COLOR_TINT_MULT) | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_GOLDEN_ARMOR & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(25, 6) + COLOR_YELLOW * COLOR_TINT_MULT) ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 15
							gmode 5, inf_tiles, inf_tiles, 50 + rnd(70)
							gcopy 3, 192 + 48 * 7 + rnd(1) * inf_tiles, 704
						}
						if ( cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(0, 7) + COLOR_YELLOW * COLOR_TINT_MULT ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 35
							gmode 5, inf_tiles, inf_tiles, 100 + rnd(50)
							gcopy 3, 192 + 48 * 7 + rnd(1) * inf_tiles, 704
						}
						if ( cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(29, 19) + COLOR_LIGHT_BLUE * COLOR_TINT_MULT ) {
							pos locvar_cell_draw_dx - 3, locvar_cell_draw_dy - 45
							gmode 5, inf_tiles, inf_tiles, 100 + rnd(50)
							gcopy 3, 192 + 48 * 7 + rnd(1) * inf_tiles, 704
						}
						if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_GOLD_BELL & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(21, 7) + COLOR_YELLOW * COLOR_TINT_MULT | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_PLATINA_BELL & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(21, 7)) ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 10
							gmode 5, inf_tiles, inf_tiles, 50 + rnd(50)
							gcopy 3, 192 + rnd(1) * inf_tiles, 704
						}
						if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_MOONLIT_PAPILLON & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(23, 23) + COLOR_LIGHT_GREEN * COLOR_TINT_MULT ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 15
							gmode 5, inf_tiles, inf_tiles, 80 + rnd(40)
							gcopy 3, 192 + 48 * 3 + rnd(1) * inf_tiles, 704
						}
						if ( cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(14, 6) + COLOR_YELLOW * COLOR_TINT_MULT ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 20
							gmode 5, inf_tiles, inf_tiles, 80 + rnd(40)
							gcopy 3, 192 + 48 * 3 + rnd(1) * inf_tiles, 704
						}
						if ( cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(29, 23) + COLOR_YELLOW * COLOR_TINT_MULT | cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(30, 23) + COLOR_YELLOW * COLOR_TINT_MULT | cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(21, 25) + COLOR_YELLOW * COLOR_TINT_MULT ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 15
							gmode 5, inf_tiles, inf_tiles, 80 + rnd(40)
							gcopy 3, 192 + 48 * 3 + rnd(1) * inf_tiles, 704
						}
						if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_GOLD_KIWI & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(24, 24) + COLOR_YELLOW * COLOR_TINT_MULT | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_HELL_CRAB & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(6, 7) + COLOR_YELLOW * COLOR_TINT_MULT) ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 5
							gmode 5, inf_tiles, inf_tiles, 100 + rnd(50)
							gcopy 3, 192 + 48 * 11 + rnd(1) * inf_tiles, 704
						}
						if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_ETHER_GENERATOR & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(29, 15) ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 48
							gmode 5, inf_tiles, inf_tiles, 50 + rnd(70)
							gcopy 3, 192 + rnd(1) * inf_tiles, 704
						}
						if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_VANSESDA_THE_ANCIENT_FIRE & (cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(18, 17) | cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(20, 19)) ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 48
							gmode 5, inf_tiles, inf_tiles, 50 + rnd(70)
							gcopy 3, 192 + 48 * 11 + rnd(1) * inf_tiles, 704
						}
						if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_YELLOW_FIRE_DRAGON & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(8, 10) + COLOR_YELLOW * COLOR_TINT_MULT ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 48
							gmode 5, inf_tiles, inf_tiles, 100 + rnd(50)
							gcopy 3, 192 + 48 * 11 + rnd(1) * inf_tiles, 704
						}
						if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_LAVA_GOLEM & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(19, 19) ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 15
							gmode 5, inf_tiles, inf_tiles, 50 + rnd(70)
							gcopy 3, 192 + 48 * 11 + rnd(1) * inf_tiles, 704
						}
						if ( cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(27, 11) + COLOR_RED * COLOR_TINT_MULT ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 25
							gmode 5, inf_tiles, inf_tiles, 100 + rnd(70)
							gcopy 3, 192 + 48 * 1 + rnd(2) * inf_tiles, 704
						}
						if ( cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(9, 26) + COLOR_YELLOW * COLOR_TINT_MULT ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 25
							gmode 5, inf_tiles, inf_tiles, 100 + rnd(50)
							gcopy 3, 192 + 48 * 11 + rnd(1) * inf_tiles, 704
						}
						if ( cdata(CDATA_PIC, locvar_cell_draw_c) == 1039 + 5 * 1000 ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 19
							gmode 5, inf_tiles, inf_tiles, 100 + rnd(50)
							gcopy BUFFER_INF, 192 + 48 * 3 + rnd(1) * inf_tiles, 704
						}
						if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_CTHUGHA & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(7, 23) | cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(9, 23) ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 15
							gmode 5, inf_tiles, inf_tiles, 100 + rnd(70)
							gcopy 3, 192 + 48 * 1 + rnd(2) * inf_tiles, 704
						}
						if ( cbit(CHARA_BIT_BRUSHED, locvar_cell_draw_c) == 1 ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 15
							gmode 5, inf_tiles, inf_tiles, 30 * cdata(CDATA_BRUSH_LEVEL, locvar_cell_draw_c) + rnd(30)
							gcopy 3, 192 + 48 * 9 + rnd(2) * inf_tiles, 704
						}
						if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_CRYSTALIAN & cdata(CDATA_PIC, locvar_cell_draw_c) >= xy2pic(31, 33) ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 15
							gmode 5, inf_tiles, inf_tiles, 50 + rnd(50)
							gcopy BUFFER_INF, 192 + 48 * 9 + rnd(2) * inf_tiles, 704
						}
						if ( cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(29, 7) + COLOR_WHITE * COLOR_TINT_MULT ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 5
							gmode 5, inf_tiles, inf_tiles, 100 + rnd(50)
							gcopy 3, 192 + 48 * 11 + rnd(1) * inf_tiles, 704
						}
						if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_CATERPILLAR_SNIPER & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(14, 30) ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 5
							gmode 5, inf_tiles, inf_tiles, 100 + rnd(50)
							gcopy 3, 192 + 48 * 11 + rnd(1) * inf_tiles, 704
						}
						if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_INSANE_KUMIROMI & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(4, 13) ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 18
							gmode 5, inf_tiles, inf_tiles, 100 + rnd(70)
							gcopy 3, 192 + 48 * 11 + rnd(1) * inf_tiles, 704
						}
						if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_THE_ELEMENT & cdata(CDATA_PIC, locvar_cell_draw_c) == 496 + COLOR_RED * COLOR_TINT_MULT | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_HYPER_YACATECT & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(0, 15)) | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_BLESSED_JURE & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(6, 12)) | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_DEVASTATE_LULWY & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(30, 11)) | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_BUILDUP_OPATOS & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(3, 13)) | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_DEUS_EX_MANINA & cdata(CDATA_PIC, locvar_cell_draw_c) == 447 + COLOR_YELLOW * COLOR_TINT_MULT) | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_GOD_INSIDE_EHEKATL & cdata(CDATA_PIC, locvar_cell_draw_c) == 413 + COLOR_BLACK * COLOR_TINT_MULT) | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_YAYAUHQUI_TEZCATLIPOCA & cdata(CDATA_PIC, locvar_cell_draw_c) == 931 + COLOR_BLACK * COLOR_TINT_MULT) | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_JALDABAOTH_THE_CHAOS_CHILD & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(21, 28)) ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 40
							gmode 5, inf_tiles, inf_tiles, 100 + rnd(70)
							gcopy 3, 192 + 48 * 11 + rnd(1) * inf_tiles, 704
						}
						if ( cdata(CDATA_SP_EARNED, locvar_cell_draw_c) <= (-1000000) & cdata(CDATA_SP_EARNED, locvar_cell_draw_c) > (-2000000) ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 5
							gmode 4, inf_tiles, inf_tiles, 157 + rnd(3) * 50
							gcopy BUFFER_INF, 192 + 48 * 20 + rnd(1) * inf_tiles, 704
						}
						if ( cdata(CDATA_SP_EARNED, locvar_cell_draw_c) <= (-2000000) ) {
							pos locvar_cell_draw_dx, locvar_cell_draw_dy - 5
							gmode 4, inf_tiles, inf_tiles, 157 + rnd(3) * 50
							gcopy BUFFER_INF, 192 + 48 * 21 + rnd(1) * inf_tiles, 704
						}
					}
				}
			}
			if ( map(locvar_cell_draw_x, locvar_cell_draw_y, 1) != 0 ) {
				if ( synccheck(map(locvar_cell_draw_x, locvar_cell_draw_y, 1) - 1, -1) ) {
					if ( cdata(CDATA_IN_TAGTEAM, map(locvar_cell_draw_x, locvar_cell_draw_y, 1) - 1) != 0 ) {
						locvar_cell_draw_c = cdata(CDATA_TAGTEAM_PARTNER, map(locvar_cell_draw_x, locvar_cell_draw_y, 1) - 1)
						if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 1 ) {
							if ( cbit(CHARA_BIT_INVISIBLE, locvar_cell_draw_c) == 1 ) {
								if ( cbit(CHARA_BIT_SEE_INVISIBLE, CHARA_PLAYER) == 0 ) {
									if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
										if ( cdata(CDATA_CONDITION_WET, locvar_cell_draw_c) == 0 ) {
											locvar_cell_draw_c = CHARA_PLAYER
										}
									}
								}
							}
							if ( locvar_cell_draw_c != CHARA_PLAYER ) {
								if ( gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_KIND) > 0 & mdata(MDATA_TYPE) == MAP_TYPE_WORLD & cdata(CDATA_RELATION, locvar_cell_draw_c) == RELATION_ALLY ) {
									locvar_cell_draw_c = 0
								}
							}
							if ( locvar_cell_draw_c != 0 ) {
								if ( cbit(CHARA_BIT_MARK_ITEM, locvar_cell_draw_c) ) {
									if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
										if ( cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c) > xy2pic(0, 0) ) {
											if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 1 ) {
												if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) > 48 ) {
													pos locvar_cell_draw_dx + 12 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12 + cdata(CDATA_MARK_ITEM_X, locvar_cell_draw_c), locvar_cell_draw_dy + 14 + cdata(CDATA_MARK_ITEM_Y, locvar_cell_draw_c) + (chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER) * 16 - (cbit(CHARA_BIT_SANDBAG, locvar_cell_draw_c) == 1) * 24
												}
												if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) <= 48 ) {
													pos locvar_cell_draw_dx + 12 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12 + cdata(CDATA_MARK_ITEM_X, locvar_cell_draw_c), locvar_cell_draw_dy + 18 + cdata(CDATA_MARK_ITEM_Y, locvar_cell_draw_c) + (chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER) * 16 - (cbit(CHARA_BIT_SANDBAG, locvar_cell_draw_c) == 1) * 24
												}
											}
											else {
												if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) > 48 ) {
													pos locvar_cell_draw_dx + 12 + cdata(CDATA_MARK_ITEM_X, locvar_cell_draw_c), locvar_cell_draw_dy + 14 + cdata(CDATA_MARK_ITEM_Y, locvar_cell_draw_c) + (chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER) * 16 - (cbit(CHARA_BIT_SANDBAG, locvar_cell_draw_c) == 1) * 24
												}
												if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) <= 48 ) {
													pos locvar_cell_draw_dx + 12 + cdata(CDATA_MARK_ITEM_X, locvar_cell_draw_c), locvar_cell_draw_dy + 18 + cdata(CDATA_MARK_ITEM_Y, locvar_cell_draw_c) + (chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER) * 16 - (cbit(CHARA_BIT_SANDBAG, locvar_cell_draw_c) == 1) * 24
												}
											}

                                            preparePicItem cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c), cdata(CDATA_MARK_ITEM_COL, locvar_cell_draw_c)

											if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) > 48 ) {
												gmode 2, chipi(CHIPI_WIDTH, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)), chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c))
												grotate 1, 0, 960, cdata(CDATA_MARK_ITEM_ADJUST_R, locvar_cell_draw_c) * 6.54498469498, chipi(CHIPI_WIDTH, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) / 4 + cdata(CDATA_MARK_ITEM_ADJUST_W, locvar_cell_draw_c) * 2, chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) / 4 + cdata(CDATA_MARK_ITEM_ADJUST_L, locvar_cell_draw_c) * 2
											}
											if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) <= 48 ) {
												gmode 2, chipi(CHIPI_WIDTH, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)), chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c))
												grotate 1, 0, 960, cdata(CDATA_MARK_ITEM_ADJUST_R, locvar_cell_draw_c) * 6.54498469498, chipi(CHIPI_WIDTH, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) / 2 + cdata(CDATA_MARK_ITEM_ADJUST_W, locvar_cell_draw_c) * 2, chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) / 2 + cdata(CDATA_MARK_ITEM_ADJUST_L, locvar_cell_draw_c) * 2
											}
										}
									}
								}
								if ( cbit(CHARA_BIT_PCC, locvar_cell_draw_c) == 1 ) {
									if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
										gmode 6, 32, 16, 85
										color 0, 0, 0
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 27
										grotate 3, 240, 384, 0, 20, 10
										if ( cfg_pcc_show == 0 ) {
											gmode 2, 32, 48
											pos locvar_cell_draw_dx + 24 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 8, locvar_cell_draw_dy + 14
											grotate 10 + locvar_cell_draw_c, locvar_cell_draw_ani, cdata(CDATA_DIR, cdata(CDATA_TAGTEAM_PARTNER, locvar_cell_draw_c)) * 48, 0, 24, 36
										}
										if ( cfg_pcc_show == 1 ) {
											gmode 2, 32, 48
											pos locvar_cell_draw_dx + 24 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 8, locvar_cell_draw_dy + 14
											grotate 10 + locvar_cell_draw_c, locvar_cell_draw_ani, cdata(CDATA_DIR, cdata(CDATA_TAGTEAM_PARTNER, locvar_cell_draw_c)) * 48, 0, 16, 24
										}
									}
									else {
										if ( chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER ) {
											if ( cfg_pcc_show == 0 ) {
												gmode 4, 32, 24, 146
												color 0, 0, 0
												pos locvar_cell_draw_dx + 22 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy + 36
												grotate 10 + locvar_cell_draw_c, locvar_cell_draw_ani, cdata(CDATA_DIR, cdata(CDATA_TAGTEAM_PARTNER, locvar_cell_draw_c)) * 48 + 28, 0, 32, 24
											}
											if ( cfg_pcc_show == 1 ) {
												gmode 4, 32, 20, 146
												color 0, 0, 0
												pos locvar_cell_draw_dx + 24 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy + 36
												grotate 10 + locvar_cell_draw_c, locvar_cell_draw_ani, cdata(CDATA_DIR, cdata(CDATA_TAGTEAM_PARTNER, locvar_cell_draw_c)) * 48 + 28, 0, 24, 16
											}
											if ( cfg_pcc_show == 0 ) {
												gmode 2, 32, 28
												pos locvar_cell_draw_dx + 22 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy + 10
												grotate 10 + locvar_cell_draw_c, locvar_cell_draw_ani, cdata(CDATA_DIR, cdata(CDATA_TAGTEAM_PARTNER, locvar_cell_draw_c)) * 48, 0, 32, 28
											}
											if ( cfg_pcc_show == 1 ) {
												gmode 2, 32, 28
												pos locvar_cell_draw_dx + 24 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy + 16
												grotate 10 + locvar_cell_draw_c, locvar_cell_draw_ani, cdata(CDATA_DIR, cdata(CDATA_TAGTEAM_PARTNER, locvar_cell_draw_c)) * 48, 0, 24, 24
											}
										}
										else {
											gmode 6, , , 110
											color 0, 0, 0
											pos locvar_cell_draw_dx + 8, locvar_cell_draw_dy + 20
											gcopy 3, 240, 384, 32, 16
											if ( cfg_pcc_show == 0 ) {
												gmode 2, 32, 48
												pos locvar_cell_draw_dx + 22 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy + 8
												grotate 10 + locvar_cell_draw_c, locvar_cell_draw_ani, cdata(CDATA_DIR, cdata(CDATA_TAGTEAM_PARTNER, locvar_cell_draw_c)) * 48, 0, 32, 48
											}
											if ( cfg_pcc_show == 1 ) {
												gmode 2, 32, 48
												pos locvar_cell_draw_dx + 24 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy + 8
												grotate 10 + locvar_cell_draw_c, locvar_cell_draw_ani, cdata(CDATA_DIR, cdata(CDATA_TAGTEAM_PARTNER, locvar_cell_draw_c)) * 48, 0, 24, 40
											}
										}
									}
									gmode 2
									color 0, 0, 0
									if ( cdata(CDATA_CONDITION_ANGRY, locvar_cell_draw_c) != 0 ) {
										pos locvar_cell_draw_dx + 12 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 28
										gcopy 3, 32, 608, 16, 16
									}
									if ( cdata(CDATA_EMO_ICON, locvar_cell_draw_c) != 0 ) {
										draw_emo locvar_cell_draw_c, locvar_cell_draw_dx + 4 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 32
									}
								}
								else {
									if ( cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(0, 0) ) {
										if ( cdata(CDATA_CHARA_PIC, locvar_cell_draw_c) == xy2pic(1, 0) ) {
											cdata(CDATA_PIC, locvar_cell_draw_c) = 13000
										}
									}
									locvar_cell_draw_col = (cdata(CDATA_PIC, locvar_cell_draw_c) - cdata(CDATA_CHARA_PIC, locvar_cell_draw_c) * COLOR_TINT_MULT) / COLOR_TINT_MULT
									locvar_cell_draw_p = cdata(CDATA_PIC, locvar_cell_draw_c) \ COLOR_TINT_MULT + cdata(CDATA_CHARA_PIC, locvar_cell_draw_c) * COLOR_TINT_MULT
									if ( cdata(CDATA_PIC, locvar_cell_draw_c) >= xy2pic(1, 21) & cdata(CDATA_PIC, locvar_cell_draw_c) <= xy2pic(31, 21) ) {
										locvar_cell_draw_col = 0
										locvar_cell_draw_p = cdata(CDATA_PIC, locvar_cell_draw_c)
									}
									if ( cbit(CHARA_BIT_SANDBAG, locvar_cell_draw_c) ) {
										gmode 2, 48, 96, 80
										pos locvar_cell_draw_dx + 26 - 11, locvar_cell_draw_dy - 32 + 11
										_grotate 1, 96, 816, -80, 48, 96
										pos locvar_cell_draw_dx, locvar_cell_draw_dy - 63
										gcopy 1, 96, 816, 48, 96
										chipc(CHIPC_F, locvar_cell_draw_p) += 24
									}
									gsel 5
									color 0
									boxf 0, 960, chipc(CHIPC_WIDTH, locvar_cell_draw_p), chipc(CHIPC_HEIGHT, locvar_cell_draw_p) + 960
									pos 0, 960
									gcopy 5, chipc(CHIPC_X, locvar_cell_draw_p), chipc(CHIPC_Y, locvar_cell_draw_p), chipc(CHIPC_WIDTH, locvar_cell_draw_p), chipc(CHIPC_HEIGHT, locvar_cell_draw_p)
									gfini chipc(CHIPC_WIDTH, locvar_cell_draw_p), chipc(CHIPC_HEIGHT, locvar_cell_draw_p)
									gfdec2 c_col(0, locvar_cell_draw_col), c_col(1, locvar_cell_draw_col), c_col(2, locvar_cell_draw_col)
									gsel selcur
									if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
										gmode 6, 32, 16, 85
										color 0, 0, 0
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 32
										grotate 3, 240, 384, 0, 20, 10
										gmode 2, chipc(CHIPC_WIDTH, locvar_cell_draw_p), chipc(CHIPC_HEIGHT, locvar_cell_draw_p)
										pos locvar_cell_draw_dx + 24 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 8, locvar_cell_draw_dy + 24 - chipc(CHIPC_F, locvar_cell_draw_p) / 2
										grotate 5, 0, 960, 0, 36, chipc(CHIPC_HEIGHT, locvar_cell_draw_p) * 3 / 4
										if ( cdata(CDATA_EMO_ICON, locvar_cell_draw_c) != 0 ) {
											draw_emo locvar_cell_draw_c, locvar_cell_draw_dx + 4 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 8, locvar_cell_draw_dy - chipc(CHIPC_F, locvar_cell_draw_p) / 2 - 16
										}
									}
									else {
										if ( chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER ) {
											gmode 4, chipc(CHIPC_WIDTH, locvar_cell_draw_p), chipc(CHIPC_HEIGHT, locvar_cell_draw_p), 100
											color 0, 0, 0
											pos locvar_cell_draw_dx + 24 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy + chipc(CHIPC_HEIGHT, locvar_cell_draw_p) / 2 - cdata(CDATA_SPRITE_SIZE_MILK, locvar_cell_draw_c) * 2 - chipc(CHIPC_F, locvar_cell_draw_p) + 16
											grotate 5, 0, 960, 0, chipc(CHIPC_WIDTH, locvar_cell_draw_p) + cdata(CDATA_SPRITE_SIZE_MILK, locvar_cell_draw_c) * 3, chipc(CHIPC_HEIGHT, locvar_cell_draw_p) + cdata(CDATA_SPRITE_SIZE_MILK, locvar_cell_draw_c) * 4
											gmode 2, chipc(CHIPC_WIDTH, locvar_cell_draw_p), chipc(CHIPC_HEIGHT, locvar_cell_draw_p) + cdata(CDATA_SPRITE_SIZE_MILK, locvar_cell_draw_c) * 2 - 16
											pos locvar_cell_draw_dx + 24 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy + chipc(CHIPC_HEIGHT, locvar_cell_draw_p) / 2 - cdata(CDATA_SPRITE_SIZE_MILK, locvar_cell_draw_c) * 2 - chipc(CHIPC_F, locvar_cell_draw_p) + 8
											grotate 5, 0, 960, 0, chipc(CHIPC_WIDTH, locvar_cell_draw_p) + cdata(CDATA_SPRITE_SIZE_MILK, locvar_cell_draw_c) * 3, chipc(CHIPC_HEIGHT, locvar_cell_draw_p) + cdata(CDATA_SPRITE_SIZE_MILK, locvar_cell_draw_c) * 4 - 16
										}
										else {
											gmode 6, , , 110
											color 0, 0, 0
											pos locvar_cell_draw_dx + 8, locvar_cell_draw_dy + 20
											gcopy 3, 240, 384, 32, 16
											gmode 2, chipc(CHIPC_WIDTH, locvar_cell_draw_p), chipc(CHIPC_HEIGHT, locvar_cell_draw_p)
											pos locvar_cell_draw_dx + 24 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy + chipc(CHIPC_HEIGHT, locvar_cell_draw_p) / 2 - cdata(CDATA_SPRITE_SIZE_MILK, locvar_cell_draw_c) * 2 - chipc(CHIPC_F, locvar_cell_draw_p)
											grotate 5, 0, 960, 0, chipc(CHIPC_WIDTH, locvar_cell_draw_p) + cdata(CDATA_SPRITE_SIZE_MILK, locvar_cell_draw_c) * 3, chipc(CHIPC_HEIGHT, locvar_cell_draw_p) + cdata(CDATA_SPRITE_SIZE_MILK, locvar_cell_draw_c) * 4
										}
										if ( cdata(CDATA_CONDITION_ANGRY, locvar_cell_draw_c) != 0 ) {
											pos locvar_cell_draw_dx + 12 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - chipc(CHIPC_F, locvar_cell_draw_p) - 12
											gcopy 3, 32, 608, 16, 16
										}
										if ( cdata(CDATA_EMO_ICON, locvar_cell_draw_c) != 0 ) {
											draw_emo locvar_cell_draw_c, locvar_cell_draw_dx + 4 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - chipc(CHIPC_F, locvar_cell_draw_p) - 16
										}
									}
									if ( cbit(CHARA_BIT_SANDBAG, locvar_cell_draw_c) ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy - 26
										gcopy 1, 96, 768, 48, 48
										chipc(CHIPC_F, locvar_cell_draw_p) -= 24
									}
								}
								if ( locvar_cell_draw_c != CHARA_PLAYER ) {
									if ( cbit(CHARA_BIT_MARK_ITEM, locvar_cell_draw_c) == 0 ) {
										if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
											if ( cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c) > xy2pic(0, 0) ) {
												if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 1 ) {
													if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) > 48 ) {
														pos locvar_cell_draw_dx + 12 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12 + cdata(CDATA_MARK_ITEM_X, locvar_cell_draw_c), locvar_cell_draw_dy + 14 + cdata(CDATA_MARK_ITEM_Y, locvar_cell_draw_c) + (chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER) * 16 - (cbit(CHARA_BIT_SANDBAG, locvar_cell_draw_c) == 1) * 24
													}
													if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) <= 48 ) {
														pos locvar_cell_draw_dx + 12 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12 + cdata(CDATA_MARK_ITEM_X, locvar_cell_draw_c), locvar_cell_draw_dy + 18 + cdata(CDATA_MARK_ITEM_Y, locvar_cell_draw_c) + (chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER) * 16 - (cbit(CHARA_BIT_SANDBAG, locvar_cell_draw_c) == 1) * 24
													}
												}
												else {
													if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) > 48 ) {
														pos locvar_cell_draw_dx + 12 + cdata(CDATA_MARK_ITEM_X, locvar_cell_draw_c), locvar_cell_draw_dy + 14 + cdata(CDATA_MARK_ITEM_Y, locvar_cell_draw_c) + (chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER) * 16 - (cbit(CHARA_BIT_SANDBAG, locvar_cell_draw_c) == 1) * 24
													}
													if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) <= 48 ) {
														pos locvar_cell_draw_dx + 12 + cdata(CDATA_MARK_ITEM_X, locvar_cell_draw_c), locvar_cell_draw_dy + 18 + cdata(CDATA_MARK_ITEM_Y, locvar_cell_draw_c) + (chipm(CHIPM_ROLE, locvar_cell_draw_ground) == MAP_CHIP_ROLE_WATER) * 16 - (cbit(CHARA_BIT_SANDBAG, locvar_cell_draw_c) == 1) * 24
													}
												}

                                                preparePicItem cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c), cdata(CDATA_MARK_ITEM_COL, locvar_cell_draw_c)

												if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) > 48 ) {
													gmode 2, chipi(CHIPI_WIDTH, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)), chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c))
													grotate 1, 0, 960, cdata(CDATA_MARK_ITEM_ADJUST_R, locvar_cell_draw_c) * 6.54498469498, chipi(CHIPI_WIDTH, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) / 4 + cdata(CDATA_MARK_ITEM_ADJUST_W, locvar_cell_draw_c) * 2, chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) / 4 + cdata(CDATA_MARK_ITEM_ADJUST_L, locvar_cell_draw_c) * 2
												}
												if ( chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) <= 48 ) {
													gmode 2, chipi(CHIPI_WIDTH, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)), chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c))
													grotate 1, 0, 960, cdata(CDATA_MARK_ITEM_ADJUST_R, locvar_cell_draw_c) * 6.54498469498, chipi(CHIPI_WIDTH, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) / 2 + cdata(CDATA_MARK_ITEM_ADJUST_W, locvar_cell_draw_c) * 2, chipi(CHIPI_HEIGHT, cdata(CDATA_MARK_ITEM_PIC, locvar_cell_draw_c)) / 2 + cdata(CDATA_MARK_ITEM_ADJUST_L, locvar_cell_draw_c) * 2
												}
											}
										}
									}
								}
								if ( cbit(CHARA_BIT_STETHOSCOPE, locvar_cell_draw_c) == 1 | gdata(GDATA_SCOPE) == locvar_cell_draw_c ) {
									if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 0 ) {
										locvar_cell_draw_h = cdata(CDATA_HP, locvar_cell_draw_c) * 30 / cdata(CDATA_MAX_HP, locvar_cell_draw_c)
										if ( locvar_cell_draw_h > 30 ) {
											locvar_cell_draw_h = 30
										}
									}
									else {
										locvar_cell_draw_h = cdata(CDATA_HP, locvar_cell_draw_c) * 15 / cdata(CDATA_MAX_HP, locvar_cell_draw_c)
										if ( locvar_cell_draw_h > 15 ) {
											locvar_cell_draw_h = 15
										}
									}
									if ( locvar_cell_draw_c < MAX_CHARA_FOLLOWER ) {
										if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
											if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 1 ) {
												pos locvar_cell_draw_dx + 9 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 15, locvar_cell_draw_dy + 31
											}
											else {
												pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 31
											}
											gcopy 3, 480 - locvar_cell_draw_h, 517, locvar_cell_draw_h, 3
											if ( cdata(CDATA_HUNGER, locvar_cell_draw_c) > 10000 ) {
												gcopy 3, 1440 - locvar_cell_draw_h, 511, locvar_cell_draw_h, 3
											}
											if ( cdata(CDATA_DIRECTIVE_MODE, locvar_cell_draw_c) == DIRECTIVE_MODE_DEFENSIVE ) {
												pos locvar_cell_draw_dx + 9 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 13, locvar_cell_draw_dy + 25
												gcopy 3, 1410, 517, 9, 6
											}
											if ( cdata(CDATA_DIRECTIVE_MODE, locvar_cell_draw_c) == DIRECTIVE_MODE_INTERCEPT ) {
												pos locvar_cell_draw_dx + 9 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 13, locvar_cell_draw_dy + 25
												gcopy 3, 1420, 517, 9, 6
											}
											if ( cdata(CDATA_DIRECTIVE_MODE, locvar_cell_draw_c) == DIRECTIVE_MODE_TALKING ) {
												pos locvar_cell_draw_dx + 9 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 13, locvar_cell_draw_dy + 25
												gcopy 3, 1430, 517, 9, 6
											}
										}
									}
									else {
										pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 31
										gcopy 3, 480 - locvar_cell_draw_h, 513, locvar_cell_draw_h, 3
									}
								}
								if ( cbit(CHARA_BIT_MAGNETISM_S_POLE, locvar_cell_draw_c) ) {
									pos locvar_cell_draw_dx + 9 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 13, locvar_cell_draw_dy + 25 - 9
									gcopy BUFFER_INF, 1383, 517, 8, 8
								}
								if ( cbit(CHARA_BIT_MAGNETISM_N_POLE, locvar_cell_draw_c) ) {
									pos locvar_cell_draw_dx + 9 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 13, locvar_cell_draw_dy + 25 - 9
									gcopy BUFFER_INF, 1375, 517, 8, 8
								}
								locvar_cell_draw_powsel = 0
								if ( gdata(GDATA_FLAG_MAIN) < 350 ) {
									if ( cdata(CDATA_LEVEL, locvar_cell_draw_c) >= 130 ) {
										locvar_cell_draw_powsel = 100
									}
								}
								if ( gdata(GDATA_FLAG_MAIN) >= 350 ) {
									if ( cdata(CDATA_LEVEL, locvar_cell_draw_c) >= 50 ) {
										locvar_cell_draw_powsel = 100
									}
								}
								if ( locvar_cell_draw_c < MAX_CHARA_FOLLOWER ) {
									locvar_cell_draw_powsel = 100
								}
								if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_ABNORMAL ) {
									locvar_cell_draw_powsel = 100
								}
								locvar_cell_draw_mimi = 0
								if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_CHAOS_MIMIC | cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_MIMIC ) {
									if ( locvar_cell_draw_c >= MAX_CHARA_FOLLOWER ) {
										locvar_cell_draw_mimi = 100
									}
								}
								if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD & locvar_cell_draw_mimi == 0 & (locvar_cell_draw_c >= MAX_CHARA_FOLLOWER | cbit(CHARA_BIT_STETHOSCOPE, locvar_cell_draw_c) == 1 | gdata(GDATA_SCOPE) == locvar_cell_draw_c) ) {
									if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 0 ) {
										locvar_cell_draw_h = cdata(CDATA_POWER_GAUGE, locvar_cell_draw_c) * 30 / 100
										if ( locvar_cell_draw_h > 30 ) {
											locvar_cell_draw_h = 30
										}
									}
									else {
										locvar_cell_draw_h = cdata(CDATA_POWER_GAUGE, locvar_cell_draw_c) * 15 / 100
										if ( locvar_cell_draw_h > 15 ) {
											locvar_cell_draw_h = 15
										}
									}
									if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 1 ) {
										pos locvar_cell_draw_dx + 9 + 15, locvar_cell_draw_dy + 36
									}
									else {
										pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 36
									}
									if ( locvar_cell_draw_powsel == 100 ) {
										if ( cdata(CDATA_POWER_GAUGE, locvar_cell_draw_c) < 98 ) {
											gcopy 3, 1440 - locvar_cell_draw_h, 504, locvar_cell_draw_h, 3
										}
										else {
											gcopy 3, 1440 - locvar_cell_draw_h, 507, locvar_cell_draw_h, 3
										}
									}
									else {
										gcopy 3, 1440 - locvar_cell_draw_h, 531, locvar_cell_draw_h, 3
									}
									if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 0 ) {
										locvar_cell_draw_hg = cdata(CDATA_DRAIN_HP, locvar_cell_draw_c) * 30 / 100
										if ( locvar_cell_draw_hg > 30 ) {
											locvar_cell_draw_hg = 30
										}
									}
									else {
										locvar_cell_draw_hg = cdata(CDATA_DRAIN_HP, locvar_cell_draw_c) * 15 / 100
										if ( locvar_cell_draw_hg > 15 ) {
											locvar_cell_draw_hg = 15
										}
									}
									if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 1 ) {
										pos locvar_cell_draw_dx + 9 + 15, locvar_cell_draw_dy + 39
									}
									else {
										pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 39
									}
									if ( cdata(CDATA_DRAIN_HP, locvar_cell_draw_c) < 100 ) {
										gcopy BUFFER_INF, 1440 - locvar_cell_draw_hg, 588, locvar_cell_draw_hg, 3
									}
									else {
										gcopy BUFFER_INF, 1440 - locvar_cell_draw_hg, 591, locvar_cell_draw_hg, 3
									}
								}
								if ( cdata(CDATA_POWER_GAUGE, locvar_cell_draw_c) > 100 ) {
									if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD & locvar_cell_draw_mimi == 0 & (locvar_cell_draw_c >= MAX_CHARA_FOLLOWER | cbit(CHARA_BIT_STETHOSCOPE, locvar_cell_draw_c) == 1 | gdata(GDATA_SCOPE) == locvar_cell_draw_c) ) {
										if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 0 ) {
											locvar_cell_draw_h = (cdata(CDATA_POWER_GAUGE, locvar_cell_draw_c) - 100) * 30 / 100
											if ( locvar_cell_draw_h > 30 ) {
												locvar_cell_draw_h = 30
											}
										}
										else {
											locvar_cell_draw_h = (cdata(CDATA_POWER_GAUGE, locvar_cell_draw_c) - 100) * 15 / 100
											if ( locvar_cell_draw_h > 15 ) {
												locvar_cell_draw_h = 15
											}
										}
										if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 1 ) {
											pos locvar_cell_draw_dx + 9 + 15, locvar_cell_draw_dy + 36
										}
										else {
											pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 36
										}
										if ( locvar_cell_draw_powsel == 100 ) {
											if ( cdata(CDATA_POWER_GAUGE, locvar_cell_draw_c) < 198 ) {
												gcopy 3, 1440 - locvar_cell_draw_h, 494, locvar_cell_draw_h, 3
											}
											else {
												gcopy 3, 1440 - locvar_cell_draw_h, 497, locvar_cell_draw_h, 3
											}
										}
										else {
											gcopy 3, 1440 - locvar_cell_draw_h, 531, locvar_cell_draw_h, 3
										}
									}
								}
								if ( cbit(CHARA_BIT_STETHOSCOPE, locvar_cell_draw_c) == 1 | gdata(GDATA_SCOPE) == locvar_cell_draw_c ) {
									if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 0 ) {
										locvar_cell_draw_h = cdata(CDATA_MP, locvar_cell_draw_c) * 30 / cdata(CDATA_MAX_MP, locvar_cell_draw_c)
										if ( locvar_cell_draw_h > 30 ) {
											locvar_cell_draw_h = 30
										}
									}
									else {
										locvar_cell_draw_h = cdata(CDATA_MP, locvar_cell_draw_c) * 15 / cdata(CDATA_MAX_MP, locvar_cell_draw_c)
										if ( locvar_cell_draw_h > 15 ) {
											locvar_cell_draw_h = 15
										}
									}
									if ( locvar_cell_draw_c < MAX_CHARA_FOLLOWER ) {
										if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
											if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 1 ) {
												pos locvar_cell_draw_dx + 9 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 15, locvar_cell_draw_dy + 34
											}
											else {
												pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 34
											}
											gcopy 3, 1440 - locvar_cell_draw_h, 528, locvar_cell_draw_h, 2
										}
									}
									else {
										pos locvar_cell_draw_dx + 9, locvar_cell_draw_dy + 34
										gcopy 3, 1440 - locvar_cell_draw_h, 528, locvar_cell_draw_h, 2
									}
								}
								if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 1 ) {
									pos locvar_cell_draw_dx + 20, locvar_cell_draw_dy + 30
									gcopy 3, 1393, 517, 9, 9
								}
								if ( cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(24, 30) ) {
									pos locvar_cell_draw_dx - 24 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 63
									gmode 2, 96, 96
									gcopy 3, 1239, 390
								}
								if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_JALDABAOTH_THE_CHAOS_CHILD ) {
									if ( cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(21, 28) ) {
										pos locvar_cell_draw_dx - 48 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 63
										gmode 2, 144, 96
										gcopy BUFFER_INF, 908 + rnd(3) * 144, 494
									}
								}
								if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_HAND_OF_THE_GOD & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(15, 6) + COLOR_YELLOW * COLOR_TINT_MULT | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_GOLD_SHEEP & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(5, 5) + COLOR_YELLOW * COLOR_TINT_MULT) | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_GOLDEN_ARMOR & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(25, 6) + COLOR_YELLOW * COLOR_TINT_MULT) ) {
									pos locvar_cell_draw_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 15
									gmode 5, inf_tiles, inf_tiles, 50 + rnd(70)
									gcopy 3, 192 + 48 * 7 + rnd(1) * inf_tiles, 704
								}
								if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_GOLDEN_GOLEM & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(0, 7) + COLOR_YELLOW * COLOR_TINT_MULT ) {
									pos locvar_cell_draw_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 35
									gmode 5, inf_tiles, inf_tiles, 100 + rnd(50)
									gcopy 3, 192 + 48 * 7 + rnd(1) * inf_tiles, 704
								}
								if ( cdata(CDATA_PIC, locvar_cell_draw_c) == 656 + COLOR_LIGHT_BLUE * COLOR_TINT_MULT ) {
									pos locvar_cell_draw_dx - 3 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 45
									gmode 5, inf_tiles, inf_tiles, 100 + rnd(50)
									gcopy BUFFER_INF, 192 + 48 * 7 + rnd(1) * inf_tiles, 704
								}
								if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_GOLD_BELL & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(21, 7) + COLOR_YELLOW * COLOR_TINT_MULT | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_PLATINA_BELL & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(21, 7)) ) {
									pos locvar_cell_draw_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 10
									gmode 5, inf_tiles, inf_tiles, 50 + rnd(50)
									gcopy 3, 192 + rnd(1) * inf_tiles, 704
								}
								if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_MOONLIT_PAPILLON & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(23, 23) + COLOR_LIGHT_GREEN * COLOR_TINT_MULT ) {
									pos locvar_cell_draw_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 15
									gmode 5, inf_tiles, inf_tiles, 80 + rnd(40)
									gcopy 3, 192 + 48 * 3 + rnd(1) * inf_tiles, 704
								}
								if ( cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(29, 23) + COLOR_YELLOW * COLOR_TINT_MULT | cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(30, 23) + COLOR_YELLOW * COLOR_TINT_MULT ) {
									pos locvar_cell_draw_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 15
									gmode 5, inf_tiles, inf_tiles, 80 + rnd(40)
									gcopy 3, 192 + 48 * 3 + rnd(1) * inf_tiles, 704
								}
								if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_GOLD_KIWI & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(24, 24) + COLOR_YELLOW * COLOR_TINT_MULT | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_HELL_CRAB & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(6, 7) + COLOR_YELLOW * COLOR_TINT_MULT) ) {
									pos locvar_cell_draw_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 5
									gmode 5, inf_tiles, inf_tiles, 100 + rnd(50)
									gcopy 3, 192 + 48 * 11 + rnd(1) * inf_tiles, 704
								}
								if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_ETHER_GENERATOR & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(29, 15) ) {
									pos locvar_cell_draw_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 48
									gmode 5, inf_tiles, inf_tiles, 50 + rnd(70)
									gcopy 3, 192 + rnd(1) * inf_tiles, 704
								}
								if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_VANSESDA_THE_ANCIENT_FIRE & (cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(18, 17) | cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(20, 19)) ) {
									pos locvar_cell_draw_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 48
									gmode 5, inf_tiles, inf_tiles, 50 + rnd(70)
									gcopy 3, 192 + 48 * 11 + rnd(1) * inf_tiles, 704
								}
								if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_YELLOW_FIRE_DRAGON & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(8, 10) + COLOR_YELLOW * COLOR_TINT_MULT ) {
									pos locvar_cell_draw_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 48
									gmode 5, inf_tiles, inf_tiles, 100 + rnd(50)
									gcopy 3, 192 + 48 * 11 + rnd(1) * inf_tiles, 704
								}
								if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_LAVA_GOLEM & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(19, 19) ) {
									pos locvar_cell_draw_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 15
									gmode 5, inf_tiles, inf_tiles, 50 + rnd(70)
									gcopy 3, 192 + 48 * 11 + rnd(1) * inf_tiles, 704
								}
								if ( cdata(CDATA_PIC, locvar_cell_draw_c) == 390 + COLOR_RED * COLOR_TINT_MULT ) {
									pos locvar_cell_draw_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 25
									gmode 5, inf_tiles, inf_tiles, 100 + rnd(70)
									gcopy BUFFER_INF, 192 + 48 * 1 + rnd(2) * inf_tiles, 704
								}
								if ( cdata(CDATA_PIC, locvar_cell_draw_c) == 867 + COLOR_YELLOW * COLOR_TINT_MULT ) {
									pos locvar_cell_draw_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 25
									gmode 5, inf_tiles, inf_tiles, 100 + rnd(50)
									gcopy BUFFER_INF, 192 + 48 * 11 + rnd(1) * inf_tiles, 704
								}
								if ( cdata(CDATA_PIC, locvar_cell_draw_c) == 1039 + COLOR_YELLOW * COLOR_TINT_MULT ) {
									pos locvar_cell_draw_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 19
									gmode 5, inf_tiles, inf_tiles, 100 + rnd(50)
									gcopy BUFFER_INF, 192 + 48 * 3 + rnd(1) * inf_tiles, 704
								}
								if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_CTHUGHA & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(7, 23) | cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(9, 23) ) {
									pos locvar_cell_draw_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 15
									gmode 5, inf_tiles, inf_tiles, 100 + rnd(70)
									gcopy 3, 192 + 48 * 1 + rnd(2) * inf_tiles, 704
								}
								if ( cbit(CHARA_BIT_BRUSHED, locvar_cell_draw_c) == 1 ) {
									pos locvar_cell_draw_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 15
									gmode 5, inf_tiles, inf_tiles, 30 * cdata(CDATA_BRUSH_LEVEL, locvar_cell_draw_c) + rnd(30)
									gcopy 3, 192 + 48 * 9 + rnd(2) * inf_tiles, 704
								}
								if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_CRYSTALIAN & cdata(CDATA_PIC, locvar_cell_draw_c) >= xy2pic(31, 33) ) {
									pos locvar_cell_draw_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 15
									gmode 5, inf_tiles, inf_tiles, 50 + rnd(50)
									gcopy BUFFER_INF, 192 + 48 * 9 + rnd(2) * inf_tiles, 704
								}
								if ( cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(29, 7) + COLOR_WHITE * COLOR_TINT_MULT ) {
									pos locvar_cell_draw_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 5
									gmode 5, inf_tiles, inf_tiles, 100 + rnd(50)
									gcopy 3, 192 + 48 * 11 + rnd(1) * inf_tiles, 704
								}
								if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_CATERPILLAR_SNIPER & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(14, 30) ) {
									pos locvar_cell_draw_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 5
									gmode 5, inf_tiles, inf_tiles, 100 + rnd(50)
									gcopy 3, 192 + 48 * 11 + rnd(1) * inf_tiles, 704
								}
								if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_INSANE_KUMIROMI & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(4, 13) ) {
									pos locvar_cell_draw_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 18
									gmode 5, inf_tiles, inf_tiles, 100 + rnd(70)
									gcopy 3, 192 + 48 * 11 + rnd(1) * inf_tiles, 704
								}
								if ( cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_THE_ELEMENT & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(1, 15) + COLOR_RED * COLOR_TINT_MULT | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_HYPER_YACATECT & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(0, 15)) | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_BLESSED_JURE & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(6, 12)) | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_DEVASTATE_LULWY & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(30, 11)) | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_BUILDUP_OPATOS & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(3, 13)) | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_DEUS_EX_MANINA & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(18, 13) + COLOR_YELLOW * COLOR_TINT_MULT) | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_GOD_INSIDE_EHEKATL & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(17, 12) + COLOR_BLACK * COLOR_TINT_MULT) | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_YAYAUHQUI_TEZCATLIPOCA & cdata(CDATA_PIC, locvar_cell_draw_c) == 931 + 7 * 1000) | (cdata(CDATA_ID, locvar_cell_draw_c) == CREATURE_ID_JALDABAOTH_THE_CHAOS_CHILD & cdata(CDATA_PIC, locvar_cell_draw_c) == xy2pic(21, 28)) ) {
									pos locvar_cell_draw_dx + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 12, locvar_cell_draw_dy - 40
									gmode 5, inf_tiles, inf_tiles, 100 + rnd(70)
									gcopy 3, 192 + 48 * 11 + rnd(1) * inf_tiles, 704
								}
								if ( cdata(CDATA_SP_EARNED, locvar_cell_draw_c) <= (-1000000) & cdata(CDATA_SP_EARNED, locvar_cell_draw_c) > (-2000000) ) {
									pos locvar_cell_draw_dx, locvar_cell_draw_dy - 5
									gmode 4, inf_tiles, inf_tiles, 157 + rnd(3) * 50
									gcopy BUFFER_INF, 192 + 48 * 20 + rnd(1) * inf_tiles, 704
								}
								if ( cdata(CDATA_SP_EARNED, locvar_cell_draw_c) <= (-2000000) ) {
									pos locvar_cell_draw_dx, locvar_cell_draw_dy - 5
									gmode 4, inf_tiles, inf_tiles, 157 + rnd(3) * 50
									gcopy BUFFER_INF, 192 + 48 * 21 + rnd(1) * inf_tiles, 704
								}
							}
						}
					}
				}
			}
			if ( map(locvar_cell_draw_x, locvar_cell_draw_y, 9) != 0 ) {
				locvar_cell_draw_p = map(locvar_cell_draw_x, locvar_cell_draw_y, 9)
				if ( gdata(GDATA_HOUR) > 17 | gdata(GDATA_HOUR) < 6 | lightdata(LIGHTDATA_TIME, locvar_cell_draw_p) ) {
					if ( mapsync(locvar_cell_draw_x, locvar_cell_draw_y) == msync ) {
						locvar_cell_draw_light -= (6 - limit(dist(cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), locvar_cell_draw_x, locvar_cell_draw_y), 0, 6)) * lightdata(LIGHTDATA_POWER, locvar_cell_draw_p)
						pos locvar_cell_draw_dx, locvar_cell_draw_dy - lightdata(LIGHTDATA_Y, locvar_cell_draw_p)
						gmode 5, inf_tiles, inf_tiles, lightdata(LIGHTDATA_BRIGHT, locvar_cell_draw_p) + rnd(lightdata(LIGHTDATA_FLICK, locvar_cell_draw_p) + 1)
						gcopy 3, 192 + lightdata(LIGHTDATA_PIC, locvar_cell_draw_p) * 48 + rnd(lightdata(LIGHTDATA_ANIM, locvar_cell_draw_p) + 1) * inf_tiles, 704
					}
				}
			}
			if ( locvar_cell_draw_wall == 0 ) {
				if ( locvar_cell_draw_ground != tile_fog ) {
					if ( locvar_cell_draw_y > 0 ) {
						if ( locvar_cell_draw_dy > 48 ) {
							locvar_cell_draw_ground = map(locvar_cell_draw_x, locvar_cell_draw_y - 1, 0)
							if ( chipm(CHIPM_WALL, locvar_cell_draw_ground) ) {
								pos locvar_cell_draw_dx + (locvar_cell_draw_dx < 0) * (-locvar_cell_draw_dx), locvar_cell_draw_dy
								gfini inf_tiles - (locvar_cell_draw_dx > windoww - inf_tiles) * (locvar_cell_draw_dx + inf_tiles - windoww) + (locvar_cell_draw_dx < 0) * locvar_cell_draw_dx, 24
								gfdec2 16, 16, 16
								pos locvar_cell_draw_dx + (locvar_cell_draw_dx < 0) * (-locvar_cell_draw_dx), locvar_cell_draw_dy + 24
								gfini inf_tiles - (locvar_cell_draw_dx > windoww - inf_tiles) * (locvar_cell_draw_dx + inf_tiles - windoww) + (locvar_cell_draw_dx < 0) * locvar_cell_draw_dx, 12
								gfdec2 12, 12, 12
							}
						}
					}
				}
			}
			else {
				gmode 0
				if ( locvar_cell_draw_y > 0 ) {
					locvar_cell_draw_p = map(locvar_cell_draw_x, locvar_cell_draw_y - 1, 2)
					if ( chipm(CHIPM_WALL, locvar_cell_draw_p) != 2 ) {
						if ( locvar_cell_draw_p != tile_fog ) {
							if ( locvar_cell_draw_dy > 20 ) {
								pos locvar_cell_draw_dx, locvar_cell_draw_dy - 12
								gcopy locvar_cell_draw_sel, locvar_cell_draw_ground \ 33 * inf_tiles, locvar_cell_draw_ground / 33 * inf_tiles, inf_tiles - (locvar_cell_draw_dx > windoww - inf_tiles) * (locvar_cell_draw_dx + inf_tiles - windoww), 12
								pos locvar_cell_draw_dx + (locvar_cell_draw_dx < 0) * (-locvar_cell_draw_dx), locvar_cell_draw_dy - 20
								gfini inf_tiles - (locvar_cell_draw_dx > windoww - inf_tiles) * (locvar_cell_draw_dx + inf_tiles - windoww) + (locvar_cell_draw_dx < 0) * locvar_cell_draw_dx, 8
								gfdec2 25, 25, 25
							}
						}
					}
				}
			}
			locvar_cell_draw_dx -= inf_tiles
			locvar_cell_draw_lx++
		loop
		locvar_cell_draw_dy += inf_tiles
		locvar_cell_draw_ly++
	loop
	if ( locvar_cell_draw_light < 25 ) {
		locvar_cell_draw_light = 25
	}
	if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
		repeat 12
			gmode 5, , , 7 + cnt * 2
			locvar_cell_draw_x = (cloud(CLOUD_X, cnt) - cdata(CDATA_X, CHARA_PLAYER) * 48 + sxfix) * 100 / (40 + cnt * 5) + scrturn * 100 / (50 + cnt * 20)
			locvar_cell_draw_y = (cloud(CLOUD_Y, cnt) - cdata(CDATA_Y, CHARA_PLAYER) * 48 + syfix) * 100 / (40 + cnt * 5)
			locvar_cell_draw_x = locvar_cell_draw_x \ (windoww + cloud(CLOUD_WIDTH, cnt)) - cloud(CLOUD_WIDTH, cnt)
			locvar_cell_draw_y = locvar_cell_draw_y \ (inf_very + cloud(CLOUD_HEIGHT, cnt)) - cloud(CLOUD_HEIGHT, cnt)
			locvar_cell_draw_h = cloud(CLOUD_HEIGHT, cnt)
			if ( locvar_cell_draw_y + cloud(CLOUD_HEIGHT, cnt) >= inf_very ) {
				locvar_cell_draw_h = inf_very - locvar_cell_draw_y
			}
			if ( locvar_cell_draw_y < inf_very ) {
				pos locvar_cell_draw_x, locvar_cell_draw_y
				gcopy 2, cloud(CLOUD_PX, cnt), cloud(CLOUD_PY, cnt), cloud(CLOUD_WIDTH, cnt), locvar_cell_draw_h
			}
		loop
	}
	if ( cfg_shadow != 0 ) {
		color 0, 0, 0
		gmode 6, inf_tiles, inf_tiles, locvar_cell_draw_light
		locvar_cell_draw_y = 2
		locvar_cell_draw_dy = inf_screeny
		repeat inf_screenh
			locvar_cell_draw_x = 2
			locvar_cell_draw_dx = inf_screenx
			repeat inf_screenw
				if ( slight(locvar_cell_draw_x, locvar_cell_draw_y) >= 1000 ) {
					pos locvar_cell_draw_dx, locvar_cell_draw_dy
					gcopy 3, 144, 752
				}
				locvar_cell_draw_x++
				locvar_cell_draw_dx += inf_tiles
			loop
			locvar_cell_draw_y++
			locvar_cell_draw_dy += inf_tiles
		loop
		gmode 2
		randomize
		return
	}
	gmode 6, inf_tiles, inf_tiles, locvar_cell_draw_light
	if ( scrollanime == 0 ) {
		locvar_cell_draw_y = 2
		locvar_cell_draw_dy = inf_screeny + locvar_cell_draw_syfix * (scrollp > 3)
		repeat inf_screenh
			locvar_cell_draw_x = 2
			locvar_cell_draw_dx = inf_screenx + locvar_cell_draw_sxfix * (scrollp > 3)
			locvar_cell_draw_cnt2 = cnt
			repeat inf_screenw
				locvar_cell_draw_p = slight(locvar_cell_draw_x, locvar_cell_draw_y)
				if ( locvar_cell_draw_p > 0 ) {
					if ( locvar_cell_draw_p < 300 ) {
						repeat 1 + (deco(2, locvar_cell_draw_p) != 0)
							if ( deco(0, locvar_cell_draw_p) < 0 | cnt ) {
								if ( cnt == 1 ) {
									deco2 = deco(2, locvar_cell_draw_p)
								}
								else {
									deco2 = deco(1, locvar_cell_draw_p)
								}
								repeat 1
									if ( deco2 == 1 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy
										gcopy 3, 0 + 168, 656 + 24, 24, 24
										break
									}
									if ( deco2 == 2 ) {
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 24
										gcopy 3, 0 + 144, 656, 24, 24
										break
									}
									if ( deco2 == 3 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy + 24
										gcopy 3, 0 + 168, 656, 24, 24
										break
									}
									if ( deco2 == 4 ) {
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy
										gcopy 3, 0 + 144, 656 + 24, 24, 24
										break
									}
									if ( deco2 == 5 ) {
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 24
										gcopy 3, 0 + 144, 656, 24, 24
										pos locvar_cell_draw_dx, locvar_cell_draw_dy
										gcopy 3, 0 + 168, 656 + 24, 24, 24
										break
									}
									if ( deco2 == 6 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy + 24
										gcopy 3, 0 + 168, 656, 24, 24
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy
										gcopy 3, 0 + 144, 656 + 24, 24, 24
										break
									}
									if ( deco2 == 7 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy + 24
										gcopy 3, 0 + 168, 656, 24, 24
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 24
										gcopy 3, 0 + 144, 656, 24, 24
										break
									}
									if ( deco2 == 8 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy
										gcopy 3, 0 + 168, 656 + 24, 24, 24
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy
										gcopy 3, 0 + 144, 656 + 24, 24, 24
										break
									}
									if ( deco2 == 9 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy
										gcopy 3, 0 + 168, 656 + 24, 24, 24
										pos locvar_cell_draw_dx, locvar_cell_draw_dy + 24
										gcopy 3, 0 + 168, 656, 24, 24
										break
									}
									if ( deco2 == 10 ) {
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy
										gcopy 3, 0 + 144, 656 + 24, 24, 24
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 24
										gcopy 3, 0 + 144, 656, 24, 24
										break
									}
									if ( deco2 == 20 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy
										gcopy 3, 0, 656 + 48, 24, 48
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy
										gcopy 3, 0 + 120, 656 + 48, 24, 48
										break
									}
									if ( deco2 == 21 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy
										gcopy 3, 0 + 48, 656, 48, 24
										pos locvar_cell_draw_dx, locvar_cell_draw_dy + 24
										gcopy 3, 0 + 48, 656 + 120, 48, 24
										break
									}
									if ( deco2 == 30 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy
										gcopy 3, 0, 656, 48, 24
										pos locvar_cell_draw_dx, locvar_cell_draw_dy + 24
										gcopy 3, 0, 656 + 120, 48, 24
										break
									}
									if ( deco2 == 31 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy
										gcopy 3, 0 + 96, 656, 48, 24
										pos locvar_cell_draw_dx, locvar_cell_draw_dy + 24
										gcopy 3, 0 + 96, 656 + 120, 48, 24
										break
									}
									if ( deco2 == 32 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy
										gcopy 3, 0, 656, 24, 48
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy
										gcopy 3, 0 + 120, 656, 24, 48
										break
									}
									if ( deco2 == 33 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy
										gcopy 3, 0, 656 + 96, 24, 48
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy
										gcopy 3, 0 + 120, 656 + 96, 24, 48
										break
									}
								loop
							}
							else {
								pos locvar_cell_draw_dx, locvar_cell_draw_dy
								gcopy 3, 0 + deco(0, locvar_cell_draw_p) * inf_tiles, 656 + deco(1, locvar_cell_draw_p) * inf_tiles
							}
						loop
					}
					else {
						locvar_cell_draw_p2 = (locvar_cell_draw_p - 1000) \ 16
						locvar_cell_draw_i = 0
						if ( locvar_cell_draw_p2 == 15 ) {
							locvar_cell_draw_p2 = (locvar_cell_draw_p - 1000) \ 256
							if ( locvar_cell_draw_p2 == 127 ) {
								locvar_cell_draw_i = 13
							}
							if ( locvar_cell_draw_p2 == 223 ) {
								locvar_cell_draw_i = 14
							}
							if ( locvar_cell_draw_p2 == 191 ) {
								locvar_cell_draw_i = 15
							}
							if ( locvar_cell_draw_p2 == 239 ) {
								locvar_cell_draw_i = 16
							}
							if ( locvar_cell_draw_p2 == 207 | locvar_cell_draw_p2 == 63 ) {
								locvar_cell_draw_i = 17
							}
						}
						else {
							locvar_cell_draw_i = shadowmap(locvar_cell_draw_p2)
						}
						pos locvar_cell_draw_dx, locvar_cell_draw_dy
						gcopy 3, 144 + locvar_cell_draw_i * inf_tiles, 752
					}
				}
				locvar_cell_draw_x++
				locvar_cell_draw_dx += inf_tiles
			loop
			locvar_cell_draw_y++
			locvar_cell_draw_dy += inf_tiles
		loop
	}
	else {
		locvar_cell_draw_f = 0
		if ( scrollp > 3 | mdata(MDATA_TYPE) == MAP_TYPE_DUNGEON ) {
			locvar_cell_draw_f = 1
		}
		locvar_cell_draw_y = 1
		locvar_cell_draw_dy = inf_screeny + locvar_cell_draw_syfix * locvar_cell_draw_f - 48
		repeat inf_screenh + 2
			if ( locvar_cell_draw_dy <= -inf_tiles | locvar_cell_draw_dy >= windowh - inf_verh ) {
				locvar_cell_draw_dy += inf_tiles
				locvar_cell_draw_y++
				continue
			}
			locvar_cell_draw_x = 1
			locvar_cell_draw_dx = inf_screenx + locvar_cell_draw_sxfix * locvar_cell_draw_f - 48
			repeat inf_screenw + 2
				locvar_cell_draw_p = slight(locvar_cell_draw_x, locvar_cell_draw_y)
				if ( locvar_cell_draw_p > 0 ) {
					if ( locvar_cell_draw_p < 300 ) {
						repeat 1 + (deco(2, locvar_cell_draw_p) != 0)
							if ( deco(0, locvar_cell_draw_p) < 0 | cnt ) {
								if ( cnt == 1 ) {
									deco2 = deco(2, locvar_cell_draw_p)
								}
								else {
									deco2 = deco(1, locvar_cell_draw_p)
								}
								repeat 1
									if ( deco2 == 1 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy
										gcopy 3, 0 + 168, 656 + 24, 24, 24
										break
									}
									if ( deco2 == 2 ) {
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 24
										gcopy 3, 0 + 144, 656, 24, 24
										break
									}
									if ( deco2 == 3 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy + 24
										gcopy 3, 0 + 168, 656, 24, 24
										break
									}
									if ( deco2 == 4 ) {
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy
										gcopy 3, 0 + 144, 656 + 24, 24, 24
										break
									}
									if ( deco2 == 5 ) {
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 24
										gcopy 3, 0 + 144, 656, 24, 24
										pos locvar_cell_draw_dx, locvar_cell_draw_dy
										gcopy 3, 0 + 168, 656 + 24, 24, 24
										break
									}
									if ( deco2 == 6 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy + 24
										gcopy 3, 0 + 168, 656, 24, 24
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy
										gcopy 3, 0 + 144, 656 + 24, 24, 24
										break
									}
									if ( deco2 == 7 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy + 24
										gcopy 3, 0 + 168, 656, 24, 24
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 24
										gcopy 3, 0 + 144, 656, 24, 24
										break
									}
									if ( deco2 == 8 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy
										gcopy 3, 0 + 168, 656 + 24, 24, 24
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy
										gcopy 3, 0 + 144, 656 + 24, 24, 24
										break
									}
									if ( deco2 == 9 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy
										gcopy 3, 0 + 168, 656 + 24, 24, 24
										pos locvar_cell_draw_dx, locvar_cell_draw_dy + 24
										gcopy 3, 0 + 168, 656, 24, 24
										break
									}
									if ( deco2 == 10 ) {
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy
										gcopy 3, 0 + 144, 656 + 24, 24, 24
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy + 24
										gcopy 3, 0 + 144, 656, 24, 24
										break
									}
									if ( deco2 == 20 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy
										gcopy 3, 0, 656 + 48, 24, 48
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy
										gcopy 3, 0 + 120, 656 + 48, 24, 48
										break
									}
									if ( deco2 == 21 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy
										gcopy 3, 0 + 48, 656, 48, 24
										pos locvar_cell_draw_dx, locvar_cell_draw_dy + 24
										gcopy 3, 0 + 48, 656 + 120, 48, 24
										break
									}
									if ( deco2 == 30 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy
										gcopy 3, 0, 656, 48, 24
										pos locvar_cell_draw_dx, locvar_cell_draw_dy + 24
										gcopy 3, 0, 656 + 120, 48, 24
										break
									}
									if ( deco2 == 31 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy
										gcopy 3, 0 + 96, 656, 48, 24
										pos locvar_cell_draw_dx, locvar_cell_draw_dy + 24
										gcopy 3, 0 + 96, 656 + 120, 48, 24
										break
									}
									if ( deco2 == 32 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy
										gcopy 3, 0, 656, 24, 48
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy
										gcopy 3, 0 + 120, 656, 24, 48
										break
									}
									if ( deco2 == 33 ) {
										pos locvar_cell_draw_dx, locvar_cell_draw_dy
										gcopy 3, 0, 656 + 96, 24, 48
										pos locvar_cell_draw_dx + 24, locvar_cell_draw_dy
										gcopy 3, 0 + 120, 656 + 96, 24, 48
										break
									}
								loop
							}
							else {
								pos locvar_cell_draw_dx, locvar_cell_draw_dy
								gcopy 3, 0 + deco(0, locvar_cell_draw_p) * inf_tiles, 656 + deco(1, locvar_cell_draw_p) * inf_tiles
							}
						loop
					}
					else {
						locvar_cell_draw_p2 = (locvar_cell_draw_p - 1000) \ 16
						locvar_cell_draw_i = 0
						if ( locvar_cell_draw_p2 == 15 ) {
							locvar_cell_draw_p2 = (locvar_cell_draw_p - 1000) \ 256
							if ( locvar_cell_draw_p2 == 127 ) {
								locvar_cell_draw_i = 13
							}
							if ( locvar_cell_draw_p2 == 223 ) {
								locvar_cell_draw_i = 14
							}
							if ( locvar_cell_draw_p2 == 191 ) {
								locvar_cell_draw_i = 15
							}
							if ( locvar_cell_draw_p2 == 239 ) {
								locvar_cell_draw_i = 16
							}
							if ( locvar_cell_draw_p2 == 207 | locvar_cell_draw_p2 == 63 ) {
								locvar_cell_draw_i = 17
							}
						}
						else {
							locvar_cell_draw_i = shadowmap(locvar_cell_draw_p2)
						}
						pos locvar_cell_draw_dx, locvar_cell_draw_dy
						gcopy 3, 144 + locvar_cell_draw_i * inf_tiles, 752, 48, 48
					}
				}
				locvar_cell_draw_x++
				locvar_cell_draw_dx += inf_tiles
			loop
			locvar_cell_draw_y++
			locvar_cell_draw_dy += inf_tiles
		loop
	}
	gmode 2
	randomize
	return

#deffunc cell_itemlist int cell_itemlist_arg1, int cell_itemlist_arg2
	listmax = 0
	inv_getheader -1
	repeat invrange, invhead
		if ( inv(INV_ITEM_NUM, cnt) > 0 ) {
			if ( inv(INV_ITEM_X, cnt) == cell_itemlist_arg1 & inv(INV_ITEM_Y, cnt) == cell_itemlist_arg2 ) {
				list(0, listmax) = cnt
				listmax++
			}
		}
	loop
	return rtval

#deffunc cell_itemoncell int cell_itemoncell_arg1, int cell_itemoncell_arg2
	rtval = 0, 0
	inv_getheader -1
	repeat invrange, invhead
		if ( inv(INV_ITEM_NUM, cnt) > 0 ) {
			if ( inv(INV_ITEM_X, cnt) == cell_itemoncell_arg1 & inv(INV_ITEM_Y, cnt) == cell_itemoncell_arg2 ) {
				rtval++
				rtval(1) = cnt
			}
		}
	loop
	return rtval

#defcfunc fov_los int fov_los_x1, int fov_los_y1, int fov_los_x2, int fov_los_y2
	if (fov_los_x1 >= mdata(MDATA_WIDTH) | fov_los_y1 >= mdata(MDATA_HEIGHT) | fov_los_x2 >= mdata(MDATA_WIDTH) | fov_los_y2 >= mdata(MDATA_HEIGHT) ) {
		return 0
	}
	dy@modfov = fov_los_y2 - fov_los_y1
	dx@modfov = fov_los_x2 - fov_los_x1
	ay@modfov = abs(dy@modfov)
	ax@modfov = abs(dx@modfov)
	if ( ax@modfov < 2 & ay@modfov < 2 ) {
		return 1
	}
	if ( dx@modfov == 0 ) {
		if ( dy@modfov > 0 ) {
			ty@modfov = fov_los_y1 + 1
*fov_los_WHILE1
			if ( ty@modfov < fov_los_y2 == 0 ) {
				goto *fov_los_WEND1
			}
			if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
				if ( map(fov_los_x1, ty@modfov, 8) != 0 ) {
					if ( mef(0, map(fov_los_x1, ty@modfov, 8) - 1) == 9 ) {
						if ( gdata(STARTING_GDATA_FLAG + 348) == 0 ) {
							return 0
						}
					}
				}
			}
			ty@modfov++
			goto *fov_los_WHILE1
*fov_los_WEND1
		}
		else {
			ty@modfov = fov_los_y1 - 1
*fov_los_WHILE2
			if ( ty@modfov > fov_los_y2 == 0 ) {
				goto *fov_los_WEND2
			}
			if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
				if ( map(fov_los_x1, ty@modfov, 8) != 0 ) {
					if ( mef(0, map(fov_los_x1, ty@modfov, 8) - 1) == 9 ) {
						if ( gdata(STARTING_GDATA_FLAG + 348) == 0 ) {
							return 0
						}
					}
				}
			}
			ty@modfov--
			goto *fov_los_WHILE2
		}
	}
*fov_los_WEND2
	if ( dy@modfov == 0 ) {
		if ( dx@modfov > 0 ) {
			tx@modfov = fov_los_x1 + 1
*fov_los_WHILE3
			if ( tx@modfov < fov_los_x2 == 0 ) {
				goto *fov_los_WEND3
			}
			if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
				if ( map(tx@modfov, fov_los_y1, 8) != 0 ) {
					if ( mef(0, map(tx@modfov, fov_los_y1, 8) - 1) == 9 ) {
						if ( gdata(STARTING_GDATA_FLAG + 348) == 0 ) {
							return 0
						}
					}
				}
			}
			tx@modfov++
			goto *fov_los_WHILE3
*fov_los_WEND3
		}
		else {
			tx@modfov = fov_los_x1 - 1
*fov_los_WHILE4
			if ( tx@modfov > fov_los_x2 == 0 ) {
				goto *fov_los_WEND4
			}
			if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
				if ( map(tx@modfov, fov_los_y1, 8) != 0 ) {
					if ( mef(0, map(tx@modfov, fov_los_y1, 8) - 1) == 9 ) {
						if ( gdata(STARTING_GDATA_FLAG + 348) == 0 ) {
							return 0
						}
					}
				}
			}
			tx@modfov--
			goto *fov_los_WHILE4
		}
	}
*fov_los_WEND4
	if ( dx@modfov == 0 ) {
		if ( dy@modfov > 0 ) {
			ty@modfov = fov_los_y1 + 1
*fov_los_WHILE5
			if ( ty@modfov < fov_los_y2 == 0 ) {
				goto *fov_los_WEND5
			}
			if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
				if ( chipm(CHIPM_ATTRIB, map(fov_los_x1, ty@modfov, 0)) & CHIPM_ATTRIB_CANT_SEE ) {
					return 0
				}
			}
			if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
				if ( chipm(CHIPM_ATTRIB, map(fov_los_x1, ty@modfov, 6) \ 1000) & CHIPM_ATTRIB_CANT_SEE ) {
					return 0
				}
			}
			ty@modfov++
			goto *fov_los_WHILE5
*fov_los_WEND5
		}
		else {
			ty@modfov = fov_los_y1 - 1
*fov_los_WHILE6
			if ( ty@modfov > fov_los_y2 == 0 ) {
				goto *fov_los_WEND6
			}
			if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
				if ( chipm(CHIPM_ATTRIB, map(fov_los_x1, ty@modfov, 0)) & CHIPM_ATTRIB_CANT_SEE ) {
					return 0
				}
			}
			if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
				if ( chipm(CHIPM_ATTRIB, map(fov_los_x1, ty@modfov, 6) \ 1000) & CHIPM_ATTRIB_CANT_SEE ) {
					return 0
				}
			}
			ty@modfov--
			goto *fov_los_WHILE6
		}
*fov_los_WEND6
		return 1
	}
	if ( dy@modfov == 0 ) {
		if ( dx@modfov > 0 ) {
			tx@modfov = fov_los_x1 + 1
*fov_los_WHILE7
			if ( tx@modfov < fov_los_x2 == 0 ) {
				goto *fov_los_WEND7
			}
			if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
				if ( chipm(CHIPM_ATTRIB, map(tx@modfov, fov_los_y1, 0)) & CHIPM_ATTRIB_CANT_SEE ) {
					return 0
				}
			}
			if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
				if ( chipm(CHIPM_ATTRIB, map(tx@modfov, fov_los_y1, 6) \ 1000) & CHIPM_ATTRIB_CANT_SEE ) {
					return 0
				}
			}
			tx@modfov++
			goto *fov_los_WHILE7
*fov_los_WEND7
		}
		else {
			tx@modfov = fov_los_x1 - 1
*fov_los_WHILE8
			if ( tx@modfov > fov_los_x2 == 0 ) {
				goto *fov_los_WEND8
			}
			if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
				if ( chipm(CHIPM_ATTRIB, map(tx@modfov, fov_los_y1, 0)) & CHIPM_ATTRIB_CANT_SEE ) {
					return 0
				}
			}
			if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
				if ( chipm(CHIPM_ATTRIB, map(tx@modfov, fov_los_y1, 6) \ 1000) & CHIPM_ATTRIB_CANT_SEE ) {
					return 0
				}
			}
			tx@modfov--
			goto *fov_los_WHILE8
		}
*fov_los_WEND8
		return 1
	}
	if ( dx@modfov < 0 ) {
		sx@modfov = -1
	}
	else {
		sx@modfov = 1
	}
	if ( dy@modfov < 0 ) {
		sy@modfov = -1
	}
	else {
		sy@modfov = 1
	}
	if ( ax@modfov == 1 ) {
		if ( ay@modfov == 2 ) {
			if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
				if ( map(fov_los_x1, fov_los_y1 + sy@modfov, 8) != 0 ) {
					if ( mef(0, map(fov_los_x1, fov_los_y1 + sy@modfov, 8) - 1) == 9 ) {
						if ( gdata(STARTING_GDATA_FLAG + 348) == 0 ) {
							return 0
						}
					}
				}
			}
			if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
				if ( (chipm(CHIPM_ATTRIB, map(fov_los_x1, fov_los_y1 + sy@modfov, 0)) & CHIPM_ATTRIB_CANT_SEE) == 0 ) {
					if ( (chipm(CHIPM_ATTRIB, map(fov_los_x1, fov_los_y1 + sy@modfov, 6) \ 1000) & CHIPM_ATTRIB_CANT_SEE) == 0 ) {
						return 1
					}
				}
			}
		}
	}
	else {
		if ( ay@modfov == 1 ) {
			if ( ax@modfov == 2 ) {
				if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
					if ( map(fov_los_x1 + sx@modfov, fov_los_y1, 8) != 0 ) {
						if ( mef(0, map(fov_los_x1 + sx@modfov, fov_los_y1, 8) - 1) == 9 ) {
							if ( gdata(STARTING_GDATA_FLAG + 348) == 0 ) {
								return 0
							}
						}
					}
				}
				if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
					if ( (chipm(CHIPM_ATTRIB, map(fov_los_x1 + sx@modfov, fov_los_y1, 0)) & CHIPM_ATTRIB_CANT_SEE) == 0 ) {
						if ( (chipm(CHIPM_ATTRIB, map(fov_los_x1 + sx@modfov, fov_los_y1, 6) \ 1000) & CHIPM_ATTRIB_CANT_SEE) == 0 ) {
							return 1
						}
					}
				}
			}
		}
	}
	f2@modfov = ax@modfov * ay@modfov
	f1@modfov = f2@modfov << 1
	if ( ax@modfov >= ay@modfov ) {
		qy@modfov = ay@modfov * ay@modfov
		m@modfov = qy@modfov << 1
		tx@modfov = fov_los_x1 + sx@modfov
		if ( qy@modfov == f2@modfov ) {
			ty@modfov = fov_los_y1 + sy@modfov
			qy@modfov -= f1@modfov
		}
		else {
			ty@modfov = fov_los_y1
		}
*fov_los_WHILE9
		if ( fov_los_x2 - tx@modfov == 0 ) {
			goto *fov_los_WEND9
		}
		if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
			if ( chipm(CHIPM_ATTRIB, map(tx@modfov, ty@modfov, 0)) & CHIPM_ATTRIB_CANT_SEE ) {
				return 0
			}
		}
		if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
			if ( chipm(CHIPM_ATTRIB, map(tx@modfov, ty@modfov, 6) \ 1000) & CHIPM_ATTRIB_CANT_SEE ) {
				return 0
			}
		}
		if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
			if ( map(tx@modfov, ty@modfov, 8) != 0 ) {
				if ( mef(0, map(tx@modfov, ty@modfov, 8) - 1) == 9 ) {
					if ( gdata(STARTING_GDATA_FLAG + 348) == 0 ) {
						return 0
					}
				}
			}
		}
		qy@modfov += m@modfov
		if ( qy@modfov < f2@modfov ) {
			tx@modfov += sx@modfov
		}
		else {
			if ( qy@modfov > f2@modfov ) {
				ty@modfov += sy@modfov
				if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
					if ( chipm(CHIPM_ATTRIB, map(tx@modfov, ty@modfov, 0)) & CHIPM_ATTRIB_CANT_SEE ) {
						return 0
					}
				}
				if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
					if ( chipm(CHIPM_ATTRIB, map(tx@modfov, ty@modfov, 6) \ 1000) & CHIPM_ATTRIB_CANT_SEE ) {
						return 0
					}
				}
				if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
					if ( map(tx@modfov, ty@modfov, 8) != 0 ) {
						if ( mef(0, map(tx@modfov, ty@modfov, 8) - 1) == 9 ) {
							if ( gdata(STARTING_GDATA_FLAG + 348) == 0 ) {
								return 0
							}
						}
					}
				}
				qy@modfov -= f1@modfov
				tx@modfov += sx@modfov
			}
			else {
				ty@modfov += sy@modfov
				qy@modfov -= f1@modfov
				tx@modfov += sx@modfov
			}
		}
		goto *fov_los_WHILE9
*fov_los_WEND9
	}
	else {
		qx@modfov = ax@modfov * ax@modfov
		m@modfov = qx@modfov << 1
		ty@modfov = fov_los_y1 + sy@modfov
		if ( qx@modfov == f2@modfov ) {
			tx@modfov = fov_los_x1 + sx@modfov
			qx@modfov -= f1@modfov
		}
		else {
			tx@modfov = fov_los_x1
		}
*fov_los_WHILE10
		if ( fov_los_y2 - ty@modfov == 0 ) {
			goto *fov_los_WEND10
		}
		if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
			if ( chipm(CHIPM_ATTRIB, map(tx@modfov, ty@modfov, 0)) & CHIPM_ATTRIB_CANT_SEE ) {
				return 0
			}
		}
		if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
			if ( chipm(CHIPM_ATTRIB, map(tx@modfov, ty@modfov, 6) \ 1000) & CHIPM_ATTRIB_CANT_SEE ) {
				return 0
			}
		}
		if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
			if ( map(tx@modfov, ty@modfov, 8) != 0 ) {
				if ( mef(0, map(tx@modfov, ty@modfov, 8) - 1) == 9 ) {
					if ( gdata(STARTING_GDATA_FLAG + 348) == 0 ) {
						return 0
					}
				}
			}
		}
		qx@modfov += m@modfov
		if ( qx@modfov < f2@modfov ) {
			ty@modfov += sy@modfov
		}
		else {
			if ( qx@modfov > f2@modfov ) {
				tx@modfov += sx@modfov
				if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
					if ( chipm(CHIPM_ATTRIB, map(tx@modfov, ty@modfov, 0)) & CHIPM_ATTRIB_CANT_SEE ) {
						return 0
					}
				}
				if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
					if ( chipm(CHIPM_ATTRIB, map(tx@modfov, ty@modfov, 6) \ 1000) & CHIPM_ATTRIB_CANT_SEE ) {
						return 0
					}
				}
				if ( gdata(GDATA_SENSE_OBJECT) != 10 ) {
					if ( map(tx@modfov, ty@modfov, 8) != 0 ) {
						if ( mef(0, map(tx@modfov, ty@modfov, 8) - 1) == 9 ) {
							if ( gdata(STARTING_GDATA_FLAG + 348) == 0 ) {
								return 0
							}
						}
					}
				}
				qx@modfov -= f1@modfov
				ty@modfov += sy@modfov
			}
			else {
				tx@modfov += sx@modfov
				qx@modfov -= f1@modfov
				ty@modfov += sy@modfov
			}
		}
		goto *fov_los_WHILE10
	}
*fov_los_WEND10
	return 1

#deffunc get_route int get_route_arg1, int get_route_arg2, int get_route_arg3, int get_route_arg4
	dim route, 2, 100
	dy@modfov = get_route_arg4 - get_route_arg2
	dx@modfov = get_route_arg3 - get_route_arg1
	if ( get_route_arg4 == get_route_arg2 ) {
		if ( get_route_arg3 == get_route_arg1 ) {
			route(0, 0) = 2, 0
			maxroute = 1
			return 1
		}
	}
	ay@modfov = abs(dy@modfov)
	ax@modfov = abs(dx@modfov)
	p@modfov = 0
	if ( dx@modfov == 0 ) {
		if ( dy@modfov > 0 ) {
			ty@modfov = get_route_arg2 + 1
			route(0, p@modfov) = 2, 1
			p@modfov++
*get_route_WHILE1
			if ( ty@modfov < get_route_arg4 == 0 ) {
				goto *get_route_WEND1
			}
			if ( chipm(CHIPM_ATTRIB, map(get_route_arg1, ty@modfov, 0)) & CHIPM_ATTRIB_CANT_SEE ) {
				return 0
			}
			if ( chipm(CHIPM_ATTRIB, map(get_route_arg1, ty@modfov, 6) \ 1000) & CHIPM_ATTRIB_CANT_SEE ) {
				return 0
			}
			ty@modfov++
			route(0, p@modfov) = 2, 1
			p@modfov++
			goto *get_route_WHILE1
*get_route_WEND1
		}
		else {
			ty@modfov = get_route_arg2 - 1
			route(0, p@modfov) = 2, -1
			p@modfov++
*get_route_WHILE2
			if ( ty@modfov > get_route_arg4 == 0 ) {
				goto *get_route_WEND2
			}
			if ( chipm(CHIPM_ATTRIB, map(get_route_arg1, ty@modfov, 0)) & CHIPM_ATTRIB_CANT_SEE ) {
				return 0
			}
			if ( chipm(CHIPM_ATTRIB, map(get_route_arg1, ty@modfov, 6) \ 1000) & CHIPM_ATTRIB_CANT_SEE ) {
				return 0
			}
			ty@modfov--
			route(0, p@modfov) = 2, -1
			p@modfov++
			goto *get_route_WHILE2
		}
*get_route_WEND2
		maxroute = p@modfov
		return 1
	}
	if ( dy@modfov == 0 ) {
		if ( dx@modfov > 0 ) {
			tx@modfov = get_route_arg1 + 1
			route(0, p@modfov) = 1, 1
			p@modfov++
*get_route_WHILE3
			if ( tx@modfov < get_route_arg3 == 0 ) {
				goto *get_route_WEND3
			}
			if ( chipm(CHIPM_ATTRIB, map(tx@modfov, get_route_arg2, 0)) & CHIPM_ATTRIB_CANT_SEE ) {
				return 0
			}
			if ( chipm(CHIPM_ATTRIB, map(tx@modfov, get_route_arg2, 6) \ 1000) & CHIPM_ATTRIB_CANT_SEE ) {
				return 0
			}
			tx@modfov++
			route(0, p@modfov) = 1, 1
			p@modfov++
			goto *get_route_WHILE3
*get_route_WEND3
		}
		else {
			tx@modfov = get_route_arg1 - 1
			route(0, p@modfov) = 1, -1
			p@modfov++
*get_route_WHILE4
			if ( tx@modfov > get_route_arg3 == 0 ) {
				goto *get_route_WEND4
			}
			if ( chipm(CHIPM_ATTRIB, map(tx@modfov, get_route_arg2, 0)) & CHIPM_ATTRIB_CANT_SEE ) {
				return 0
			}
			if ( chipm(CHIPM_ATTRIB, map(tx@modfov, get_route_arg2, 6) \ 1000) & CHIPM_ATTRIB_CANT_SEE ) {
				return 0
			}
			tx@modfov--
			route(0, p@modfov) = 1, -1
			p@modfov++
			goto *get_route_WHILE4
		}
*get_route_WEND4
		maxroute = p@modfov
		return 1
	}
	if ( dx@modfov < 0 ) {
		sx@modfov = -1
	}
	else {
		sx@modfov = 1
	}
	if ( dy@modfov < 0 ) {
		sy@modfov = -1
	}
	else {
		sy@modfov = 1
	}
	if ( ax@modfov == 1 ) {
		if ( ay@modfov == 2 ) {
			if ( (chipm(CHIPM_ATTRIB, map(get_route_arg1, get_route_arg2 + sy@modfov, 0)) & CHIPM_ATTRIB_CANT_SEE) == 0 ) {
				if ( (chipm(CHIPM_ATTRIB, map(get_route_arg1, get_route_arg2 + sy@modfov, 6) \ 1000) & CHIPM_ATTRIB_CANT_SEE) == 0 ) {
					p@modfov = 0
					route(0, p@modfov) = 2, sy@modfov
					p@modfov++
					route(0, p@modfov) = 2, 0
					p@modfov++
					route(0, p@modfov) = 1, sx@modfov
					p@modfov++
					maxroute = p@modfov
					return 1
				}
			}
		}
	}
	else {
		if ( ay@modfov == 1 ) {
			if ( ax@modfov == 2 ) {
				if ( (chipm(CHIPM_ATTRIB, map(get_route_arg1 + sx@modfov, get_route_arg2, 0)) & CHIPM_ATTRIB_CANT_SEE) == 0 ) {
					if ( (chipm(CHIPM_ATTRIB, map(get_route_arg1 + sx@modfov, get_route_arg2, 6) \ 1000) & CHIPM_ATTRIB_CANT_SEE) == 0 ) {
						route(0, p@modfov) = 1, sx@modfov
						p@modfov++
						route(0, p@modfov) = 1, 0
						p@modfov++
						route(0, p@modfov) = 2, sy@modfov
						p@modfov++
						maxroute = p@modfov
						return 1
					}
				}
			}
		}
	}
	f2@modfov = ax@modfov * ay@modfov
	f1@modfov = f2@modfov << 1
	if ( ax@modfov >= ay@modfov ) {
		qy@modfov = ay@modfov * ay@modfov
		m@modfov = qy@modfov << 1
		tx@modfov = get_route_arg1 + sx@modfov
		route(0, p@modfov) = 1, sx@modfov
		p@modfov++
		if ( qy@modfov == f2@modfov ) {
			ty@modfov = get_route_arg2 + sy@modfov
			route(0, p@modfov) = 2, sy@modfov
			p@modfov++
			qy@modfov -= f1@modfov
		}
		else {
			ty@modfov = get_route_arg2
		}
*get_route_WHILE5
		if ( get_route_arg3 - tx@modfov == 0 ) {
			goto *get_route_WEND5
		}
		if ( chipm(CHIPM_ATTRIB, map(tx@modfov, ty@modfov, 0)) & CHIPM_ATTRIB_CANT_SEE ) {
			return 0
		}
		if ( chipm(CHIPM_ATTRIB, map(tx@modfov, ty@modfov, 6) \ 1000) & CHIPM_ATTRIB_CANT_SEE ) {
			return 0
		}
		qy@modfov += m@modfov
		if ( qy@modfov < f2@modfov ) {
			tx@modfov += sx@modfov
			route(0, p@modfov) = 1, sx@modfov
			p@modfov++
		}
		else {
			if ( qy@modfov > f2@modfov ) {
				ty@modfov += sy@modfov
				route(0, p@modfov) = 2, sy@modfov
				p@modfov++
				if ( chipm(CHIPM_ATTRIB, map(tx@modfov, ty@modfov, 0)) & CHIPM_ATTRIB_CANT_SEE ) {
					return 0
				}
				if ( chipm(CHIPM_ATTRIB, map(tx@modfov, ty@modfov, 6) \ 1000) & CHIPM_ATTRIB_CANT_SEE ) {
					return 0
				}
				qy@modfov -= f1@modfov
				tx@modfov += sx@modfov
				route(0, p@modfov) = 1, sx@modfov
				p@modfov++
			}
			else {
				ty@modfov += sy@modfov
				route(0, p@modfov) = 2, sy@modfov
				p@modfov++
				qy@modfov -= f1@modfov
				tx@modfov += sx@modfov
				route(0, p@modfov) = 1, sx@modfov
				p@modfov++
			}
		}
		goto *get_route_WHILE5
*get_route_WEND5
	}
	else {
		qx@modfov = ax@modfov * ax@modfov
		m@modfov = qx@modfov << 1
		ty@modfov = get_route_arg2 + sy@modfov
		route(0, p@modfov) = 2, sy@modfov
		p@modfov++
		if ( qx@modfov == f2@modfov ) {
			tx@modfov = get_route_arg1 + sx@modfov
			route(0, p@modfov) = 1, sx@modfov
			p@modfov++
			qx@modfov -= f1@modfov
		}
		else {
			tx@modfov = get_route_arg1
		}
*get_route_WHILE6
		if ( get_route_arg4 - ty@modfov == 0 ) {
			goto *get_route_WEND6
		}
		if ( chipm(CHIPM_ATTRIB, map(tx@modfov, ty@modfov, 0)) & CHIPM_ATTRIB_CANT_SEE ) {
			return 0
		}
		if ( chipm(CHIPM_ATTRIB, map(tx@modfov, ty@modfov, 6) \ 1000) & CHIPM_ATTRIB_CANT_SEE ) {
			return 0
		}
		qx@modfov += m@modfov
		if ( qx@modfov < f2@modfov ) {
			ty@modfov += sy@modfov
			route(0, p@modfov) = 2, sy@modfov
			p@modfov++
		}
		else {
			if ( qx@modfov > f2@modfov ) {
				tx@modfov += sx@modfov
				route(0, p@modfov) = 1, sx@modfov
				p@modfov++
				if ( chipm(CHIPM_ATTRIB, map(tx@modfov, ty@modfov, 0)) & CHIPM_ATTRIB_CANT_SEE ) {
					return 0
				}
				if ( chipm(CHIPM_ATTRIB, map(tx@modfov, ty@modfov, 6) \ 1000) & CHIPM_ATTRIB_CANT_SEE ) {
					return 0
				}
				qx@modfov -= f1@modfov
				ty@modfov += sy@modfov
				route(0, p@modfov) = 2, sy@modfov
				p@modfov++
			}
			else {
				tx@modfov += sx@modfov
				route(0, p@modfov) = 1, sx@modfov
				p@modfov++
				qx@modfov -= f1@modfov
				ty@modfov += sy@modfov
				route(0, p@modfov) = 2, sy@modfov
				p@modfov++
			}
		}
		goto *get_route_WHILE6
	}
*get_route_WEND6
	maxroute = p@modfov
	return 1

#deffunc display_customkey str display_customkey_arg1, int display_customkey_arg2, int display_customkey_arg3, int
	redraw 0
	gsel 3
	gmode 0
	font lang(cfg_font1, cfg_font2), 15 - en * 2, 0
	pos 624, 30
	gcopy 3, 0, 30, 24, 18
	pos 629, 31
	color 50, 60, 80
	bmes "" + display_customkey_arg1, 250, 240, 230
	gmode 2, inf_tiles, inf_tiles
	gsel 0
	pos display_customkey_arg2, display_customkey_arg3
	gcopy 3, 624, 30, 24, 18
	return

#deffunc display_key int display_key_arg1, int display_key_arg2, int display_key_arg3
	pos display_key_arg1, display_key_arg2
	gcopy 3, display_key_arg3 * 24 + 72, 30, 24, 18
	return

#deffunc cursor_check
	if ( key == key_north ) {
		snd SOUNDLIST_CURSOR1
		cs--
		if ( cs < 0 ) {
			cs = keyrange - 1
			if ( cs < 0 ) {
				cs = 0
			}
		}
	}
	if ( key == key_south ) {
		snd SOUNDLIST_CURSOR1
		cs++
		if ( cs >= keyrange ) {
			cs = 0
		}
	}
	if ( key == key_west ) {
		key = key_pagedown
	}
	if ( key == key_east ) {
		key = key_pageup
	}
	if ( cs >= keyrange ) {
		cs_bk = -1
		cs = keyrange - 1
		if ( cs < 0 ) {
			cs = 0
		}
	}
	if ( key == key_enter ) {
		key = key_list(cs)
	}
	return

#deffunc lenfix var lenfix_arg1, int lenfix_arg2
	locvar_lenfix_p = lenfix_arg2 - strlen(lenfix_arg1)
	if ( locvar_lenfix_p < 1 ) {
		locvar_lenfix_p = 1
	}
	repeat locvar_lenfix_p
		lenfix_arg1 += " "
	loop
	return

#deffunc showscroll int showscroll_arg1, int showscroll_arg2, int showscroll_arg3, int showscroll_arg4
	repeat 2
		if ( cnt == 0 ) {
			if ( windowshadow == 0 ) {
				continue
			}
			else {
				gmode 6, , , 80
				locvar_showscroll_x = showscroll_arg1 + 3
				locvar_showscroll_y = showscroll_arg2 + 3
				windowshadow = 0
			}
		}
		else {
			gmode 2
			locvar_showscroll_x = showscroll_arg1
			locvar_showscroll_y = showscroll_arg2
		}
		locvar_showscroll_x3 = showscroll_arg3 + locvar_showscroll_x - showscroll_arg3 \ 8 - 64
		locvar_showscroll_y3 = showscroll_arg4 + locvar_showscroll_y - showscroll_arg4 \ 8 - 64
		repeat showscroll_arg3 / 8
			if ( cnt < 8 ) {
				if ( cnt == 0 ) {
					pos locvar_showscroll_x, locvar_showscroll_y
					gcopy 7, 0, 0, 64, 48
					pos locvar_showscroll_x, locvar_showscroll_y3
					gcopy 7, 0, 144, 64, 48
				}
				continue
			}
			if ( cnt < showscroll_arg3 / 8 - 8 ) {
				pos cnt * 8 + locvar_showscroll_x, locvar_showscroll_y
				gcopy 7, (cnt - 8) \ 18 * 8 + 64, 0, 8, 48
				pos cnt * 8 + locvar_showscroll_x, locvar_showscroll_y3
				gcopy 7, (cnt - 8) \ 18 * 8 + 64, 144, 8, 48
				continue
			}
			pos locvar_showscroll_x3, locvar_showscroll_y
			gcopy 7, 208, 0, 64, 48
			pos locvar_showscroll_x3, locvar_showscroll_y3
			gcopy 7, 208, 144, 64, 48
			break
		loop
		repeat showscroll_arg4 / 8 - 14
			locvar_showscroll_cnt2 = cnt
			repeat showscroll_arg3 / 8
				if ( cnt == 0 ) {
					pos locvar_showscroll_x, locvar_showscroll_cnt2 * 8 + locvar_showscroll_y + 48
					gcopy 7, 0, locvar_showscroll_cnt2 \ 12 * 8 + 48, 64, 8
					continue
				}
				if ( cnt < showscroll_arg3 / 8 - 15 ) {
					pos cnt * 8 + locvar_showscroll_x + 56, locvar_showscroll_cnt2 * 8 + locvar_showscroll_y + 48
					gcopy 7, cnt \ 18 * 8 + 64, locvar_showscroll_cnt2 \ 12 * 8 + 48, 8, 8
					continue
				}
				pos locvar_showscroll_x3, locvar_showscroll_cnt2 * 8 + locvar_showscroll_y + 48
				gcopy 7, 208, locvar_showscroll_cnt2 \ 12 * 8 + 48, 64, 8
				break
			loop
		loop
	loop
	if ( s != "" ) {
		pos locvar_showscroll_x + 40, locvar_showscroll_y + showscroll_arg4 - 67 - showscroll_arg4 \ 8
		gcopy 3, 96, 360, 24, 16
		color 194, 173, 161
		line locvar_showscroll_x + 60, locvar_showscroll_y + showscroll_arg4 - 68 - showscroll_arg4 \ 8, locvar_showscroll_x + showscroll_arg3 - 40, locvar_showscroll_y + showscroll_arg4 - 68 - showscroll_arg4 \ 8
		color 224, 213, 191
		line locvar_showscroll_x + 60, locvar_showscroll_y + showscroll_arg4 - 69 - showscroll_arg4 \ 8, locvar_showscroll_x + showscroll_arg3 - 40, locvar_showscroll_y + showscroll_arg4 - 69 - showscroll_arg4 \ 8
		font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0
		color 0, 0, 0
		pos locvar_showscroll_x + 68, locvar_showscroll_y + showscroll_arg4 - 63 - showscroll_arg4 \ 8
		mes s
		if ( pagesize != 0 ) {
			s = "Page." + (page + 1) + "/" + (pagemax + 1)
			font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1
			pos locvar_showscroll_x + showscroll_arg3 - strlen(s) * 7 - 40, locvar_showscroll_y + showscroll_arg4 - 63 - showscroll_arg4 \ 8
			mes s
		}
	}
	return

#deffunc window int window_arg1, int window_arg2, int window_arg3, int window_arg4, int, int window_arg5
	if ( window_arg5 == (-1) ) {
		gmode 6, , , 80
		color 0, 0, 0
	}
	else {
		gmode 2
	}
	locvar_window_dx = 0
	locvar_window_dy = 48
	locvar_window_x3 = window_arg3 + window_arg1 - window_arg3 \ 8 - 64
	locvar_window_y3 = window_arg4 + window_arg2 - window_arg4 \ 8 - 64
	if ( locvar_window_y3 < window_arg2 + 14 ) {
		locvar_window_y3 = window_arg2 + 14
	}
	repeat window_arg3 / 8
		if ( cnt < 8 ) {
			if ( cnt == 0 ) {
				pos window_arg1, window_arg2
				gcopy 3, locvar_window_dx, locvar_window_dy, 64, 48
				pos window_arg1, locvar_window_y3
				gcopy 3, locvar_window_dx, locvar_window_dy + 144, 64, 48
			}
			continue
		}
		if ( cnt < window_arg3 / 8 - 8 ) {
			pos cnt * 8 + window_arg1, window_arg2
			gcopy 3, (cnt - 8) \ 18 * 8 + locvar_window_dx + 36, locvar_window_dy, 8, 48
			pos cnt * 8 + window_arg1, locvar_window_y3
			gcopy 3, (cnt - 8) \ 18 * 8 + locvar_window_dx + 54, locvar_window_dy + 144, 8, 48
			continue
		}
		pos locvar_window_x3, window_arg2
		gcopy 3, locvar_window_dx + 208, locvar_window_dy, 56, 48
		pos locvar_window_x3, locvar_window_y3
		gcopy 3, locvar_window_dx + 208, locvar_window_dy + 144, 56, 48
		break
	loop
	locvar_window_p = window_arg4 / 8 - 14
	if ( locvar_window_p < 0 ) {
		locvar_window_p = 0
	}
	repeat locvar_window_p
		locvar_window_cnt2 = cnt
		repeat window_arg3 / 8
			if ( cnt == 0 ) {
				pos window_arg1, locvar_window_cnt2 * 8 + window_arg2 + 48
				gcopy 3, locvar_window_dx, locvar_window_cnt2 \ 12 * 8 + locvar_window_dy + 48, 64, 8
				continue
			}
			if ( cnt < window_arg3 / 8 - 15 ) {
				pos cnt * 8 + window_arg1 + 56, locvar_window_cnt2 * 8 + window_arg2 + 48
				gcopy 3, cnt \ 18 * 8 + locvar_window_dx + 64, locvar_window_cnt2 \ 12 * 8 + locvar_window_dy + 48, 8, 8
				continue
			}
			pos locvar_window_x3, locvar_window_cnt2 * 8 + window_arg2 + 48
			gcopy 3, locvar_window_dx + 208, locvar_window_cnt2 \ 12 * 8 + locvar_window_dy + 48, 56, 8
			break
		loop
	loop
	gmode 2
	return

#deffunc window2 int window2_arg1, int window2_arg2, int window2_arg3, int window2_arg4, int window2_arg5, int window2_arg6
	locvar_window2_dx = 0
	locvar_window2_dy = 240
	locvar_window2_x2 = window2_arg3
	locvar_window2_y2 = window2_arg4
	if ( locvar_window2_x2 < 32 ) {
		locvar_window2_x2 = 32
	}
	if ( locvar_window2_y2 < 24 ) {
		locvar_window2_y2 = 24
	}
	locvar_window2_x3 = window2_arg1 + locvar_window2_x2 / 16 * 16 - 16
	locvar_window2_y3 = window2_arg2 + locvar_window2_y2 / 16 * 16 - 16
	if ( window2_arg6 == 0 ) {
		pos window2_arg1 + 4, window2_arg2 + 4
		gzoom locvar_window2_x2 - 6, locvar_window2_y2 - 8, 3, 24, 72, 228, 144
	}
	if ( window2_arg6 == 1 ) {
		pos window2_arg1 + 4, window2_arg2 + 4
		gzoom locvar_window2_x2 - 6, locvar_window2_y2 - 8, 3, 24, 72, 228, 144
		pos window2_arg1 + 4, window2_arg2 + 4
		gfini locvar_window2_x2 - 4, locvar_window2_y2 - 4
		gfdec2 195, 205, 195
	}
	if ( window2_arg6 == 2 ) {
		pos window2_arg1 + 4, window2_arg2 + 4
		gzoom locvar_window2_x2 - 6, locvar_window2_y2 - 8, 3, 24, 72, 228, 144
		pos window2_arg1 + 4, window2_arg2 + 4
		gfini locvar_window2_x2 - 4, locvar_window2_y2 - 4
		gfdec2 210, 215, 205
	}
	if ( window2_arg6 == 3 ) {
		pos window2_arg1 + 4, window2_arg2 + 4
		gzoom locvar_window2_x2 - 6, locvar_window2_y2 - 8, 3, 24, 72, 228, 144
		pos window2_arg1 + 4, window2_arg2 + 4
		gfini locvar_window2_x2 - 4, locvar_window2_y2 - 4
		gfdec2 10, 13, 16
	}
	if ( window2_arg6 == 4 ) {
		pos window2_arg1 + 4, window2_arg2 + 4
		gzoom locvar_window2_x2 - 6, locvar_window2_y2 - 8, 3, 24, 72, 228, 144
		pos window2_arg1 + 4, window2_arg2 + 4
		gfini locvar_window2_x2 - 4, locvar_window2_y2 - 4
		gfdec2 195, 205, 195
	}
	if ( window2_arg6 == 6 ) {
		pos window2_arg1 + locvar_window2_x2 / 2, window2_arg2 + locvar_window2_y2 / 2
		gmode 4, 228, 144, 180
		grotate 3, 24, 72, 0, locvar_window2_x2 - 4, locvar_window2_y2 - 4
	}
	gmode 2, 16, 16
	repeat locvar_window2_x2 / 16 - 2
		pos cnt * 16 + window2_arg1 + 16, window2_arg2
		gcopy 3, window2_arg5 * 48 + locvar_window2_dx + 16, locvar_window2_dy
		pos cnt * 16 + window2_arg1 + 16, window2_arg2 + locvar_window2_y2 - 16
		gcopy 3, window2_arg5 * 48 + locvar_window2_dx + 16, locvar_window2_dy + 32
	loop
	pos locvar_window2_x3, window2_arg2
	gcopy 3, window2_arg5 * 48 + locvar_window2_dx + 16, locvar_window2_dy, locvar_window2_x2 \ 16, 16
	pos locvar_window2_x3, window2_arg2 + locvar_window2_y2 - 16
	gcopy 3, window2_arg5 * 48 + locvar_window2_dx + 16, locvar_window2_dy + 32, locvar_window2_x2 \ 16, 16
	locvar_window2_p = locvar_window2_y2 / 16 - 2
	if ( locvar_window2_p < 0 ) {
		locvar_window2_p = 0
	}
	repeat locvar_window2_p
		pos window2_arg1, cnt * 16 + window2_arg2 + 16
		gcopy 3, window2_arg5 * 48 + locvar_window2_dx, locvar_window2_dy + 16
		pos window2_arg1 + locvar_window2_x2 - 16, cnt * 16 + window2_arg2 + 16
		gcopy 3, window2_arg5 * 48 + locvar_window2_dx + 32, locvar_window2_dy + 16
	loop
	pos window2_arg1, locvar_window2_y3
	gcopy 3, window2_arg5 * 48 + locvar_window2_dx, locvar_window2_dy + 16, 16, locvar_window2_y2 \ 16
	pos window2_arg1 + locvar_window2_x2 - 16, locvar_window2_y3
	gcopy 3, window2_arg5 * 48 + locvar_window2_dx + 32, locvar_window2_dy + 16, 16, locvar_window2_y2 \ 16
	pos window2_arg1, window2_arg2
	gcopy 3, window2_arg5 * 48 + locvar_window2_dx, locvar_window2_dy
	pos window2_arg1, window2_arg2 + locvar_window2_y2 - 16
	gcopy 3, window2_arg5 * 48 + locvar_window2_dx, locvar_window2_dy + 32
	pos window2_arg1 + locvar_window2_x2 - 16, window2_arg2
	gcopy 3, window2_arg5 * 48 + locvar_window2_dx + 32, locvar_window2_dy
	pos window2_arg1 + locvar_window2_x2 - 16, window2_arg2 + locvar_window2_y2 - 16
	gcopy 3, window2_arg5 * 48 + locvar_window2_dx + 32, locvar_window2_dy + 32
	if ( window2_arg6 == 5 ) {
		pos window2_arg1 + 2, window2_arg2 + 2
		gzoom locvar_window2_x2 - 4, locvar_window2_y2 - 5, 3, 24, 72, 228, 144
		pos window2_arg1 + 2, window2_arg2 + 2
		gfini locvar_window2_x2 - 4, locvar_window2_y2 - 4
		gfdec2 195, 205, 195
	}
	return

#deffunc display_window2 int display_window2_arg1, int display_window2_arg2, int display_window2_arg3, int display_window2_arg4, int display_window2_arg5, int display_window2_arg6
	gmode 2
	pos display_window2_arg1, display_window2_arg2
	gcopy display_window2_arg5, 0, 0, display_window2_arg3, display_window2_arg4
	font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1
	color 0, 0, 0
	if ( s != "" ) {
		pos display_window2_arg1 + display_window2_arg3 - strlen(s) * 7 - 140, display_window2_arg2 + display_window2_arg4 - 24 - display_window2_arg4 \ 8 + display_window2_arg6
		mes s
	}
	if ( pagesize != 0 ) {
		s = "Page." + (page + 1) + "/" + (pagemax + 1)
		pos display_window2_arg1 + display_window2_arg3 - strlen(s) * 7 - 40, display_window2_arg2 + display_window2_arg4 - 24 - display_window2_arg4 \ 8 + display_window2_arg6
		mes s
	}
	return

#deffunc display_window int display_window_arg1, int display_window_arg2, int display_window_arg3, int display_window_arg4, int display_window_arg5, int display_window_arg6
	if ( windowshadow == 1 ) {
		window display_window_arg1 + 4, display_window_arg2 + 4, display_window_arg3, display_window_arg4 - display_window_arg4 \ 8, 0, -1
		windowshadow = 0
	}
	window display_window_arg1, display_window_arg2, display_window_arg3, display_window_arg4 - display_window_arg4 \ 8, 0, 0
	if ( s != "" ) {
		window2 display_window_arg1 + 34, display_window_arg2 - 4, 45 * display_window_arg3 / 100 + limit(strlen(s) * 8 - 120, 0, 200), 32, 1, 1
	}
	gmode 2
	pos display_window_arg1 + 30 + display_window_arg5, display_window_arg2 + display_window_arg4 - 47 - display_window_arg4 \ 8
	gcopy 3, 96, 360, 24, 16
	color 194, 170, 146
	line display_window_arg1 + 50 + display_window_arg5, display_window_arg2 + display_window_arg4 - 48 - display_window_arg4 \ 8, display_window_arg1 + display_window_arg3 - 40, display_window_arg2 + display_window_arg4 - 48 - display_window_arg4 \ 8
	color 234, 220, 188
	line display_window_arg1 + 50 + display_window_arg5, display_window_arg2 + display_window_arg4 - 49 - display_window_arg4 \ 8, display_window_arg1 + display_window_arg3 - 40, display_window_arg2 + display_window_arg4 - 49 - display_window_arg4 \ 8
	font lang(cfg_font1, cfg_font2), 15 + en - en * 2, 0
	color 0, 0, 0
	pos display_window_arg1 + 45 * display_window_arg3 / 200 + 34 - strlen(s) * 4 + limit(strlen(s) * 8 - 120, 0, 200) / 2, display_window_arg2 + 4 + vfix
	color 20, 10, 0
	bmes s, 255, 255, 255
	font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0
	color 0, 0, 0
	pos display_window_arg1 + 58 + display_window_arg5, display_window_arg2 + display_window_arg4 - 43 - display_window_arg4 \ 8
	mes s(1)
	if ( pagesize != 0 ) {
		s = "Page." + (page + 1) + "/" + (pagemax + 1)
		font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1
		pos display_window_arg1 + display_window_arg3 - strlen(s) * 7 - 40 - display_window_arg6, display_window_arg2 + display_window_arg4 - 65 - display_window_arg4 \ 8
		mes s
	}
	wx = display_window_arg1
	wy = display_window_arg2
	ww = display_window_arg3
	wh = display_window_arg4
	return

#deffunc display_note str display_note_arg1, int display_note_arg2
	font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1
	pos wx + ww - strlen(display_note_arg1) * 7 - 140 - display_note_arg2, wy + wh - 65 - wh \ 8
	mes display_note_arg1
	return

#deffunc display_topic str display_topic_arg1, int display_topic_arg2, int display_topic_arg3, int
	font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1
	color 0, 0, 0
	pos display_topic_arg2, display_topic_arg3 + 7
	gcopy 3, 120, 360, 24, 16
	pos display_topic_arg2 + 26, display_topic_arg3 + 8
	mes display_topic_arg1
	color 0, 0, 0
	line display_topic_arg2 + 22, display_topic_arg3 + 21, display_topic_arg2 + strlen(display_topic_arg1) * 7 + 36, display_topic_arg3 + 21
	return

#deffunc display_msg int display_msg_arg1, int display_msg_arg2
	msgkeep = display_msg_arg2
	msgclear = 1
	msgy = display_msg_arg1
	redraw 0
	return

#defcfunc id_crlf var id_crlf_arg1
	char@crlf = "\n"
	if ( instr(id_crlf_arg1, 0, char@crlf) >= 0 ) {
		return 0
	}
	char@crlf = " "
	poke char@crlf, 0, 13
	if ( instr(id_crlf_arg1, 0, char@crlf) >= 0 ) {
		return 1
	}
	poke char@crlf, 0, 10
	if ( instr(id_crlf_arg1, 0, char@crlf) >= 0 ) {
		return 2
	}
	return 100

#deffunc conv_crlf var conv_crlf_arg1, int conv_crlf_arg2
	if ( strlen(conv_crlf_arg1) <= 0 ) {
		return
	}
	if ( conv_crlf_arg2 > 2 | conv_crlf_arg2 < 0 ) {
		return
	}
	cur_type@crlf = id_crlf(conv_crlf_arg1)
	if ( cur_type@crlf == 100 ) {
		return
	}
	if ( cur_type@crlf == 0 ) {
		if ( conv_crlf_arg2 == 0 ) {
			return
		}
	}
	if ( cur_type@crlf == 1 ) {
		if ( conv_crlf_arg2 == 1 ) {
			return
		}
		cur_code@crlf = 13
	}
	if ( cur_type@crlf == 2 ) {
		if ( conv_crlf_arg2 == 2 ) {
			return
		}
		cur_code@crlf = 10
	}
	if ( conv_crlf_arg2 == 0 ) {
		new_crlf@crlf = "\n"
	}
	if ( conv_crlf_arg2 == 1 ) {
		new_crlf@crlf = " "
		poke new_crlf@crlf, 0, 13
	}
	if ( conv_crlf_arg2 == 2 ) {
		new_crlf@crlf = " "
		poke new_crlf@crlf, 0, 10
	}
	tail@crlf = strmid(conv_crlf_arg1, -1, 2)
	if ( tail@crlf == "\n" ) {
		flag@crlf = 1
		goto *conv_crlf_@
	}
	tail@crlf = strmid(tail@crlf, -1, 1)
	char@crlf = ""
	poke char@crlf, 0, 13
	if ( tail@crlf == char@crlf ) {
		flag@crlf = 1
		goto *conv_crlf_@
	}
	char@crlf = ""
	poke char@crlf, 0, 10
	if ( tail@crlf == char@crlf ) {
		flag@crlf = 1
		goto *conv_crlf_@
	}
	flag@crlf = 0
*conv_crlf_@
	i@crlf = 0
	tmpbuf@crlf = ""
	len@crlf = strlen(conv_crlf_arg1)
	repeat
		if ( cur_type@crlf == 0 ) {
			getstr tmpstr@crlf, conv_crlf_arg1, i@crlf
		}
		else {
			getstr tmpstr@crlf, conv_crlf_arg1, i@crlf, cur_code@crlf
		}
		i@crlf += strsize
		if ( i@crlf >= len@crlf ) {
			if ( flag@crlf ) {
				tmpbuf@crlf += tmpstr@crlf + new_crlf@crlf
			}
			else {
				tmpbuf@crlf += tmpstr@crlf
			}
			break
		}
		else {
			tmpbuf@crlf += tmpstr@crlf + new_crlf@crlf
		}
	loop
	conv_crlf_arg1 = tmpbuf@crlf
	return

#deffunc rm_crlf var rm_crlf_arg1
	crlfs@crlf = 0, 13, 10
	repeat 3
		crlftype@crlf = cnt
		i@crlf = 0
		tmpbuf@crlf = ""
		len@crlf = strlen(rm_crlf_arg1)
		repeat
			if ( i@crlf >= len@crlf ) {
				break
			}
			getstr tmpstr@crlf, rm_crlf_arg1, i@crlf, crlfs@crlf(crlftype@crlf)
			i@crlf += strsize
			tmpbuf@crlf += tmpstr@crlf
		loop
		rm_crlf_arg1 = tmpbuf@crlf
	loop
	return

#defcfunc role int role_arg1, int role_arg2, int role_arg3
	locvar_role_d = 0
	if ( role_arg1 < 1 ) {
		role_arg1 = 1
	}
	if ( role_arg2 < 1 ) {
		role_arg2 = 1
	}
	repeat role_arg1
		locvar_role_d += rnd(role_arg2) + 1
	loop
	return locvar_role_d + role_arg3

#defcfunc rolemax int rolemax_arg1, int rolemax_arg2, int rolemax_arg3
	return rolemax_arg1 * rolemax_arg2 + rolemax_arg3

#deffunc page_save
	pagebk = page
	csprev = cs
	pagesaved = 1
	return

#deffunc page_load
	if ( pagesaved == 1 ) {
		page = pagebk
		cs = csprev
		pagesaved = 0
	}
	return

#deffunc fileadd str fileadd_arg1, int fileadd_arg2
	if ( fileadd_arg2 == 0 ) {
		locvar_fileadd_q = "*", "#"
	}
	else {
		locvar_fileadd_q = "#", "*"
	}
	notesel filemod
	locvar_fileadd_p = instr(filemod, 0, fileadd_arg1)
	if ( locvar_fileadd_p != (-1) ) {
		if ( strmid(filemod, locvar_fileadd_p - 1, 1) == locvar_fileadd_q(1) ) {
			cnvstow locvar_fileadd_a, locvar_fileadd_q
			poke filemod, locvar_fileadd_p - 1, locvar_fileadd_a
		}
		noteunsel
		return
	}
	if ( fileadd_arg2 != 0 ) {
		noteadd locvar_fileadd_q + fileadd_arg1
		noteunsel
		return
	}
	noteadd locvar_fileadd_q + fileadd_arg1
	noteunsel
	return

#deffunc arrayfile
	notesel tmp
	tmp = ""
	if ( fread == 1 ) {
		exist file
		if ( strsize != (-1) ) {
			noteload file
		}
	}
	if ( fmode == "qname" ) {
		fidx = 0
		repeat QDATA_MAX_CLIENT
			if ( fread == 0 ) {
				noteadd qname(cnt), fidx
			}
			if ( fread == 1 ) {
				noteget qname(cnt), fidx
			}
			fidx++
		loop
	}
	if ( fmode == "gdatan" ) {
		fidx = 0
		repeat MAX_GDATAN
			if ( fread == 0 ) {
				noteadd gdatan(cnt), fidx
			}
			if ( fread == 1 ) {
				noteget gdatan(cnt), fidx
			}
			fidx++
		loop
	}
	if ( fmode == "mdatan" ) {
		fidx = 0
		repeat MAX_MDATAN
			if ( fread == 0 ) {
				noteadd mdatan(cnt), fidx
			}
			if ( fread == 1 ) {
				noteget mdatan(cnt), fidx
			}
			fidx++
		loop
	}
	if ( fmode == "cdatan1" ) {
		fidx = 0
		cdatanfix = 0
		if ( noteinfo(0) < 300 ) {
			cdatanfix = 1
		}
		repeat MAX_CHARA_SAVE
			cnt2 = cnt
			repeat MAX_CDATAN
				if ( fread == 0 ) {
					noteadd cdatan(cnt, cnt2), fidx
				}
				if ( fread == 1 ) {
					if ( cdatanfix ) {
						if ( cnt > 4 ) {
							break
						}
					}
					noteget cdatan(cnt, cnt2), fidx
				}
				fidx++
			loop
		loop
	}
	if ( fmode == "cdatan2" ) {
		fidx = 0
		cdatanfix = 0
		if ( noteinfo(0) < 1000 ) {
			cdatanfix = 1
		}
		repeat MAX_CHARA_TOTAL - MAX_CHARA_SAVE, MAX_CHARA_SAVE
			cnt2 = cnt
			repeat MAX_CDATAN
				if ( fread == 0 ) {
					noteadd cdatan(cnt, cnt2), fidx
				}
				if ( fread == 1 ) {
					if ( cdatanfix ) {
						if ( cnt > 4 ) {
							break
						}
					}
					noteget cdatan(cnt, cnt2), fidx
				}
				fidx++
			loop
		loop
	}
	if ( fmode == "cdatan3" ) {
		fidx = 0
		cdatanfix = 0
		if ( noteinfo(0) < 6 ) {
			cdatanfix = 1
		}
		repeat MAX_CDATAN
			if ( fread == 0 ) {
				noteadd cdatan(cnt, tg), fidx
			}
			if ( fread == 1 ) {
				if ( cdatanfix ) {
					if ( cnt > 4 ) {
						break
					}
				}
				noteget cdatan(cnt, tg), fidx
			}
			fidx++
		loop
	}
	if ( fmode == "invn1" ) {
		fidx = 0
		repeat RANGE_INV1
			cnt2 = cnt
			repeat MAX_ITEMN
				if ( fread == 0 ) {
					noteadd invn(cnt, cnt2), fidx
				}
				if ( fread == 1 ) {
					noteget invn(cnt, cnt2), fidx
				}
				fidx++
			loop
		loop
	}
	if ( fmode == "invn2" ) {
		fidx = 0
		repeat MAX_INV_DATA - RANGE_INV1, RANGE_INV1
			cnt2 = cnt
			repeat MAX_ITEMN
				if ( fread == 0 ) {
					noteadd invn(cnt, cnt2), fidx
				}
				if ( fread == 1 ) {
					noteget invn(cnt, cnt2), fidx
				}
				fidx++
			loop
		loop
	}
	if ( fread == 0 ) {
		notesave file
		if ( export == 0 ) {
			fileadd file
		}
	}
	export = 0
	return

#deffunc validatetmp str validatetmp_arg1, int validatetmp_arg2
	exist validatetmp_arg1
	if ( strsize == (-1) ) {
		locvar_validatetmp_p = instr(filemod, 0, validatetmp_arg1)
		if ( locvar_validatetmp_p != (-1) & strmid(filemod, locvar_validatetmp_p - 1, 1) == "#" ) {
			return
		}
		locvar_validatetmp_save_file = exedir + "save\\" + playerid + "\\" + getpath(validatetmp_arg1, 8)
		exist locvar_validatetmp_save_file
		if ( strsize != (-1) & validatetmp_arg2 == 0 ) {
			bcopy locvar_validatetmp_save_file, validatetmp_arg1
		}
	}
	return

#deffunc zopenwrapper var zopenwrapper_arg1, str zopenwrapper_arg2, int zopenwrapper_arg3, int zopenwrapper_arg4
	validatetmp zopenwrapper_arg2
	zOpen zopenwrapper_arg1, zopenwrapper_arg2, zopenwrapper_arg3, zopenwrapper_arg4
	return

#deffunc existwrapper str existwrapper_arg1
	validatetmp existwrapper_arg1, 1
	return

#deffunc deletewrapper str deletewrapper_arg1
	exist deletewrapper_arg1
	if ( strsize != (-1) ) {
		delete deletewrapper_arg1
	}
	return

#deffunc arrayfilewrapper
	if ( fread == 1 ) {
		validatetmp file
	}
	arrayfile
	return

#deffunc dirlistwrapper var dirlistwrapper_arg1, str dirlistwrapper_arg2
	dirlist locvar_dirlistwrapper_buf, exedir + "save\\" + playerid + "\\" + getpath(dirlistwrapper_arg2, 8)
	notesel locvar_dirlistwrapper_buf
	repeat stat
		noteget locvar_dirlistwrapper_file, cnt
		validatetmp exedir + "tmp\\" + locvar_dirlistwrapper_file
	loop
	noteunsel
	dirlist dirlistwrapper_arg1, dirlistwrapper_arg2, locvar_dirlistwrapper_mode
	return

#deffunc fmode13replacer int fmode13replacer_arg1
	locvar_fmode13replacer_mask = "*_" + fmode13replacer_arg1 + "_*.*"
	dirlist locvar_fmode13replacer_buf, exedir + "save\\" + playerid + "\\" + locvar_fmode13replacer_mask
	locvar_fmode13replacer_list = locvar_fmode13replacer_buf
	locvar_fmode13replacer_num = stat
	dirlist locvar_fmode13replacer_buf, exedir + "tmp\\" + locvar_fmode13replacer_mask
	locvar_fmode13replacer_list += locvar_fmode13replacer_buf
	locvar_fmode13replacer_num += stat
	if ( locvar_fmode13replacer_num != 0 ) {
		notesel locvar_fmode13replacer_list
		repeat locvar_fmode13replacer_num
			noteget locvar_fmode13replacer_file, cnt
			locvar_fmode13replacer_file = exedir + "tmp\\" + locvar_fmode13replacer_file
			deletewrapper locvar_fmode13replacer_file
			fileadd locvar_fmode13replacer_file, 1
		loop
		noteunsel
	}
	return

#defcfunc del_str str del_str_arg1, str del_str_arg2
	locvar_del_str_s = del_str_arg1
	repeat
		if ( instr(locvar_del_str_s, 0, del_str_arg2) == (-1) ) {
			break
		}
		locvar_del_str_s = strmid(locvar_del_str_s, 0, instr(locvar_del_str_s, 0, del_str_arg2)) + strmid(locvar_del_str_s, instr(locvar_del_str_s, 0, del_str_arg2) + strlen(del_str_arg2), 100)
	loop
	return locvar_del_str_s

#deffunc cnv_str var cnv_str_arg1, str cnv_str_arg2, str cnv_str_arg3
	repeat
		locvar_cnv_str_s3 = getpath(cnv_str_arg1, 16)
		locvar_cnv_str_p = instr(locvar_cnv_str_s3, 0, cnv_str_arg2)
		if ( locvar_cnv_str_p == (-1) ) {
			break
		}
		cnv_str_arg1 = strmid(cnv_str_arg1, 0, locvar_cnv_str_p) + lang(cnv_str_arg3, cnv_str_arg3) + strmid(cnv_str_arg1, locvar_cnv_str_p + strlen(cnv_str_arg2), 300)
	loop
	return cnv_str_arg1

#deffunc fix_wish var fix_wish_arg1
	cnv_str fix_wish_arg1, "の剥製", ""
	cnv_str fix_wish_arg1, "剥製", ""
	cnv_str fix_wish_arg1, "のはく製", ""
	cnv_str fix_wish_arg1, "はく製", ""
	cnv_str fix_wish_arg1, "のカード", ""
	cnv_str fix_wish_arg1, "カード", ""
	cnv_str fix_wish_arg1, "card ", ""
	cnv_str fix_wish_arg1, "figure ", ""
	cnv_str fix_wish_arg1, "card", ""
	cnv_str fix_wish_arg1, "figure", ""
	return

#deffunc fix_input_chat var fix_input_chat_arg1
	cnv_str fix_input_chat_arg1, " ", "+"
	cnv_str fix_input_chat_arg1, "%", "per"
	cnv_str fix_input_chat_arg1, "&", "and"
	cnv_str fix_input_chat_arg1, "<", ""
	cnv_str fix_input_chat_arg1, ">", ""
	return

#deffunc fix_input_chat2 var fix_input_chat2_arg1
	cnv_str fix_input_chat2_arg1, "fucking", "nyoro~n"
	cnv_str fix_input_chat2_arg1, "fuck", "nyou talk funny"
	return

#deffunc cnv_filestr var cnv_filestr_arg1
	cnv_str cnv_filestr_arg1, "\"", "_"
	cnv_str cnv_filestr_arg1, "\\", "_"
	cnv_str cnv_filestr_arg1, "<", "_"
	cnv_str cnv_filestr_arg1, ">", "_"
	cnv_str cnv_filestr_arg1, "/", "_"
	cnv_str cnv_filestr_arg1, "?", "_"
	cnv_str cnv_filestr_arg1, "|", "_"
	cnv_str cnv_filestr_arg1, "*", "_"
	return

#deffunc imeset int imeset_arg1
	himc@ime_control = ImmGetContext(hwnd)
	ImmSetOpenStatus himc@ime_control, imeset_arg1
	ImmReleaseContext hwnd, himc@ime_control
	return

#defcfunc imeget
	himc@ime_control = ImmGetContext(hwnd)
	imesw@ime_control = ImmGetOpenStatus(himc@ime_control)
	ImmReleaseContext hwnd, himc@ime_control
	return imesw@ime_control

#deffunc _fdialog array _fdialog_arg1, int _fdialog_arg2, array _fdialog_arg3, str _fdialog_arg4, str _fdialog_arg5
	mref _stat@filedialog, 64
	mref _refstr@filedialog, 65
	p1_len@filedialog = length(_fdialog_arg1)
	p3_len@filedialog = length(_fdialog_arg3)
	if ( p1_len@filedialog != p3_len@filedialog | (_fdialog_arg2 != 16 & _fdialog_arg2 != 17) ) {
		_stat@filedialog = 0
		return
	}
	dim szfilename@filedialog, 260
	szfilename@filedialog = _fdialog_arg5
	dim szinitdir@filedialog, 260
	szinitdir@filedialog = _fdialog_arg4
	szappfilter@filedialog = ""
	repeat p1_len@filedialog
		szappfilter@filedialog += _fdialog_arg3(cnt) + " (*." + _fdialog_arg1(cnt) + ")@*." + _fdialog_arg1(cnt) + "@"
	loop
	szappfilter@filedialog += "ALL files (*.*)@*.*@"
	start@filedialog = 0
	repeat
		await 0
		mutch@filedialog = instr(szappfilter@filedialog, start@filedialog, "@")
		if ( mutch@filedialog == (-1) ) {
			break
		}
		poke szappfilter@filedialog, start@filedialog + mutch@filedialog, 0
		start@filedialog += mutch@filedialog + 1
	loop
	dim ofn@filedialog, 19
	ofn@filedialog(0) = 76
	ofn@filedialog(1) = hwnd
	ofn@filedialog(2) = hinstance
	ofn@filedialog(3) = varptr(szappfilter@filedialog)
	ofn@filedialog(4) = 0
	ofn@filedialog(5) = 0
	ofn@filedialog(6) = 0
	ofn@filedialog(7) = varptr(szfilename@filedialog)
	ofn@filedialog(8) = 260
	ofn@filedialog(9) = 0
	ofn@filedialog(10) = 0
	ofn@filedialog(11) = varptr(szinitdir@filedialog)
	ofn@filedialog(12) = 0
	ofn@filedialog(13) = 4098
	if ( _fdialog_arg2 == 16 ) {
		GetOpenFileNameA varptr(ofn@filedialog)
	}
	if ( _fdialog_arg2 == 17 ) {
		GetSaveFileNameA varptr(ofn@filedialog)
	}
	_stat@filedialog = stat
	_refstr@filedialog = szfilename@filedialog
	return

#deffunc gmes str gmes_arg1
	; This function now takes DPI-scaled coordinates.
	locvar_gmes_m = ""
	locvar_gmes_msg = "" + gmes_arg1 + "$end"
	locvar_gmes_i = 0
	locvar_gmes_xorg = gmesx
	locvar_gmes_size = 14
	locvar_gmes_col = gmescol, gmescol(1), gmescol(2), 180, 160, 140
	locvar_gmes_lim = gmesx + gmesw

	font lang(cfg_font1, cfg_font2), locvar_gmes_size - en * 2, 0
	repeat
		locvar_gmes_p = peek(locvar_gmes_msg, locvar_gmes_i)
		locvar_gmes_brwait = 0
		if ( locvar_gmes_p >= 129 & locvar_gmes_p <= 159 | locvar_gmes_p >= 224 & locvar_gmes_p <= 252 ) {
			locvar_gmes_p = 2
		}
		else {
			locvar_gmes_p = 1
		}
		locvar_gmes_m = strmid(locvar_gmes_msg, locvar_gmes_i, locvar_gmes_p)
		locvar_gmes_i += locvar_gmes_p
		if ( locvar_gmes_m == "$" ) {
			locvar_gmes_s = strmid(locvar_gmes_msg, locvar_gmes_i, 3)
			locvar_gmes_p += 3
			if ( locvar_gmes_s == "end" ) {
				break
			}
			continue
		}
		else {
			if ( locvar_gmes_m == "。" | locvar_gmes_m == "、" | locvar_gmes_m == "」" | locvar_gmes_m == "』" | locvar_gmes_m == "！" | locvar_gmes_m == "？" | locvar_gmes_m == "…" ) {
				locvar_gmes_brwait = 1
			}
		}
		if ( locvar_gmes_m == "<" ) {
			locvar_gmes_s = strmid(locvar_gmes_msg, locvar_gmes_i, instr(locvar_gmes_msg, locvar_gmes_i, ">"))
			locvar_gmes_i += instr(locvar_gmes_msg, locvar_gmes_i, ">") + 1
			if ( locvar_gmes_s == "emp1" ) {
				font lang(cfg_font1, cfg_font2), locvar_gmes_size - en * 2, 4
				locvar_gmes_col = 50, 50, 255
			}
			if ( locvar_gmes_s == "emp2" ) {
				font lang(cfg_font1, cfg_font2), locvar_gmes_size - en * 2, 1
				locvar_gmes_col = 40, 130, 40
			}
			if ( locvar_gmes_s == "title1" ) {
				locvar_gmes_size = 12
				font lang(cfg_font1, cfg_font2), locvar_gmes_size - en * 2, 1
				locvar_gmes_col = 100, 50, 50
			}
			if ( locvar_gmes_s == "def" ) {
				locvar_gmes_size = 14
				font lang(cfg_font1, cfg_font2), locvar_gmes_size - en * 2, 0
				locvar_gmes_col = gmescol, gmescol(1), gmescol(2)
			}
			if ( locvar_gmes_s == "p" ) {
				gmesy += HIGHDPI_Y(24)
				gmesx = locvar_gmes_xorg
			}
			if ( locvar_gmes_s == "br" ) {
				gmesy += HIGHDPI_Y(16)
				gmesx = locvar_gmes_xorg
			}
			if ( locvar_gmes_s == "b" ) {
				font lang(cfg_font1, cfg_font2), locvar_gmes_size - en * 2, 1
			}
			if ( locvar_gmes_s == "green" ) {
				locvar_gmes_col = 20, 120, 20
			}
			if ( locvar_gmes_s == "red" ) {
				locvar_gmes_col = 120, 20, 20
			}
			if ( locvar_gmes_s == "col" ) {
				locvar_gmes_col = gmescol, gmescol(1), gmescol(2), 180, 160, 140
			}
			continue
		}
		if ( locvar_gmes_m == "^" ) {
			locvar_gmes_m = strmid(locvar_gmes_msg, locvar_gmes_i, 1)
			locvar_gmes_i++
		}
		if ( locvar_gmes_brwait == 0 ) {
			if ( gmesx >= locvar_gmes_lim ) {
				gmesx = locvar_gmes_xorg
				gmesy += HIGHDPI_Y(locvar_gmes_size + 2)
			}
		}
		if ( gmestype == 1 ) {
			color locvar_gmes_col(3), locvar_gmes_col(4), locvar_gmes_col(5)
			pos@HSP gmesx + 1, gmesy + 1
			mes locvar_gmes_m
		}
		color locvar_gmes_col(0), locvar_gmes_col(1), locvar_gmes_col(2)
		pos@HSP gmesx, gmesy
		mes locvar_gmes_m
		gmesx += HIGHDPI_Y(locvar_gmes_size) / 2 * locvar_gmes_p
	loop
	gmesx = locvar_gmes_xorg
	gmesy += HIGHDPI_Y(locvar_gmes_size + 4)
	return

#deffunc boxl int boxl_arg1, int boxl_arg2, int boxl_arg3, int boxl_arg4
	pos boxl_arg1, boxl_arg4
	line boxl_arg1, boxl_arg2
	line boxl_arg3, boxl_arg2
	line boxl_arg3, boxl_arg4
	line boxl_arg1, boxl_arg4
	return

#deffunc topicbox int topicbox_arg1, int topicbox_arg2, int topicbox_arg3, int topicbox_arg4
	color 240, 230, 220
	pos topicbox_arg1, topicbox_arg2 + topicbox_arg4
	line topicbox_arg1, topicbox_arg2
	line topicbox_arg1 + topicbox_arg3, topicbox_arg2
	color 120, 100, 80
	line topicbox_arg1 + topicbox_arg3, topicbox_arg2 + topicbox_arg4
	line topicbox_arg1, topicbox_arg2 + topicbox_arg4
	pos topicbox_arg1, topicbox_arg2
	gfini topicbox_arg3, topicbox_arg4
	gfdec2 20, 30, 40
	return

#defcfunc fixtxt str fixtxt_arg1, int fixtxt_arg2
	locvar_fixtxt_m = "" + fixtxt_arg1
	if ( strlen(fixtxt_arg1) < fixtxt_arg2 ) {
		repeat
			if ( strlen(locvar_fixtxt_m) >= fixtxt_arg2 ) {
				break
			}
			locvar_fixtxt_m += " "
		loop
	}
	else {
		locvar_fixtxt_m = "" + strmid(locvar_fixtxt_m, 0, fixtxt_arg2)
	}
	return "" + locvar_fixtxt_m

#deffunc windowanime int windowanime_arg1, int windowanime_arg2, int windowanime_arg3, int windowanime_arg4, int windowanime_arg5, int windowanime_arg6
	if ( nowindowanime ) {
		nowindowanime = 0
		return
	}
	if ( cfg_windowanime == 0 ) {
		return
	}
	gsel windowanime_arg6
	gmode 0
	pos 0, 0
	gcopy 0, windowanime_arg1, windowanime_arg2, windowanime_arg3, windowanime_arg4
	gsel 0
	gmode 0
	locvar_windowanime_x2 = windowanime_arg3 / 2
	locvar_windowanime_y2 = windowanime_arg4 / 2
	locvar_windowanime_cenx = windowanime_arg1 + locvar_windowanime_x2
	locvar_windowanime_ceny = windowanime_arg2 + locvar_windowanime_y2
	redraw 0
	repeat windowanime_arg5 - 1, 1
		color 30, 30, 30
		boxl locvar_windowanime_cenx - locvar_windowanime_x2 / windowanime_arg5 * cnt, locvar_windowanime_ceny - locvar_windowanime_y2 / windowanime_arg5 * cnt, locvar_windowanime_cenx + locvar_windowanime_x2 / windowanime_arg5 * cnt, locvar_windowanime_ceny + locvar_windowanime_y2 / windowanime_arg5 * cnt
		color 240, 240, 240
		boxl locvar_windowanime_cenx - locvar_windowanime_x2 / windowanime_arg5 * cnt - 1, locvar_windowanime_ceny - locvar_windowanime_y2 / windowanime_arg5 * cnt - 1, locvar_windowanime_cenx + locvar_windowanime_x2 / windowanime_arg5 * cnt - 1, locvar_windowanime_ceny + locvar_windowanime_y2 / windowanime_arg5 * cnt - 1
		redraw 0
		redraw 1
		if ( cnt != windowanime_arg5 - 1 ) {
			await 15
		}
		redraw 0
		pos windowanime_arg1, windowanime_arg2
		gcopy windowanime_arg6, 0, 0, windowanime_arg3, windowanime_arg4
	loop
	gmode 2
	return

#deffunc windowanimecorner int windowanimecorner_arg1, int windowanimecorner_arg2, int windowanimecorner_arg3, int windowanimecorner_arg4, int windowanimecorner_arg5, int windowanimecorner_arg6
	if ( cfg_windowanime == 0 ) {
		return
	}
	gsel windowanimecorner_arg6
	gmode 0
	pos 0, 0
	gcopy 0, windowanimecorner_arg1, windowanimecorner_arg2, windowanimecorner_arg3, windowanimecorner_arg4
	gsel 0
	gmode 0
	locvar_windowanime_x2 = windowanimecorner_arg3 - windowanimecorner_arg1
	locvar_windowanime_y2 = windowanimecorner_arg4 - windowanimecorner_arg2
	redraw 0
	repeat windowanimecorner_arg5, 1
		color 30, 30, 30
		boxl windowanimecorner_arg1 + windowanimecorner_arg3, windowanimecorner_arg2 + windowanimecorner_arg4, windowanimecorner_arg1 + windowanimecorner_arg3 - (windowanimecorner_arg3 - windowanimecorner_arg1) / windowanimecorner_arg5 * cnt, windowanimecorner_arg2 + windowanimecorner_arg4 - (windowanimecorner_arg4 - windowanimecorner_arg2) / windowanimecorner_arg5 * cnt
		color 240, 240, 240
		boxl windowanimecorner_arg1 + windowanimecorner_arg3 - 1, windowanimecorner_arg2 + windowanimecorner_arg4 - 1, windowanimecorner_arg1 + windowanimecorner_arg3 - (windowanimecorner_arg3 - windowanimecorner_arg1) / windowanimecorner_arg5 * cnt - 1, windowanimecorner_arg2 + windowanimecorner_arg4 - (windowanimecorner_arg4 - windowanimecorner_arg2) / windowanimecorner_arg5 * cnt - 1
		redraw 1
		if ( cnt != windowanimecorner_arg5 ) {
			await 15
		}
		redraw 0
		pos windowanimecorner_arg1, windowanimecorner_arg2
		gcopy windowanimecorner_arg6, 0, 0, windowanimecorner_arg3, windowanimecorner_arg4
	loop
	gmode 2
	return

#deffunc showtitle str, str showtitle_arg1, int showtitle_arg2, int
	font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0
	if ( mode != MODELIST_CHARA_CREATION ) {
		locvar_showtitle_x = showtitle_arg2 - 10
		locvar_showtitle_y = 0
	}
	else {
		locvar_showtitle_x = 240
		locvar_showtitle_y = windowh - 16
	}
	repeat (windoww - locvar_showtitle_x - 8) / 192 + 1
		pos locvar_showtitle_x + 8 + cnt * 192, locvar_showtitle_y
		gcopy 3, 496, 599 - 18, 192, 18
	loop
	gmode 2
	pos locvar_showtitle_x, locvar_showtitle_y + (mode != MODELIST_CHARA_CREATION)
	gcopy 3, 96, 360, 24, 16
	color 0, 0, 0
	pos locvar_showtitle_x + 32, locvar_showtitle_y + 1 + jp
	bmes showtitle_arg1, 250, 250, 250
	return

#deffunc drawmenu int drawmenu_arg1
	locvar_drawmenu_y = 34
	if ( drawmenu_arg1 == 0 ) {
		locvar_drawmenu_x = windoww - 260, 240
		p = 9, 10, 11, 12
		s = lang("情報", "Chara"), lang("装備", "Wear"), lang("特徴", "Feat"), lang("ﾏﾃﾘｱﾙ", "Material"), ""
	}
	if ( drawmenu_arg1 == 1 ) {
		locvar_drawmenu_x = windoww - 210, 190
		p = 13, 14, 22
		s = lang("魔法", "Spell"), lang("技能", "Skill"), lang("広域技能", "Wide Skill"), ""
	}
	if ( drawmenu_arg1 == 2 ) {
		locvar_drawmenu_x = windoww - 210, 190
		p = 15, 3, 16
		s = lang("ログ", "Log"), lang("日誌", "Journal"), lang("チャット", "Chat"), ""
	}
	if ( drawmenu_arg1 == 3 ) {
		locvar_drawmenu_x = windoww - 210, 190
		p = 19, 20, 21
		s = lang("チャート", "Chart"), lang("街情報", "City"), lang("法律", "Law"), ""
	}
	if ( menucycle == 0 ) {
		return
	}
	font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0
	window2 locvar_drawmenu_x, locvar_drawmenu_y, locvar_drawmenu_x(1), 22, 5, 5
	pos locvar_drawmenu_x - 28, locvar_drawmenu_y - 8
	gcopy 3, 64, 288, 50, 32
	repeat 8
		if ( s(cnt) == "" ) {
			break
		}
		pos locvar_drawmenu_x + cnt * 50 + 20, locvar_drawmenu_y - 24
		gcopy 3, 288 + p(cnt) * 48, 48, 48, 48
		if ( curmenu == cnt ) {
			gmode 5, , , 70
			pos locvar_drawmenu_x + cnt * 50 + 20, locvar_drawmenu_y - 24
			gcopy 3, 288 + p(cnt) * 48, 48, 48, 48
			gmode 2
		}
		pos locvar_drawmenu_x + cnt * 50 + 46 - strlen(s(cnt)) * 3, locvar_drawmenu_y + 7
		color 0, 0, 0
		if ( curmenu == cnt ) {
			bmes s(cnt), 255, 255, 255
		}
		else {
			bmes s(cnt), 165, 165, 165
		}
	loop
	color 0, 0, 0
	pos locvar_drawmenu_x + locvar_drawmenu_x(1) - 150, locvar_drawmenu_y + 28
	bmes "" + key_prev + "," + key_next + ",Tab " + lang("[メニュー切替]", "[Change]"), 255, 255, 255
	return

#deffunc fillbg int fillbg_arg1, int fillbg_arg2, int fillbg_arg3, int fillbg_arg4, int fillbg_arg5
	gmode 0
	repeat inf_ver / fillbg_arg5 + 1
		locvar_fillbg_cnt2 = cnt
		repeat windoww / fillbg_arg4 + 1
			pos windoww - (cnt + 1) * fillbg_arg4, inf_ver - (locvar_fillbg_cnt2 + 1) * fillbg_arg5
			gcopy fillbg_arg1, fillbg_arg2, fillbg_arg3, fillbg_arg4, fillbg_arg5
		loop
	loop
	gmode 2
	return

#defcfunc direction int direction_arg1, int direction_arg2, int direction_arg3, int direction_arg4
	if ( abs(direction_arg1 - direction_arg3) > abs(direction_arg2 - direction_arg4) ) {
		if ( direction_arg1 > direction_arg3 ) {
			return 1
		}
		else {
			return 2
		}
	}
	else {
		if ( direction_arg2 > direction_arg4 ) {
			return 3
		}
		else {
			return 0
		}
	}

