/*
List of current tweaks with corresponding TweakData entries:

TweakData(x, 0) = "UI Tweaks"
TweakData(0, 0) = "Show Enchant Strength With Objet of Heart."
TweakData(1, 0) = "Allow Spell Tracking."
TweakData(2, 0) = "Add Potentials To Skill Tracker."
TweakData(3, 0) = "Filter Skill Tracker By Potential."
TweakData(4, 0) = "Show Spell Stock In Tracker."
TweakData(50, 0) = "Display Pickpocket shortcut."
TweakData(51, 0) = "Report museum duplicates."

TweakData(x, 1) = "Convenience Tweaks"
TweakData(0, 1) = "Add Feed Option For Pets."
TweakData(1, 1) = "Can Change Item Sprites In Home."
TweakData(2, 1) = "Highlight/Filter Items."
TweakData(3, 1) = "Re-parse ItemList.txt values."
TweakData(50,1) = "Throw potion at self with [t]."
TweakData(51,1) = "Allow running in world map."
TweakData(52,1) = "Option to reload last save after death."
TweakData(53,1) = "Skip skill training confirmation."
TweakData(54,1) = "Auto-drop opened chests."
TweakData(55, 1) = "Remove spell over-cast confirmation."

TweakData(x, 2) = "Gameplay Tweaks"
TweakData(0, 2) = "Gather Items At End Of Party Time."
TweakData(1, 2) = "Pets Heal Other Pets."
TweakData(2, 2) = "Share Gold For Group Performance."
TweakData(3, 2) = "Pets die permanently in Loss Mode."
TweakData(4, 2) = "Re-enable save-scumming."
TweakData(5, 2) = "Bash all fruit."
TweakData(6, 2) = "Organize ranch produce."
TweakData(50, 2) = "Everything must go!"
TweakData(51, 2) = "Disable Deep-Sea Castle persistance."
TweakData(52, 2) = "Sandbag training."
TweakData(53, 2) = "No naps while traveling."
TweakData(54, 2) = "Harvest Moon Mode for ranches."
TweakData(55, 2) = "Revert post-1.90 experience formula changes."
TweakData(56, 2) = "Disable study days."
TweakData(57, 2) = "Disable DESTINY."
TweakData(58, 2) = "(Custom-G) Disable thirst."
TweakData(59, 2) = "(Custom-G) Disable Curtain Call."
TweakData(60, 2) = "(Custom-G) Disable chain attacks."
TweakData(61, 2) = "(Custom-G) Disable sleep prevention."
TweakData(62, 2) = "(Custom-G) Apply skill buffs."
TweakData(63, 2) = "(Custom-G) Apply damage calculation buffs."
TweakData(64, 2) = "Summoned monster training."
TweakData(65, 2) = "No stamina depletion when using stairs in Your Home."
TweakData(66, 2) = "Increased limit to daily pet arena match attempts."
TweakData(67, 2) = "Increased variety of hireable home servants."
TweakData(68, 2) = "Disable stamina depletion when attacking."
TweakData(69, 2) = "Revert post-2.13 experience formula changes."
TweakData(70, 2) = "Disable urination from fear."
TweakData(71, 2) = "(Experimental) Use Custom Map Layouts in Nefia."

TweakData(x, 3) = "AI Tweaks"
TweakData(0, 3) = "Change Zeome's AI."
TweakData(1, 3) = "Increased drinking/brawling chance during parties."

TweakData(x, 4) = "Miscellaneous Tweaks"
TweakData(0, 4) = "Enable Random Start For MP3."
TweakData(1, 4) = "Display Weather Everywhere."
TweakData(2, 4) = "Confirm Reload With F2."
TweakData(3, 4) = "Prevent home stayers from moving."
TweakData(50, 4) = "Fist of the North Star Mode."
TweakData(51, 4) = "Disable cicada noises."
*/

*TweakMenu
    cs = 0
	cs_bk = -1
    cs_bk2 = -1
    page = 0
    pagebk = 0
*TweakMenu_loop
	pagesize = 0
    pagemax = 0
    page = pagebk
	redraw 0
	s = "Tweak Setup", strhint3b
	display_window (windoww - 680) / 2 + inf_screenx, winposy(448), 640, 448
	s = "Configure Tweaks"
	gosub *screen_drawMsg2

	listn(0, TWEAK_CATEGORY_UI) = "UI Tweaks"
	listn(0, TWEAK_CATEGORY_CONVENIENCE) = "Convenience Tweaks"
	listn(0, TWEAK_CATEGORY_GAMEPLAY) = "Gameplay Tweaks"
	listn(0, TWEAK_CATEGORY_AI) = "AI Tweaks"
	listn(0, TWEAK_CATEGORY_MISC) = "Miscellaneous Tweaks"
	listn(0, TWEAK_CATEGORY_MAX) = "Exit"
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0

	repeat TWEAK_CATEGORY_MAX+1
		key_list(cnt) = key_select(cnt)
		keyrange = cnt + 1
		pos wx + 38, wy + 40 + cnt * 19 - 2
		gcopy 3, cnt * 24 + 72, 30, 24, 18
		cs_list listn(0, cnt), wx + 64, wy + 40 + cnt * 19 - 1, 19
	loop

	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0

	repeat TWEAK_CATEGORY_MAX+1
		if ( listn(0, cs) == listn(0, cnt) ) {
			if ( cnt == TWEAK_CATEGORY_UI ) {
				s = "Toggle tweaks that target UI functions."
			}
			if ( cnt == TWEAK_CATEGORY_CONVENIENCE ) {
				s = "Toggle tweaks that make things more convenient."
			}
			if ( cnt == TWEAK_CATEGORY_GAMEPLAY ) {
				s = "Toggle tweaks that alter parts of the gameplay."
			}
			if ( cnt == TWEAK_CATEGORY_AI ) {
				s = "Toggle tweaks that modify the AI of certain enemies."
			}
			if ( cnt == TWEAK_CATEGORY_MISC ) {
				s = "Toggle tweaks that don't fall into any other category."
			}
			if ( cnt == TWEAK_CATEGORY_MAX ) {
				s = "Exit the menu."
			}
			pos wx + 38, wy + 343
			mes s
		}
	loop

	cs_bk = cs
	cs_bk2 = cs
    pagebk = page
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
    repeat
        if ( key == key_select(TWEAK_CATEGORY_UI) ) {
            snd SOUNDLIST_OK1
            gosub *UITweakMenu
            cs = cs_bk2
            keyhalt = 1
            break
        }
        if ( key == key_select(TWEAK_CATEGORY_CONVENIENCE) ) {
            snd SOUNDLIST_OK1
            gosub *ConvenienceTweakMenu
            cs = cs_bk2
            keyhalt = 1
            break
        }
        if ( key == key_select(TWEAK_CATEGORY_GAMEPLAY) ) {
            snd SOUNDLIST_OK1
            gosub *GameplayTweakMenu
            cs = cs_bk2
            keyhalt = 1
            break
        }
        if ( key == key_select(TWEAK_CATEGORY_AI) ) {
            snd SOUNDLIST_OK1
            gosub *AITweakMenu
            cs = cs_bk2
            keyhalt = 1
            break
        }
        if ( key == key_select(TWEAK_CATEGORY_MISC) ) {
            snd SOUNDLIST_OK1
            gosub *MiscTweakMenu
            cs = cs_bk2
            keyhalt = 1
            break
        }
        if ( key == key_select(TWEAK_CATEGORY_MAX) ) {
            snd SOUNDLIST_OK1
            gosub *screen_draw
            goto *pc_turn
        }
        if ( key == key_cancel ) {
            gosub *screen_draw
            goto *pc_turn
        }
        break
    loop
	goto *TweakMenu_loop

*UITweakMenu
    cs = 0
*UITweakMenu_loop
	redraw 0
	s = "Tweak Setup", strhint3b
	display_window (windoww - 680) / 2 + inf_screenx, winposy(448), 640, 448
	s = "Configure Tweaks"
	gosub *screen_drawMsg2

	listn(0, TWEAK_UI_SHOW_ENCHANT_STRENGTH) = "Show Enchant Strength With Objet of Heart. (Currently: " + TweakData(TWEAK_UI_SHOW_ENCHANT_STRENGTH, TWEAK_CATEGORY_UI) + ")"
	listn(0, TWEAK_UI_SPELL_TRACKING) = "Allow Spell Tracking." + GetTStatus(TWEAK_CATEGORY_UI, TWEAK_UI_SPELL_TRACKING)
	listn(0, TWEAK_UI_POTENTIALS_IN_SKILL_TRACKER) = "Add Potentials To Skill Tracker." + GetTStatus(TWEAK_CATEGORY_UI, TWEAK_UI_POTENTIALS_IN_SKILL_TRACKER)
	listn(0, TWEAK_UI_FILTER_SKILL_TRACKER_BY_POTENTIAL) = "Filter Skill Tracker By Potential." + GetTStatus(TWEAK_CATEGORY_UI, TWEAK_UI_FILTER_SKILL_TRACKER_BY_POTENTIAL)
	listn(0, TWEAK_UI_SHOW_SPELLSTOCK_IN_SKILL_TRACKER) = "Show Spell Stock In Tracker." + GetTStatus(TWEAK_CATEGORY_UI, TWEAK_UI_SHOW_SPELLSTOCK_IN_SKILL_TRACKER)
	listn(0, 5) = "Display Pickpocket shortcut." + GetTStatus(TWEAK_CATEGORY_UI, TWEAK_UI_DISPLAY_PICKPOCKET_SHORTCUT)
	listn(0, 6) = "Report museum duplicates." + GetTStatus(TWEAK_CATEGORY_UI, TWEAK_UI_REPORT_MUSEUM_DUPLICATES)
	listn(0, 7) = "Return."
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0

	repeat 8
		key_list(cnt) = key_select(cnt)
		keyrange = cnt + 1
		pos wx + 38, wy + 40 + cnt * 19 - 2
		gcopy 3, cnt * 24 + 72, 30, 24, 18
		cs_list listn(0, cnt), wx + 64, wy + 40 + cnt * 19 - 1, 19
	loop

	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0

	repeat 8
		if ( listn(0, cs) == listn(0, cnt) ) {
			if ( cnt == TWEAK_UI_SHOW_ENCHANT_STRENGTH ) {
				s = "When examining items while holding the Objet of Heart, the strength\nof enchantments on the item will be shown.\n0 = Don't Show, 1 = Show For Enchants w/Level, 2 = Show All"
			}
			if ( cnt == TWEAK_UI_SPELL_TRACKING ) {
				s = "Spells can be added to the skill tracker in the same manner as skills."
			}
			if ( cnt == TWEAK_UI_POTENTIALS_IN_SKILL_TRACKER ) {
				s = "All items in the skill tracker will also display their current potential."
			}
			if ( cnt == TWEAK_UI_FILTER_SKILL_TRACKER_BY_POTENTIAL ) {
				s = "Tracked skills/abilities will not display unless their potential is\nequal to or below a certain threshold."
			}
			if ( cnt == TWEAK_UI_SHOW_SPELLSTOCK_IN_SKILL_TRACKER ) {
				s = "Tracked spells will also display their spell stock."
			}
			if ( cnt == 5 ) {
				s = "Adds a \"Yes/No\" dialogue box when attempting to pick up items that do\nnot belong to you outside of quests and moongates."
			}
			if ( cnt == 6 ) {
				s = "Reports x/y positions of duplicated cards and figurines when the museum updates."
			}
			if ( cnt == 7 ) {
				s = "Return to the previous menu."
			}
			pos wx + 38, wy + 343
			mes s
		}
	loop

	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	if ( key == key_select(TWEAK_UI_SHOW_ENCHANT_STRENGTH) ) {
		tc = TWEAK_CATEGORY_UI
		tn = TWEAK_UI_SHOW_ENCHANT_STRENGTH
		ts = 1
		tm = 2
		gosub *IncrementTweak
	}
	if ( key == key_select(TWEAK_UI_SPELL_TRACKING) ) {
		tc = TWEAK_CATEGORY_UI
		tn = TWEAK_UI_SPELL_TRACKING
		gosub *ToggleTweak
	}
	if ( key == key_select(TWEAK_UI_POTENTIALS_IN_SKILL_TRACKER) ) {
		tc = TWEAK_CATEGORY_UI
		tn = TWEAK_UI_POTENTIALS_IN_SKILL_TRACKER
		gosub *ToggleTweak
	}
	if ( key == key_select(TWEAK_UI_FILTER_SKILL_TRACKER_BY_POTENTIAL) ) {
		tc = TWEAK_CATEGORY_UI
		tn = TWEAK_UI_FILTER_SKILL_TRACKER_BY_POTENTIAL
		ts = 10 // Increments by
		tm = 400 // Max
		gosub *IncrementTweak
	}
	if ( key == key_select(TWEAK_UI_SHOW_SPELLSTOCK_IN_SKILL_TRACKER) ) {
		tc = TWEAK_CATEGORY_UI
		tn = TWEAK_UI_SHOW_SPELLSTOCK_IN_SKILL_TRACKER
		gosub *ToggleTweak
	}
	if ( key == key_select(5) ) {
		tc = TWEAK_CATEGORY_UI
		tn = TWEAK_UI_DISPLAY_PICKPOCKET_SHORTCUT
		gosub *ToggleTweak
	}
	if ( key == key_select(6) ) {
		tc = TWEAK_CATEGORY_UI
		tn = TWEAK_UI_REPORT_MUSEUM_DUPLICATES
		gosub *ToggleTweak
	}
	if ( key == key_select(7) ) {
        snd SOUNDLIST_OK1
        return
	}
	if ( key == key_cancel ) {
        return
	}
	goto *UITweakMenu_loop

#defcfunc GetTStatus int TweakCategory, int TweakNumber
	if ( TweakData(TweakNumber, TweakCategory) == 0 ) {
		return " (Currently: Off)"
	}
	if ( TweakCategory == TWEAK_CATEGORY_MISC ) & ( TweakNumber == 50 ) {
		if ( TweakData(TweakNumber, TweakCategory) == 1 ) {
			return " (Currently: Japanese)"
		}
		if ( TweakData(TweakNumber, TweakCategory) == 2 ) {
			return " (Currently: English)"
		}
		else {
			return " (Currently: Romanji)"
		}
	}
	if ( TweakData(TweakNumber, TweakCategory) == 1 ) {
		return " (Currently: On)"
	}
	if ( TweakData(TweakNumber, TweakCategory) > 1 ) {
		return " (Currently: " + TweakData(TweakNumber, TweakCategory) + ")"
	}
	return " FAILED"

*ToggleTweak
    snd SOUNDLIST_OK1
	if ( TweakData(tn, tc) == 0 ) {
		TweakData(tn, tc) = 1
	}
	else {
		TweakData(tn, tc) = 0
	}
	return

*IncrementTweak
    snd SOUNDLIST_OK1
	TweakData(tn, tc) += ts
	if ( TweakData(tn, tc) > tm ) {
		TweakData(tn, tc) = 0
	}
	return

*ConvenienceTweakMenu
    cs = 0
    listmax = 11
*ConvenienceTweakMenu_loop
	redraw 0
	s = "Tweak Setup", strhint3b
	display_window (windoww - 680) / 2 + inf_screenx, winposy(448), 640, 448
	s = "Configure Tweaks"
	gosub *screen_drawMsg2

	listn(0, TWEAK_CONVENIENCE_FEED_OPTION_PETS) = "Add Feed Option For Pets." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_FEED_OPTION_PETS)
	listn(0, TWEAK_CONVENIENCE_CHANGE_ITEM_SPRITE_HOME) = "Can Change Item Sprites In Home." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_CHANGE_ITEM_SPRITE_HOME)
	listn(0, TWEAK_CONVENIENCE_HIGHLIGHT_FILTER) = "Highlight/Filter Items. (Currently: " + TweakData(TWEAK_CONVENIENCE_HIGHLIGHT_FILTER, TWEAK_CATEGORY_CONVENIENCE) + ")"
	listn(0, TWEAK_CONVENIENCE_REPARSE_ITEMLIST) = "Re-parse ItemList.txt."
	listn(0, 4) = "Throw potion at self with [t]." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_THROW_POTION_AT_SELF)
	listn(0, 5) = "Allow running in world map." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_ALLOW_RUNNING_IN_WORLD_MAP)
	listn(0, 6) = "Option to reload last save after death." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_RELOAD_AFTER_DEATH_OPTION)
	listn(0, 7) = "Skip skill training confirmation." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_SKIP_SKILL_TRAINING_CONFIRMATION)
	listn(0, 8) = "Auto-drop opened chests." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_AUTODROP_OPENED_CHESTS)
	listn(0, 9) = "Remove spell over-cast confirmation." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_REMOVE_SPELL_OVER_CAST_CONFIRMATION)
	listn(0, 10) = "Return."
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0

	repeat listmax
		key_list(cnt) = key_select(cnt)
		keyrange = cnt + 1
		pos wx + 38, wy + 40 + cnt * 19 - 2
		gcopy 3, cnt * 24 + 72, 30, 24, 18
		cs_list listn(0, cnt), wx + 64, wy + 40 + cnt * 19 - 1, 19
	loop

	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0

	repeat listmax
		if ( listn(0, cs) == listn(0, cnt) ) {
			if ( cnt == TWEAK_CONVENIENCE_FEED_OPTION_PETS ) {
				s = "Adds a Feed option that works like Give but that filters out non-food items when\ninteracting with pets. Also allows for feeding pets raw equipment."
			}
			if ( cnt == TWEAK_CONVENIENCE_CHANGE_ITEM_SPRITE_HOME ) {
				s = "Adds a new menu item to blacksmiths in your home that allows you to change\nitem sprites like at Garok."
			}
			if ( cnt == TWEAK_CONVENIENCE_HIGHLIGHT_FILTER ) {
				s = "Configure your highlighting/filtering choice.\n0 = No Highlight, 1 = Highlight and Mark Items, 2 = Only Show Highlighted Items"
			}
			if ( cnt == TWEAK_CONVENIENCE_REPARSE_ITEMLIST ) {
				s = "Reload the ItemList.txt file, used to enable highlighting and filtering for items."
			}
			if ( cnt == 4 ) {
				s = "Adds potions to the [t]ool menu.\nUsing a potion with this tweak enabled throws it at your tile."
			}
			if ( cnt == 5 ) {
				s = "Allows running in the world map by holding Shift."
			}
			if ( cnt == 6 ) {
				s = "Adds an option to the death menu for reloading from the previous save.\nIf \"Confirm Reload With F2\" is enabled, you will be warned when playing in a mode\nwith a save penalty."
			}
			if ( cnt == 7 ) {
				s = "Skips the confirmation when spending platinum coins on skill training."
			}
			if ( cnt == 8 ) {
				s = "Automatically drops empty chests after they've been opened."
			}
			if ( cnt == 9 ) {
				s = "Removes confirmation window when over-casting spells."
			}
			if ( cnt == 10 ) {
				s = "Return to the previous menu."
			}
			pos wx + 38, wy + 343
			mes s
		}
	loop

	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	if ( key == key_select(TWEAK_CONVENIENCE_FEED_OPTION_PETS) ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_FEED_OPTION_PETS
		gosub *ToggleTweak
	}
	if ( key == key_select(TWEAK_CONVENIENCE_CHANGE_ITEM_SPRITE_HOME) ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_CHANGE_ITEM_SPRITE_HOME
		gosub *ToggleTweak
	}
	if ( key == key_select(TWEAK_CONVENIENCE_HIGHLIGHT_FILTER) ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_HIGHLIGHT_FILTER
		ts = 1 // Increments by
		tm = 2 // Max (0, 1, 2)
		gosub *IncrementTweak
	}
	if ( key == key_select(TWEAK_CONVENIENCE_REPARSE_ITEMLIST) ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_REPARSE_ITEMLIST
		gosub *Load_Item_Highlights
	}
	if ( key == key_select(4) ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_THROW_POTION_AT_SELF
		gosub *ToggleTweak
	}
	if ( key == key_select(5) ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_ALLOW_RUNNING_IN_WORLD_MAP
		gosub *ToggleTweak
	}
	if ( key == key_select(6) ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_RELOAD_AFTER_DEATH_OPTION
		gosub *ToggleTweak
	}
	if ( key == key_select(7) ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_SKIP_SKILL_TRAINING_CONFIRMATION
		gosub *ToggleTweak
	}
	if ( key == key_select(8) ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_AUTODROP_OPENED_CHESTS
		gosub *ToggleTweak
	}
	if ( key == key_select(9) ) {
		tc = TWEAK_CATEGORY_CONVENIENCE
		tn = TWEAK_CONVENIENCE_REMOVE_SPELL_OVER_CAST_CONFIRMATION
		gosub *ToggleTweak
	}
	if ( key == key_select(10) ) {
		snd SOUNDLIST_OK1
        return
	}
	if ( key == key_cancel ) {
        return
	}
	goto *ConvenienceTweakMenu_loop

*GameplayTweakMenu
    cs = 0
    page = 0
    pagesize = 16
    listmax = 29
*GameplayTweakMenu_pgchk
	redraw 0
	page_check
*GameplayTweakMenu_loop
	redraw 0
	s = "Tweak Setup", strhint2 + strhint3b
	display_window (windoww - 680) / 2 + inf_screenx, winposy(448), 640, 448
	s = "Configure Tweaks"
	gosub *screen_drawMsg2

	listn(0, TWEAK_GAMEPLAY_GATHER_ITEM_PARTYTIME) = "Gather Items At End Of Party Time." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_GATHER_ITEM_PARTYTIME)
	listn(0, TWEAK_GAMEPLAY_PETS_HEAL_PETS) = "Pets Heal Other Pets." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_PETS_HEAL_PETS)
	listn(0, TWEAK_GAMEPLAY_SHARED_PERFORMANCE_GOLD) = "Share Gold For Group Performance." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_SHARED_PERFORMANCE_GOLD)
	listn(0, TWEAK_GAMEPLAY_PETS_DIE_LOSSMODE) = "Pets die permanently in Loss Mode." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_PETS_DIE_LOSSMODE)
	listn(0, TWEAK_GAMEPLAY_ENABLE_SAVE_SCUMMING) = "Re-enable save-scumming." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_ENABLE_SAVE_SCUMMING)
	listn(0, TWEAK_GAMEPLAY_BASH_ALL_FRUIT) = "Bash all fruit." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_BASH_ALL_FRUIT)
	listn(0, TWEAK_GAMEPLAY_ORGANIZE_RANCH) = "Organize ranch produce." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_ORGANIZE_RANCH)
	listn(0, 7) = "Everything must go!" + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_EVERYTHING_MUST_GO)
	listn(0, 8) = "Disable Deep-Sea Castle persistance." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_DISABLE_DEEP_SEA_CASTLE_PERSISTENCE)
	listn(0, 9) = "Sandbag training." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_SANDBAG_TRAINING)
	listn(0, 10) = "No naps while traveling." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_NO_NAPS_WHILE_TRAVELING)
	listn(0, 11) = "Harvest Moon Mode for ranches." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_HARVEST_MOON_RANCH)
	listn(0, 12) = "Revert post-1.90 experience formula changes." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_REVERT_POST_190_EXP_CHANGES)
	listn(0, 13) = "Disable study days." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_DISABLE_STUDY_DAYS)
	listn(0, 14) = "Disable DESTINY." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_DISABLE_DESTINY)
	listn(0, 15) = "(Custom-G) Disable thirst." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_CG_DISABLE_THIRST)
	listn(0, 16) = "(Custom-G) Disable Curtain Call." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_CG_DISABLE_CURTAIN_CALL)
	listn(0, 17) = "(Custom-G) Disable chain attacks." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_CG_DISABLE_CHAIN_ATTACKS)
	listn(0, 18) = "(Custom-G) Disable sleep prevention." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_CG_DISABLE_SLEEP_PREVENTION)
	listn(0, 19) = "(Custom-G) Apply skill buffs." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_CG_REVERT_SKILL_NERFS)
	listn(0, 20) = "(Custom-G) Apply damage calculation buffs." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_CG_REVERT_DAMAGE_CALC_NERFS)
	listn(0, 21) = "Summoned monster training." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_SUMMONED_MONSTER_TRAINING)
	listn(0, 22) = "No stamina depletion when using stairs in Your Home." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_HOME_STAIRS_NO_STAMINA_USAGE)
	listn(0, 23) = "Increased daily Pet Arena attempts. " + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_PET_ARENA_INCREASED_MATCH_LIMIT)
	listn(0, 24) = "Increased variety of hireable home servants." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_MORE_HIREABLE_HOUSE_SERVANTS)
	listn(0, 25) = "Disable stamina depletion when attacking." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_DISABLE_ATTACK_STAMINA_DEPLETION)
	listn(0, 26) = "Revert post-2.13 experience formula changes." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_REVERT_POST_213_EXP_CHANGES)
	listn(0, 27) = "Disable urination from fear." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_DISABLE_URINATION_FROM_FEAR)
	listn(0, 28) = "(Experimental) Use Custom Map Layouts in Nefia." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_USE_CUSTOM_NEFIA_TYPES) + "% Chance."
	listn(0, 29) = "Return"

	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0

	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange = cnt + 1
		pos wx + 38, wy + 40 + cnt * 19 - 2
		gcopy 3, cnt * 24 + 72, 30, 24, 18
		cs_list listn(0, p), wx + 64, wy + 40 + cnt * 19 - 1, 19
	loop

	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0

	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		if ( cs == cnt ) {
			if ( p == TWEAK_GAMEPLAY_GATHER_ITEM_PARTYTIME ) {
				s = "When a Party Time! quest ends, you will be presented with a list of items on the\nfloor that you can take."
			}
			if ( p == TWEAK_GAMEPLAY_PETS_HEAL_PETS ) {
				s = "Pets with Healing Rain will consider the health of other pets when deciding\nwhether or not to use it. If using custom AI, no effect except\nusage out of combat (requires pet to know it naturally)."
			}
			if ( p == TWEAK_GAMEPLAY_SHARED_PERFORMANCE_GOLD ) {
				s = "When performing an ensemble with pets, your pets will receive a portion\nof all gold earned."
			}
			if ( p == TWEAK_GAMEPLAY_PETS_DIE_LOSSMODE ) {
				s = "If you are playing in Loss Mode, pets will also have permadeath."
			}
			if ( p == TWEAK_GAMEPLAY_ENABLE_SAVE_SCUMMING ) {
				s = "Disables autosaving, re-enables F2 save reloading."
			}
			if ( p == TWEAK_GAMEPLAY_BASH_ALL_FRUIT ) {
				s = "Bash all fruit out of fruit trees in one go."
			}
			if ( p == TWEAK_GAMEPLAY_ORGANIZE_RANCH ) {
				s = "Better organize the ranch by collecting all ranch produce in one spot (x17 y14)."
			}
			if ( p == 7 ) {
				s = "Allows shops to sell furniture, red books, and deeds. Registers,\nshop strongboxes, shelters, and unique items still won't be sold."
			}
			if ( p == 8 ) {
				s = "Visiting the Deep-Sea Castle only resets items with a cooldown period\nwhile you're there, instead of continuously resetting them until you sleep."
			}
			if ( p == 9 ) {
				s = "Sandbagged monsters will give experience."
			}
			if ( p == 10 ) {
				s = "Removes the chance to automatically take a nap when traveling while sleepy."
			}
			if ( p == 11 ) {
				s = "Livestock can randomly become sick, are born unable to be milked, etc."
			}
			if ( p == 12 ) {
				s = "Reverts changes to the experience formula after version 1.90.\nThis mainly addresses the three-fold increase in player experience gain."
			}
			if ( p == 13 ) {
				s = "Disables the \"study day bonus\" feature.\nThis will prevent certain skills from gaining triple experience based on the\nstudy day type."
			}
			if ( p == 14 ) {
				s = "Disables the \"DESTINY\" feature.\nThis restores the chances of godly equipment being generated, regardless of\nDESTINY triggers."
			}
			if ( p == 15 ) {
				s = "Disables the thirst mechanic.\nThis allows you to survive without drinking, and also disables the passive\nstamina regeneration that the \"Wetting\" condition provides."
			}
			if ( p == 16 ) {
				s = "Disables the Curtain Call mechanic.\nThis is an anti-AFK mechanism intended to prevent farming. It spawns instant-kill\nenemies if you attack 10,000 times within the same map without leaving."
			}
			if ( p == 17 ) {
				s = "Disables the chain attacks mechanic.\nThis reduces the damage dealt by sequential attacks within the attacker's turn."
			}
			if ( p == 18 ) {
				s = "Disables the sleep prevention effects caused by coffee and tobacco."
			}
			if ( p == 19 ) {
				s = "Enables Custom-G's changes to certain skills.\nThis affects Gravity Sphere, Graviton Buster, Violent Garden,\nShadow Step, and some other skills."
			}
			if ( p == 20 ) {
				s = "Enables Custom-G's changes to damage calculation.\nThis affects the damage and critical chance when multi-attacking."
			}
			if ( p == 21 ) {
				s = "Summoned monsters and monsters that split up will give experience."
			}
			if ( p == 22 ) {
				s = "Using stairs in Your Home will not deplete stamina."
			}
			if ( p == 23 ) {
				s = "Increases the daily limit of Pet Arena match attempts\nin intervals of 10 and maxing out at 100 a day."
			}
			if ( p == 24 ) {
				s = "Adds more hireable home servants.\nIncludes the baker, fisher, and food vendor.\nAlso increases the number of servants generated."
			}
			if ( p == 25 ) {
				s = "Disables stamina depletion when attacking or casting spells."
			}
			if ( p == 26 ) {
				s = "Reverts changes to the experience formula after version 2.13.\nAddresses \"increased EXP multipliers when defeating enemies above the PC's level\".\nToggling this also reverts the changes to the taxation mechanic."
			}
			if ( p == 27 ) {
				s = "Prevents characters from urinating when they are afflicted with fear."
			}
			if ( p == 28 ) {
				s = "Uses Custom Map Layouts in Nefia. \nThis replaces the existing mapgen algorithm with the given percentage chance. \nWARNING: This may causes crashes, game hanging, create layouts with unreachable exits.\nYou may want to enable savescumming before using this."
			}
			if ( p == 29 ) {
				s = "Return to the previous menu."
			}
			pos wx + 38, wy + 343
			mes s
		}
	loop

	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = pagesize * page + cnt
			break
		}
	loop
	if ( p == TWEAK_GAMEPLAY_GATHER_ITEM_PARTYTIME ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_GATHER_ITEM_PARTYTIME
		gosub *ToggleTweak
	}
	if ( p == TWEAK_GAMEPLAY_PETS_HEAL_PETS ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_PETS_HEAL_PETS
		gosub *ToggleTweak
	}
	if ( p == TWEAK_GAMEPLAY_SHARED_PERFORMANCE_GOLD ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_SHARED_PERFORMANCE_GOLD
		gosub *ToggleTweak
	}
	if ( p == TWEAK_GAMEPLAY_PETS_DIE_LOSSMODE ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_PETS_DIE_LOSSMODE
		gosub *ToggleTweak
	}
	if ( p == TWEAK_GAMEPLAY_ENABLE_SAVE_SCUMMING ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_ENABLE_SAVE_SCUMMING
		gosub *ToggleTweak
	}
	if ( p == TWEAK_GAMEPLAY_BASH_ALL_FRUIT ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_BASH_ALL_FRUIT
		gosub *ToggleTweak
	}
	if ( p == TWEAK_GAMEPLAY_ORGANIZE_RANCH ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_ORGANIZE_RANCH
		gosub *ToggleTweak
	}
	if ( p == 7 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_EVERYTHING_MUST_GO
		gosub *ToggleTweak
	}
	if ( p == 8 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_DISABLE_DEEP_SEA_CASTLE_PERSISTENCE
		gosub *ToggleTweak
	}
	if ( p == 9 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_SANDBAG_TRAINING
		gosub *ToggleTweak
	}
	if ( p == 10 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_NO_NAPS_WHILE_TRAVELING
		gosub *ToggleTweak
	}
	if ( p == 11 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_HARVEST_MOON_RANCH
		gosub *ToggleTweak
	}
	if ( p == 12 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_REVERT_POST_190_EXP_CHANGES
		gosub *ToggleTweak
	}
	if ( p == 13 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_DISABLE_STUDY_DAYS
		gosub *ToggleTweak
	}
	if ( p == 14 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_DISABLE_DESTINY
		gosub *ToggleTweak
	}
	if ( p == 15 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_CG_DISABLE_THIRST
		gosub *ToggleTweak
	}
	if ( p == 16 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_CG_DISABLE_CURTAIN_CALL
		gosub *ToggleTweak
	}
	if ( p == 17 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_CG_DISABLE_CHAIN_ATTACKS
		gosub *ToggleTweak
	}
	if ( p == 18 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_CG_DISABLE_SLEEP_PREVENTION
		gosub *ToggleTweak
	}
	if ( p == 19 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_CG_REVERT_SKILL_NERFS
		gosub *ToggleTweak
		gosub *ApplyCGSkillTweak
	}
	if ( p == 20 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_CG_REVERT_DAMAGE_CALC_NERFS
		gosub *ToggleTweak
	}
	if ( p == 21 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_SUMMONED_MONSTER_TRAINING
		gosub *ToggleTweak
	}
	if ( p == 22 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_HOME_STAIRS_NO_STAMINA_USAGE
		gosub *ToggleTweak
	}
	if ( p == 23 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_PET_ARENA_INCREASED_MATCH_LIMIT
		ts = 10 // Increments by
		tm = 100 // Max
		gosub *IncrementTweak
	}
	if ( p == 24 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_MORE_HIREABLE_HOUSE_SERVANTS
		gosub *ToggleTweak
	}
	if ( p == 25 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_DISABLE_ATTACK_STAMINA_DEPLETION
		gosub *ToggleTweak
	}
	if ( p == 26 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_REVERT_POST_213_EXP_CHANGES
		gosub *ToggleTweak
	}
	if ( p == 27 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_DISABLE_URINATION_FROM_FEAR
		gosub *ToggleTweak
	}
	if ( p == 28 ) {
		tc = TWEAK_CATEGORY_GAMEPLAY
		tn = TWEAK_GAMEPLAY_USE_CUSTOM_NEFIA_TYPES
		ts = 10 // Increments by
		tm = 100 // Max
		gosub *IncrementTweak
	}
	if ( p == 29 ) {
		snd SOUNDLIST_OK1
		return
	}
	page_change *GameplayTweakMenu_pgchk
	if ( key == key_cancel ) {
        return
	}
	goto *GameplayTweakMenu_loop

*ApplyCGSkillTweak
	if ( TweakData(TWEAK_GAMEPLAY_CG_REVERT_SKILL_NERFS, TWEAK_CATEGORY_GAMEPLAY) == TRUE ) {
		sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_COOKING) = SKILL_ATTR_LER, SKILL_TYPE_SP, 3, TARGET_TYPE_SELF_ONLY, 0
		sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_FISHING) = SKILL_ATTR_PER, SKILL_TYPE_SP, 1, TARGET_TYPE_SELF_ONLY, 0
		sdataref(SKILL_DATAREF_COST, SKILL_SPACT_SHADOW_STEP) = 5
		sdataref(SKILL_DATAREF_COST, SKILL_SPACT_DECAPITATION) = 10
		sdataref(SKILL_DATAREF_COST, SKILL_SPACT_READING_PARTY) = 5
		sdataref(SKILL_DATAREF_COST, SKILL_SPACT_LOCK_BREAK) = 6
		sdataref(SKILL_DATAREF_COST, SKILL_SPACT_VIOLENT_GARDEN) = 22
	}
	else {
		sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_COOKING) = SKILL_ATTR_LER, SKILL_TYPE_SP, 15, TARGET_TYPE_SELF_ONLY, 0
		sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_FISHING) = SKILL_ATTR_PER, SKILL_TYPE_SP, 5, TARGET_TYPE_SELF_ONLY, 0
		sdataref(SKILL_DATAREF_COST, SKILL_SPACT_SHADOW_STEP) = 27
		sdataref(SKILL_DATAREF_COST, SKILL_SPACT_DECAPITATION) = 30
		sdataref(SKILL_DATAREF_COST, SKILL_SPACT_READING_PARTY) = 25
		sdataref(SKILL_DATAREF_COST, SKILL_SPACT_LOCK_BREAK) = 30
		sdataref(SKILL_DATAREF_COST, SKILL_SPACT_VIOLENT_GARDEN) = 18
	}
	return

*AITweakMenu
    cs = 0
	listmax = 3
*AITweakMenu_loop
	redraw 0
	s = "Tweak Setup", strhint3b
	display_window (windoww - 680) / 2 + inf_screenx, winposy(448), 640, 448
	s = "Configure Tweaks"
	gosub *screen_drawMsg2

	listn(0, TWEAK_AI_ZEOME) = "Change Zeome's AI." + GetTStatus(TWEAK_CATEGORY_AI, TWEAK_AI_ZEOME)
	listn(0, TWEAK_AI_INCREASED_PARTYTIME_DRUNKENNESS) = "Increased drinking/brawling chance during parties." + GetTStatus(TWEAK_CATEGORY_AI, TWEAK_AI_INCREASED_PARTYTIME_DRUNKENNESS)
	listn(0, 2) = "Return."
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0

	repeat listmax
		key_list(cnt) = key_select(cnt)
		keyrange = cnt + 1
		pos wx + 38, wy + 40 + cnt * 19 - 2
		gcopy 3, cnt * 24 + 72, 30, 24, 18
		cs_list listn(0, cnt), wx + 64, wy + 40 + cnt * 19 - 1, 19
	loop

	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0

	repeat listmax
		if ( listn(0, cs) == listn(0, cnt) ) {
			if ( cnt == TWEAK_AI_ZEOME ) {
				s = "Changes Zeome's move list and AI to make the fight significantly more difficult."
			}
			if ( cnt == TWEAK_AI_INCREASED_PARTYTIME_DRUNKENNESS ) {
				s = "NPC's drink and brawl more during Party Time! Warning: 100% is chaos. "
			}
			if ( cnt == 2 ) {
				s = "Return to the previous menu."
			}
			pos wx + 38, wy + 343
			mes s
		}
	loop

	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	if ( key == key_select(TWEAK_AI_ZEOME) ) {
		tc = TWEAK_CATEGORY_AI
		tn = TWEAK_AI_ZEOME
		gosub *ToggleTweak
	}
	if ( key == key_select(TWEAK_AI_INCREASED_PARTYTIME_DRUNKENNESS) ) {
		tc = TWEAK_CATEGORY_AI
		tn = TWEAK_AI_INCREASED_PARTYTIME_DRUNKENNESS
		ts = 10
		tm = 100
		gosub *IncrementTweak
	}
	if ( key == key_select(2) ) {
		snd SOUNDLIST_OK1
        return
	}
	if ( key == key_cancel ) {
        return
	}
	goto *AITweakMenu_loop

*MiscTweakMenu
    cs = 0
*MiscTweakMenu_loop
	redraw 0
	s = "Tweak Setup", strhint3b
	display_window (windoww - 680) / 2 + inf_screenx, winposy(448), 640, 448
	s = "Configure Tweaks"
	gosub *screen_drawMsg2

	listn(0, TWEAK_MISC_RANDOM_START_MP3) = "Enable Random Start For MP3." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_RANDOM_START_MP3)
	listn(0, TWEAK_MISC_WEATHER_EVERYWHERE) = "Display Weather Everywhere." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_WEATHER_EVERYWHERE)
	listn(0, TWEAK_MISC_CONFIRM_RELOAD_F2) = "Confirm Reload With F2." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_CONFIRM_RELOAD_F2)
	listn(0, TWEAK_MISC_PREVENT_STAYER_MOVEMENT) = "Prevent home stayers from moving." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_PREVENT_STAYER_MOVEMENT)
	listn(0, TWEAK_MISC_PREVENT_BUMP_ATTACK) = "Prevent bump attack." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_PREVENT_BUMP_ATTACK)
	listn(0, 5) = "Fist of the North Star Mode." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_HOKUTO_NO_KEN_MODE)
	listn(0, 6) = "Disable cicada noises." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_DISABLE_CICADA_NOISES)
	listn(0, 7) = "Return."
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0

	repeat 8
		key_list(cnt) = key_select(cnt)
		keyrange = cnt + 1
		pos wx + 38, wy + 40 + cnt * 19 - 2
		gcopy 3, cnt * 24 + 72, 30, 24, 18
		cs_list listn(0, cnt), wx + 64, wy + 40 + cnt * 19 - 1, 19
	loop

	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0

	repeat 8
		if ( listn(0, cs) == listn(0, cnt) ) {
			if ( cnt == TWEAK_MISC_RANDOM_START_MP3 ) {
				s = "Will make MP3s start playback from a random point.\nCould cause compatability issues."
			}
			if ( cnt == TWEAK_MISC_WEATHER_EVERYWHERE ) {
				s = "Weather effects will display in all areas."
			}
			if ( cnt == TWEAK_MISC_CONFIRM_RELOAD_F2 ) {
				s = "If in a mode with save penalty, causes a popup to appear when pressing the\nF2 key to quick-load a save."
			}
			if ( cnt == TWEAK_MISC_PREVENT_STAYER_MOVEMENT ) {
				s = "Prevent your home stayers from moving inside your home."
			}
			if ( cnt == TWEAK_MISC_PREVENT_BUMP_ATTACK ) {
				s = "Prevents you from performing a melee attack when bumping into others."
			}
			if ( cnt == 5 ) {
				s = "Nani?!"
			}
			if ( cnt == 6 ) {
				s = "Prevents cicada noises from playing during the summer months."
			}
			if ( cnt == 7 ) {
				s = "Return to the previous menu."
			}
			pos wx + 38, wy + 343
			mes s
		}
	loop

	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	if ( key == key_select(TWEAK_MISC_RANDOM_START_MP3) ) {
		tc = TWEAK_CATEGORY_MISC
		tn = TWEAK_MISC_RANDOM_START_MP3
		gosub *ToggleTweak
	}
	if ( key == key_select(TWEAK_MISC_WEATHER_EVERYWHERE) ) {
		tc = TWEAK_CATEGORY_MISC
		tn = TWEAK_MISC_WEATHER_EVERYWHERE
		gosub *ToggleTweak
	}
	if ( key == key_select(TWEAK_MISC_CONFIRM_RELOAD_F2) ) {
		tc = TWEAK_CATEGORY_MISC
		tn = TWEAK_MISC_CONFIRM_RELOAD_F2
		gosub *ToggleTweak
	}
	if ( key == key_select(TWEAK_MISC_PREVENT_STAYER_MOVEMENT) ) {
		tc = TWEAK_CATEGORY_MISC
		tn = TWEAK_MISC_PREVENT_STAYER_MOVEMENT
		gosub *ToggleTweak
	}
	if ( key == key_select(TWEAK_MISC_PREVENT_BUMP_ATTACK) ) {
		tc = TWEAK_CATEGORY_MISC
		tn = TWEAK_MISC_PREVENT_BUMP_ATTACK
		gosub *ToggleTweak
	}
	if ( key == key_select(5) ) {
		tc = TWEAK_CATEGORY_MISC
		tn = TWEAK_MISC_HOKUTO_NO_KEN_MODE
		ts = 1
		tm = 3
		gosub *IncrementTweak
	}
	if ( key == key_select(6) ) {
		tc = TWEAK_CATEGORY_MISC
		tn = TWEAK_MISC_DISABLE_CICADA_NOISES
		gosub *ToggleTweak
	}
	if ( key == key_select(7) ) {
		snd SOUNDLIST_OK1
        return
	}
	if ( key == key_cancel ) {
        return
	}
	goto *MiscTweakMenu_loop

*ZeomeCustomAI
	if ( InitZeome == 0 ) {
		TCount1 = 5
		InitZeome = 1
	}

	TCount1++

	; If current mana is less than 95% of max, gain 5% max mana.
	if ( (cdata(CDATA_MP, cc) * 100) / cdata(CDATA_MAX_MP, cc) < 95 ) {
		cdata(CDATA_MP, cc) += cdata(CDATA_MAX_MP, cc)/20
	}

	; Set Target to Player
	tc = CHARA_PLAYER

	; Teleport if low on health & MP & player is closer than 6 spaces.
	if ( (cdata(CDATA_HP, cc) * 100) / cdata(CDATA_MAX_HP, cc) < 30 & (cdata(CDATA_MP, cc) * 100) / cdata(CDATA_MAX_MP, cc) < 20 & dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), cdata(CDATA_X, tc), cdata(CDATA_Y, tc)) < 8 & findbuff(cc, BUFF_MIST_OF_SILENCE) == (-1) ) {
		act = SKILL_SPELL_TELEPORT
		efid = act
		npccostmp = 1
		gosub *cast
		if ( stat == 1 ) {
			goto *turn_end
		}
	}

	; Cast Cure of Jua if low on health.
	if ( (cdata(CDATA_HP, cc) * 100)/cdata(CDATA_MAX_HP, cc) < 40 & findbuff(cc, BUFF_MIST_OF_SILENCE) == (-1) & (cdata(CDATA_MP, cc) * 100)/cdata(CDATA_MAX_MP, cc) > 5 ) {
		act = SKILL_SPELL_CURE_OF_JURE
		efid = act
		npccostmp = 1
		gosub *cast
		if ( stat == 1 ) {
			goto *turn_end
		}
	}

	; If Zeome does not have Holy Shield, Feather, Hero, or Attribute Shield, buff all of them at once. Ignore if silenced.
	if ( (findbuff(cc, BUFF_HOLY_SHIELD) == (-1) | findbuff(cc, BUFF_ATTRIBUTE_SHIELD) == (-1) | findbuff(cc, BUFF_FEATHER) == (-1) | findbuff(cc, BUFF_HERO) == (-1)) & findbuff(cc, BUFF_MIST_OF_SILENCE) == (-1) ) {
		tcol@txtfunc = 255, 51, 100
		txt "" + name(cc) + " grins wickedly."

		; Feather
		act = SKILL_SPELL_FEATHER
		efid = act
		npccostmp = 1
		gosub *cast

		; Holy shield
		act = SKILL_SPELL_HOLY_SHIELD
		efid = act
		npccostmp = 1
		gosub *cast

		; Attribute Shield
		act = SKILL_SPELL_ATTRIBUTE_SHIELD
		efid = act
		npccostmp = 1
		gosub *cast

		; Hero
		act = SKILL_SPELL_HERO
		efid = act
		npccostmp = 1
		gosub *cast

		; End Turn
		goto *turn_end
	}

	; See if target has Nightmare; if not, cast it. Ignore if Divine Veil is up or if silenced.
	if ( findbuff(tc, BUFF_NIGHTMARE) == (-1) & findbuff(tc, BUFF_HOLY_VEIL) == (-1) & TCount1 > 4 & findbuff(cc, BUFF_MIST_OF_SILENCE) == (-1) ) {
		act = SKILL_SPELL_NIGHTMARE
		efid = act
		npccostmp = 1
		gosub *cast
		if ( stat == 1 ) {
			TCount1 = 0
			goto *turn_end
		}
	}

	; Shadowstep to player if out of melee & in los
	if ( dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), cdata(CDATA_X, tc), cdata(CDATA_Y, tc)) > 1 & fov_los(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), cdata(CDATA_X, tc), cdata(CDATA_Y, tc)) ) {
		act = SKILL_SPACT_SHADOW_STEP
		efid = act
		gosub *action
		if ( stat == 1 ) {
			goto *turn_end
		}
	}

	; 50% chance for Chaos Ball or Melee when in melee range. 12.5% chance to summon.
	if ( dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), cdata(CDATA_X, tc), cdata(CDATA_Y, tc)) == 1 ) {
		if ( rnd(6) == 0 & findbuff(cc, BUFF_MIST_OF_SILENCE) == (-1) ) {
			act = SKILL_SPELL_SUMMON_MONSTERS
			efid = act
			npccostmp = 1
			gosub *cast
			if ( stat == 1 ) {
				goto *turn_end
			}
		}

		if ( rnd(3) == 0 & findbuff(cc, BUFF_MIST_OF_SILENCE) == (-1) ) {
			act = SKILL_SPELL_CHAOS_BALL
			efid = act
			npccostmp = 1
			gosub *cast
			if ( stat == 1 ) {
				goto *turn_end
			}
		}
		else {
			gosub *act_melee
			goto *turn_end
		}
	}
	goto *ai_followMove
	return
