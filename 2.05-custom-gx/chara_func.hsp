#deffunc fixaiact int fixaiact_arg1
	repeat 10
		if ( cnt < RANGE_CDATA_ACT_MAIN ) {
			locvar_fixaiact_p = STARTING_CDATA_ACT_MAIN + cnt
		}
		else {
			locvar_fixaiact_p = STARTING_CDATA_ACT_SUB + cnt - RANGE_CDATA_ACT_SUB
		}
		locvar_fixaiact_i = cdata(locvar_fixaiact_p, fixaiact_arg1)
		if ( locvar_fixaiact_i == SKILL_SPELL_WIZARDS_HARVEST | locvar_fixaiact_i == SKILL_SPELL_WISH | locvar_fixaiact_i == SKILL_SPACT_MANIS_DISASSEMBLY | locvar_fixaiact_i == SKILL_SPACT_MEWMEWMEW | locvar_fixaiact_i == SKILL_SPACT_INSANE_WAVE | locvar_fixaiact_i == SKILL_SPACT_SUPER_VIBRATING_FIST | locvar_fixaiact_i == SKILL_SPACT_TEMPEST_ARROW | locvar_fixaiact_i == SKILL_SPACT_EXCESSIVE_HEAL | locvar_fixaiact_i == SKILL_SPACT_SHINE_SNAIL | locvar_fixaiact_i == SKILL_SPACT_ELEMENTIA | locvar_fixaiact_i == SKILL_SPACT_GOLD_RUSH ) {
			cdata(locvar_fixaiact_p, fixaiact_arg1) = ACTION_MELEE
		}
	loop
	repeat 10
		locvar_fixaiact_i = cdata(CDATA_ACT_HEAL, fixaiact_arg1)
		if ( locvar_fixaiact_i == SKILL_SPELL_WIZARDS_HARVEST | locvar_fixaiact_i == SKILL_SPELL_WISH | locvar_fixaiact_i == SKILL_SPACT_MANIS_DISASSEMBLY | locvar_fixaiact_i == SKILL_SPACT_MEWMEWMEW | locvar_fixaiact_i == SKILL_SPACT_INSANE_WAVE | locvar_fixaiact_i == SKILL_SPACT_SUPER_VIBRATING_FIST | locvar_fixaiact_i == SKILL_SPACT_TEMPEST_ARROW | locvar_fixaiact_i == SKILL_SPACT_EXCESSIVE_HEAL | locvar_fixaiact_i == SKILL_SPACT_SHINE_SNAIL | locvar_fixaiact_i == SKILL_SPACT_ELEMENTIA | locvar_fixaiact_i == SKILL_SPACT_GOLD_RUSH ) {
			cdata(CDATA_ACT_HEAL, fixaiact_arg1) = SKILL_SPACT_DO_NOTHING
		}
	loop
	return

#defcfunc eleinfo int eleinfo_skillid, int eleinfo_mode
	if ( eleinfo_skillid == SKILL_RES_FIRE ) {
		if ( eleinfo_mode == 0 ) {
			return COLOR_RED
		}
		else {
			return SOUNDLIST_ATK_FIRE
		}
	}
	if ( eleinfo_skillid == SKILL_RES_COLD ) {
		if ( eleinfo_mode == 0 ) {
			return COLOR_WHITE
		}
		else {
			return SOUNDLIST_ATK_ICE
		}
	}
	if ( eleinfo_skillid == SKILL_RES_LIGHTNING ) {
		if ( eleinfo_mode == 0 ) {
			return COLOR_YELLOW
		}
		else {
			return SOUNDLIST_ATK_ELEC
		}
	}
	if ( eleinfo_skillid == SKILL_RES_CHAOS ) {
		if ( eleinfo_mode == 0 ) {
			return COLOR_PURPLE
		}
		else {
			return SOUNDLIST_ATK_CHAOS
		}
	}
	if ( eleinfo_skillid == SKILL_RES_DARKNESS ) {
		if ( eleinfo_mode == 0 ) {
			return COLOR_BLUE
		}
		else {
			return SOUNDLIST_ATK_DARK
		}
	}
	if ( eleinfo_skillid == SKILL_RES_NERVE ) {
		if ( eleinfo_mode == 0 ) {
			return COLOR_SKY_BLUE
		}
		else {
			return SOUNDLIST_ATK_NERVE
		}
	}
	if ( eleinfo_skillid == SKILL_RES_SOUND ) {
		if ( eleinfo_mode == 0 ) {
			return COLOR_ORANGE
		}
		else {
			return SOUNDLIST_ATK_SOUND
		}
	}
	if ( eleinfo_skillid == SKILL_RES_MIND ) {
		if ( eleinfo_mode == 0 ) {
			return COLOR_PINK
		}
		else {
			return SOUNDLIST_ATK_MIND
		}
	}
	if ( eleinfo_skillid == SKILL_RES_POISON ) {
		if ( eleinfo_mode == 0 ) {
			return COLOR_GREEN
		}
		else {
			return SOUNDLIST_ATK_POISON
		}
	}
	if ( eleinfo_skillid == SKILL_RES_NETHER ) {
		if ( eleinfo_mode == 0 ) {
			return COLOR_BLACK
		}
		else {
			return SOUNDLIST_ATK_HELL
		}
	}
	if ( eleinfo_skillid == SKILL_RESDMG_ACID ) {
		if ( eleinfo_mode == 0 ) {
			return COLOR_GREEN
		}
		else {
			return SOUNDLIST_ATK_POISON
		}
	}
	return 0

#deffunc characreate int characreate_arg1, int characreate_arg2, int characreate_arg3, int characreate_arg4
	characreatehack = -1
	if ( characreate_arg3 == (-3) ) {
		cxinit = -1
		cyinit = -1
	}
	else {
		cxinit = characreate_arg3
		cyinit = characreate_arg4
	}
	if ( characreate_arg2 == 0 ) {
		dbid = -1
	}
	else {
		dbid = characreate_arg2
	}
	rc = characreate_arg1
	gosub *chara_init
	initlv = 0
	voidlv = 0
	characreatehack = 0
	if ( stat == 1 ) {
		if ( rc == MAX_CHARA_NC ) {
			cdata(CDATA_EXIST, rc) = CHAR_STATE_DEAD
			npcmemory(1, cdata(CDATA_ID, rc))--
			return 1
		}
		if ( rc != CHARA_PLAYER ) {
			if ( characreate_arg3 != (-1) ) {
				if ( hitugi != 100 ) {
					gosub *place_chara
				}
				else {
					gosub *place_necro
				}
			}
		}
	}
	else {
		rc = MAX_CHARA_NC
		return 0
	}
	return 1

#defcfunc relationbetween int relationbetween_arg1, int
	if ( cdata(CDATA_RELATION, relationbetween_arg1) >= (-2) ) {
		if ( cdata(CDATA_RELATION, relationbetween_arg1) <= (-3) ) {
			return -3
		}
	}
	else {
		if ( cdata(CDATA_RELATION, relationbetween_arg1) >= (-2) ) {
			return -3
		}
	}
	return 0

#defcfunc calcage int calcage_arg1
	if ( gdata(GDATA_YEAR) - cdata(CDATA_AGE, calcage_arg1) < 0 ) {
		return lang("不明", "Unknown")
	}
	if ( cdata(CDATA_ID, calcage_arg1) == CREATURE_ID_SSIL_THE_UNDEAD_WITCH ) {
		return lang("不明", "Unknown")
	}
	if ( cbit(CHARA_BIT_LITERAL_BIRTH_YEAR, calcage_arg1) ) {
		return cdata(CDATA_AGE, calcage_arg1)
	}
	return gdata(GDATA_YEAR) - cdata(CDATA_AGE, calcage_arg1)

#deffunc rowactend int rowactend_arg1
	cdata(CDATA_ROW_ACT, rowactend_arg1) = ACTION_NONE
	cdata(CDATA_ACTION_PERIOD, rowactend_arg1) = 0
	cdata(CDATA_ITEM_USING, rowactend_arg1) = 0
	if ( rowactend_arg1 == 0 ) {
		ens = 0
		ens2 = 0
	}
	return

#deffunc customtalk int customtalk_charid, int customtalk_dbmode
	locvar_customtalk_f = 0
	gdata(GDATA_CUSTOM_TALK) = 100
	chatc = customtalk_charid
	if ( cbit(CHARA_BIT_MSG_FILE, customtalk_charid) ) {
		exist exedir + "user\\talk\\" + cdatan(CDATAN_MSG, customtalk_charid)
		if ( strsize == (-1) ) {
			return 0
		}
		sdim locvar_customtalk_buff, strsize
		notesel locvar_customtalk_buff
		noteload exedir + "user\\talk\\" + cdatan(CDATAN_MSG, customtalk_charid)
		locvar_customtalk_f = 1
	}
	else {
		if ( cdata(CDATA_ID, customtalk_charid) == CREATURE_ID_USER ) {
			locvar_customtalk_f = 1
			locvar_customtalk_buff = "" + usertxt(cdata(CDATA_USERNPC_ID, customtalk_charid))
			notesel locvar_customtalk_buff
		}
	}
	if ( locvar_customtalk_f ) {
		if ( customtalk_dbmode == DBMODE_FLAVOR_ANGERED ) {
			locvar_customtalk_s = "%txtAggro"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_KILL ) {
			locvar_customtalk_s = "%txtKilled"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_DEATH ) {
			locvar_customtalk_s = "%txtDead"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_WELCOME ) {
			locvar_customtalk_s = "%txtWelcome"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_PASSIVE ) {
			locvar_customtalk_s = "%txtCalm"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_DIALOG ) {
			locvar_customtalk_s = "%txtDialog"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_NIGHT ) {
			locvar_customtalk_s = "%txtNight"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_INSULT ) {
			locvar_customtalk_s = "%txtInsult"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_KISS ) {
			locvar_customtalk_s = "%txtKiss"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_CHOCO ) {
			locvar_customtalk_s = "%txtChoco"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_DISCIPLINE ) {
			locvar_customtalk_s = "%txtDiscipline"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_DISCIPLINE_OFF ) {
			locvar_customtalk_s = "%txtDisciplineOff"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_DISCIPLINE_EAT ) {
			locvar_customtalk_s = "%txtDisciplineEat"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_CHARGE ) {
			locvar_customtalk_s = "%txtCharge"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_KIZUNA ) {
			locvar_customtalk_s = "%txtKizuna"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_CHARGE_S ) {
			locvar_customtalk_s = "%txtChargeS"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_CHARGE_A ) {
			locvar_customtalk_s = "%txtChargeA"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_NADE ) {
			locvar_customtalk_s = "%txtNade"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_HUG ) {
			locvar_customtalk_s = "%txtHug"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_SPECIAL ) {
			locvar_customtalk_s = "%txtSpecial"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_MIDNIGHT ) {
			locvar_customtalk_s = "%txtMidNight"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_INSULT2 ) {
			locvar_customtalk_s = "%txtInsult2"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_DISCIPLINE2 ) {
			locvar_customtalk_s = "%txtDiscipline2"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_RIDE_OFF ) {
			locvar_customtalk_s = "%txtRideOff"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_RIDE_OFF_PC ) {
			locvar_customtalk_s = "%txtRideOffPC"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_RIDE_ON ) {
			locvar_customtalk_s = "%txtRideOn"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_RIDE_ON_PC ) {
			locvar_customtalk_s = "%txtRideOnPC"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_FAWN_ON ) {
			locvar_customtalk_s = "%txtFawnOn"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_LIMIT ) {
			locvar_customtalk_s = "%txtLimit"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_BREAKFAST ) {
			locvar_customtalk_s = "%txtBfast"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_MATERIAL ) {
			locvar_customtalk_s = "%txtMaterial"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_MULTIPLE ) {
			locvar_customtalk_s = "%txtMultiple"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_DRAIN ) {
			locvar_customtalk_s = "%txtDrain"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_CREATE ) {
			locvar_customtalk_s = "%txtCreate"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_EX_ACT ) {
			locvar_customtalk_s = "%txtEXAct"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_EX_REACT ) {
			locvar_customtalk_s = "%txtEXReact"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_DIALOG_B ) {
			locvar_customtalk_s = "%txtDialogB"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_DIALOG_E ) {
			locvar_customtalk_s = "%txtDialogE"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_DIALOG_F ) {
			locvar_customtalk_s = "%txtDialogF"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_DIALOG_H ) {
			locvar_customtalk_s = "%txtDialogH"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_MEAL ) {
			locvar_customtalk_s = "%txtMeal"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_SHIFT ) {
			locvar_customtalk_s = "%txtShift"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_BTALK ) {
			locvar_customtalk_s = "%txtBtalk"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_MIZU_ASOBI ) {
			locvar_customtalk_s = "%txtMizuAsobi"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_MIZU_ASOBI_END ) {
			locvar_customtalk_s = "%txtMizuAsobiEnd"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_TAG ) {
			locvar_customtalk_s = "%txtTag"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_TAG_EVO ) {
			locvar_customtalk_s = "%txtTagEvo"
		}
		if ( customtalk_dbmode == DBMODE_FLAVOR_LEADING ) {
			locvar_customtalk_s = "%txtLeading"
		}
		locvar_customtalk_p = instr(locvar_customtalk_buff, 0, locvar_customtalk_s + "," + lang("JP", "EN"))
		locvar_customtalk_buff = strmid(locvar_customtalk_buff, locvar_customtalk_p, instr(locvar_customtalk_buff, locvar_customtalk_p + 1, "%"))
		if ( noteinfo(0) > 1 ) {
			if ( gdata(GDATA_AREA) == AREA_SHOW_HOUSE & customtalk_dbmode == DBMODE_FLAVOR_DIALOG & customtalk_charid > MAX_CHARA_FOLLOWER & cdata(CDATA_ID, customtalk_charid) == CREATURE_ID_USER ) {
				if ( cdata(CDATA_CUSTOM_TALK_LINE, customtalk_charid) > 100 ) {
					cdata(CDATA_CUSTOM_TALK_LINE, customtalk_charid) = 0
				}
				locvar_customtalk_p = cdata(CDATA_CUSTOM_TALK_LINE, customtalk_charid) + 1
				cdata(CDATA_CUSTOM_TALK_LINE, customtalk_charid)++
				if ( cdata(CDATA_CUSTOM_TALK_LINE, customtalk_charid) + 1 >= noteinfo(0) ) {
					cdata(CDATA_CUSTOM_TALK_LINE, customtalk_charid) = 0
				}
				noteget locvar_customtalk_s, locvar_customtalk_p
				if ( locvar_customtalk_s != "" ) {
					buff = locvar_customtalk_s
					gdata(GDATA_CUSTOM_TEXT_DIALOG) = 0
				}
			}
			else {
				locvar_customtalk_p = rnd(noteinfo(0) - 1) + 1
				noteget locvar_customtalk_s, locvar_customtalk_p
				if ( locvar_customtalk_s != "" ) {
					buff = locvar_customtalk_s
					gdata(GDATA_CUSTOM_TEXT_DIALOG) = 0
					if ( customtalk_dbmode != DBMODE_FLAVOR_DIALOG & customtalk_dbmode != DBMODE_FLAVOR_EX_ACT & customtalk_dbmode != DBMODE_FLAVOR_DIALOG_B & customtalk_dbmode != DBMODE_FLAVOR_DIALOG_E & customtalk_dbmode != DBMODE_FLAVOR_DIALOG_F & customtalk_dbmode != DBMODE_FLAVOR_DIALOG_H & customtalk_dbmode != DBMODE_FLAVOR_MEAL & customtalk_dbmode != DBMODE_FLAVOR_TAG & customtalk_dbmode != DBMODE_FLAVOR_TAG_EVO ) {
						txtef COLOR_SKY_BLUE
						gdata(GDATA_CUSTOM_TEXT_DIALOG) = 1
					}
					if ( customtalk_dbmode == DBMODE_FLAVOR_EX_ACT ) {
						iroiro = buff
					}
				}
			}
		}
		gdata(GDATA_CUSTOM_TALK) = 0
		noteunsel
		return 1
	}
	if ( customtalk_dbmode == DBMODE_FLAVOR_DIALOG | customtalk_dbmode == DBMODE_FLAVOR_DIALOG_B | customtalk_dbmode == DBMODE_FLAVOR_DIALOG_E | customtalk_dbmode == DBMODE_FLAVOR_DIALOG_F | customtalk_dbmode == DBMODE_FLAVOR_DIALOG_H | customtalk_dbmode == DBMODE_FLAVOR_MEAL | customtalk_dbmode == DBMODE_FLAVOR_TAG | customtalk_dbmode == DBMODE_FLAVOR_TAG_EVO ) {
		return 0
	}
	if ( cdata(CDATA_TXT, customtalk_charid) != 0 ) {
		dbid = cdata(CDATA_ID, customtalk_charid)
		dbmode = customtalk_dbmode
		gosub *db_creature
		return 1
	}
	return 0

#defcfunc findchara int findchara_charid
	locvar_findchara_p = 0
	repeat MAX_CHARA_TOTAL - MAX_CHARA_SAVE, MAX_CHARA_SAVE
		if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_SPIRIT ) {
			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
				continue
			}
		}
		if ( cdata(CDATA_ID, cnt) == findchara_charid ) {
			locvar_findchara_p = cnt
			break
		}
	loop
	return locvar_findchara_p

#defcfunc findcharahome int findcharahome_charaid
	locvar_findchara_p = 0
	repeat MAX_CHARA_TOTAL - MAX_CHARA_SAVE, MAX_CHARA_SAVE
		if ( cdata(CDATA_AREA, cnt) != AREA_HOME ) {
			continue
		}
		if ( cdata(CDATA_ID, cnt) == findcharahome_charaid ) {
			locvar_findchara_p = cnt
			break
		}
	loop
	return locvar_findchara_p


#defcfunc findcharawork int findcharawork_charaid
	locvar_findchara_p = 0
	repeat MAX_CHARA_TOTAL - MAX_CHARA_SAVE, MAX_CHARA_SAVE
		if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
			continue
		}
		if ( cdata(CDATA_ROLE, cnt) != ROLE_CARAVAN_MASTER ) {
			continue
		}
		if ( cdata(CDATA_ID, cnt) == findcharawork_charaid ) {
			locvar_findchara_p = cnt
			cbitmod CHARA_BIT_EVENT_TALK, cnt, TRUE
			break
		}
	loop
	return locvar_findchara_p

#defcfunc findcharaaz int findcharaaz_charid
	locvar_findchara_p = 0
	repeat MAX_CHARA_TOTAL - MAX_CHARA_SAVE, MAX_CHARA_SAVE
		if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_SPIRIT ) {
			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
				continue
			}
		}
		if ( cbit(CHARA_BIT_SUMMONED, cnt) == 1 ) {
			continue
		}
		if ( cbit(CHARA_BIT_NECRO, cnt) == 1 ) {
			continue
		}
		if ( cdata(CDATA_ID, cnt) == findcharaaz_charid ) {
			locvar_findchara_p = cnt
			break
		}
	loop
	return locvar_findchara_p

#defcfunc findcharala int findcharala_charid
	locvar_findchara_p = 0
	repeat MAX_CHARA_TOTAL
		if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
			continue
		}
		if ( cdata(CDATA_ID, cnt) == findcharala_charid ) {
			locvar_findchara_p = cnt
			break
		}
	loop
	return locvar_findchara_p

#defcfunc findunique int findunique_arg1
	locvar_findchara_p = 0
	repeat MAX_CHARA_TOTAL
		if ( cdata(CDATA_QUALITY, cnt) != FIX_QUALITY_UNIQUE ) {
			continue
		}
		if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
			continue
		}
		if ( cdata(CDATA_ID, cnt) == findunique_arg1 ) {
			locvar_findchara_p = cnt
			break
		}
	loop
	return locvar_findchara_p

#defcfunc findallyguard int findallyguard_charid
	locvar_findchara_p = -1
	repeat MAX_CHARA_FOLLOWER
		if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
			continue
		}
		if ( cbit(CHARA_BIT_GUARD_TEMP, cnt) == 0 ) {
			continue
		}
		if ( cdata(CDATA_ID, cnt) == findallyguard_charid ) {
			locvar_findchara_p = cnt
			break
		}
	loop
	return locvar_findchara_p

#defcfunc findally int findally_charid
	locvar_findchara_p = -1
	repeat MAX_CHARA_FOLLOWER
		if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
			continue
		}
		if ( cdata(CDATA_ID, cnt) == findally_charid ) {
			locvar_findchara_p = cnt
			break
		}
	loop
	return locvar_findchara_p

#defcfunc implevel int implevel_arg1
	if ( implevel_arg1 < 10 ) {
		return 0
	}
	if ( implevel_arg1 < 25 ) {
		return 1
	}
	if ( implevel_arg1 < 50 - 10 ) {
		return 2
	}
	if ( implevel_arg1 < 75 ) {
		return 3
	}
	if ( implevel_arg1 < 100 ) {
		return 4
	}
	if ( implevel_arg1 < 150 ) {
		return 5
	}
	if ( implevel_arg1 < 200 ) {
		return 6
	}
	if ( implevel_arg1 < 300 ) {
		return 7
	}
	return 8

#deffunc modimp int modimp_charid, int modimp_arg2
	locvar_modimp_p = implevel(cdata(CDATA_IMPRESSION, modimp_charid))
	if ( modimp_arg2 < 0 ) {
		locvar_modimp_i = modimp_arg2
	}
	else {
		locvar_modimp_i = modimp_arg2 * 100 / (50 + locvar_modimp_p * locvar_modimp_p * locvar_modimp_p)
		if ( locvar_modimp_i == 0 ) {
			if ( locvar_modimp_p < rnd(10) ) {
				locvar_modimp_i = 1
			}
		}
	}
	cdata(CDATA_IMPRESSION, modimp_charid) += locvar_modimp_i
	if ( cdata(CDATA_IMPRESSION, modimp_charid) > 400 ) {
		cdata(CDATA_IMPRESSION, modimp_charid) = 400
	}
	locvar_modimp_p(1) = implevel(cdata(CDATA_IMPRESSION, modimp_charid))
	if ( locvar_modimp_p > locvar_modimp_p(1) ) {
		txtef COLOR_PURPLE
		txt lang(cdatan(CDATAN_NAME, modimp_charid) + "との関係が<" + _impression(locvar_modimp_p(1)) + ">になった…", "Your relation with " + cdatan(CDATAN_NAME, modimp_charid) + " becomes <" + _impression(locvar_modimp_p(1)) + ">...")
		return
	}
	if ( locvar_modimp_p(1) > locvar_modimp_p ) {
		if ( cdata(CDATA_RELATION, modimp_charid) != (-3) ) {
			txtef COLOR_GREEN
			txt lang(cdatan(CDATAN_NAME, modimp_charid) + "との関係が<" + _impression(locvar_modimp_p(1)) + ">になった！", "Your relation with " + cdatan(CDATAN_NAME, modimp_charid) + " becomes <" + _impression(locvar_modimp_p(1)) + ">!")
		}
		return
	}
	return

#defcfunc implevel2 int implevel2_arg1
	if ( implevel2_arg1 < (-100) ) {
		return 0
	}
	if ( implevel2_arg1 < 0 ) {
		return 1
	}
	if ( implevel2_arg1 < 100 ) {
		return 2
	}
	if ( implevel2_arg1 < 150 ) {
		return 3
	}
	if ( implevel2_arg1 < 200 ) {
		return 4
	}
	if ( implevel2_arg1 < 250 ) {
		return 5
	}
	if ( implevel2_arg1 < 300 ) {
		return 6
	}
	return 7

#deffunc modimp2 int modimp2_charid, int modimp2_arg2
	locvar_modimp2_p = implevel2(cdata(CDATA_MASTER_SERVANT, modimp2_charid))
	if ( modimp2_arg2 < 0 ) {
		locvar_modimp2_i = modimp2_arg2
	}
	else {
		locvar_modimp2_i = modimp2_arg2 * 100 / (50 + locvar_modimp2_p * locvar_modimp2_p * locvar_modimp2_p)
		if ( locvar_modimp2_i == 0 ) {
			if ( locvar_modimp2_p < rnd(10) ) {
				locvar_modimp2_i = 1
			}
		}
	}
	cdata(CDATA_MASTER_SERVANT, modimp2_charid) += locvar_modimp2_i
	if ( cdata(CDATA_MASTER_SERVANT, modimp2_charid) > 300 ) {
		cdata(CDATA_MASTER_SERVANT, modimp2_charid) = 300
	}
	if ( cdata(CDATA_MASTER_SERVANT, modimp2_charid) < (-300) ) {
		cdata(CDATA_MASTER_SERVANT, modimp2_charid) = -300
	}
	locvar_modimp2_p(1) = implevel2(cdata(CDATA_MASTER_SERVANT, modimp2_charid))
	if ( locvar_modimp2_i > 0 ) {
		item_find ITEM_ID_CANDLE_OF_LULWY, 3, 1
		if ( stat != (-1) ) {
			if ( inv(INV_ITEM_NUM, stat) >= 1 ) {
				snd SOUNDLIST_WATER2
				txtef COLOR_RED
				txt lang(cdatan(CDATAN_NAME, modimp2_charid) + "に媚赤蝋燭を垂らした。「あちち♪」", "You drip wax on " + cdatan(CDATAN_NAME, modimp2_charid) + " from the Candle of Lulwy. \"Hot hot hot~\"")
				if ( cdata(CDATA_IMPRESSION, modimp2_charid) < 150 ) {
					modimp modimp2_charid, 4
				}
				cdata(CDATA_EMO_ICON, modimp2_charid) = 17 + 100 * 3
			}
		}
	}
	if ( locvar_modimp2_p > locvar_modimp2_p(1) ) {
		txtef COLOR_YELLOW
		txt lang(cdatan(CDATAN_NAME, modimp2_charid) + "との主従関係が<" + _impression2(locvar_modimp2_p(1)) + ">になった。", "Your master/servant relationship with " + cdatan(CDATAN_NAME, modimp2_charid) + " becomes <" + _impression2(locvar_modimp2_p(1)) + ">.")
		return
	}
	if ( locvar_modimp2_p(1) > locvar_modimp2_p ) {
		if ( cdata(CDATA_RELATION, modimp2_charid) != (-3) ) {
			txtef COLOR_YELLOW
			txt lang(cdatan(CDATAN_NAME, modimp2_charid) + "との主従関係が<" + _impression2(locvar_modimp2_p(1)) + ">になった。！", "Your master/servant relationship with " + cdatan(CDATAN_NAME, modimp2_charid) + " becomes <" + _impression2(locvar_modimp2_p(1)) + ">.")
		}
		return
	}
	return

#deffunc put_questtarget
	repeat MAX_CHARA_TOTAL - MAX_CHARA_SAVE, MAX_CHARA_SAVE
		if ( cdata(CDATA_EXIST, cnt) == CHAR_STATE_ALIVE ) {
			cbitmod CHARA_BIT_QUEST_TARGET, cnt, 1
			cdata(CDATA_RELATION, cnt) = -3
		}
	loop
	return

#defcfunc exist_questtarget
	locvar_exist_questtarget_f = 0
	repeat MAX_CHARA_TOTAL - MAX_CHARA_SAVE, MAX_CHARA_SAVE
		if ( cdata(CDATA_EXIST, cnt) == CHAR_STATE_ALIVE ) {
			if ( cbit(CHARA_BIT_QUEST_TARGET, cnt) == 1 ) {
				locvar_exist_questtarget_f++
			}
		}
	loop
	return locvar_exist_questtarget_f

#deffunc check_quest
	if ( gdata(GDATA_AREA) == AREA_VERNIS ) {
		if ( gdata(GDATA_LEVEL) == 3 ) {
			if ( exist_questtarget() == 0 ) {
				if ( gdata(GDATA_FLAG_SUB_SLIME) < 2 ) {
					gdata(GDATA_FLAG_SUB_SLIME) = 2
					txt_questupdate
				}
			}
		}
		if ( gdata(GDATA_LEVEL) == 4 ) {
			if ( exist_questtarget() == 0 ) {
				if ( gdata(GDATA_FLAG_SUB_ROGUE) < 2 ) {
					gdata(GDATA_FLAG_SUB_ROGUE) = 2
					txt_questupdate
				}
			}
		}
		if ( gdata(GDATA_LEVEL) == 5 ) {
			if ( exist_questtarget() == 0 ) {
				if ( gdata(GDATA_FLAG_SUB_NIGHTMARE) < 3 ) {
					gdata(GDATA_FLAG_SUB_NIGHTMARE) = 3
					txt_questupdate
				}
			}
		}
	}
	if ( gdata(GDATA_AREA) == AREA_YOWYN ) {
		if ( gdata(GDATA_LEVEL) == 3 ) {
			if ( exist_questtarget() == 0 ) {
				if ( gdata(GDATA_FLAG_SUB_CAT) < 2 ) {
					gdata(GDATA_FLAG_SUB_CAT) = 2
					txt_questupdate
				}
			}
		}
		if ( gdata(GDATA_LEVEL) == 4 ) {
			if ( exist_questtarget() == 0 ) {
				if ( gdata(GDATA_FLAG_SUB_WAR) < 3 ) {
					gdata(GDATA_FLAG_SUB_WAR) = 3
					txt_questupdate
				}
			}
		}
	}
	if ( gdata(GDATA_AREA) == AREA_LUMIEST ) {
		if ( gdata(GDATA_LEVEL) == 20 ) {
			if ( exist_questtarget() == 0 ) {
				if ( gdata(GDATA_FLAG_SUB_SEWER) < 2 ) {
					gdata(GDATA_FLAG_SUB_SEWER) = 2
					txt_questupdate
				}
			}
		}
	}
	if ( gdata(GDATA_AREA) == AREA_EIREL ) {
		if ( gdata(GDATA_LEVEL) == 3 ) {
			if ( exist_questtarget() == 0 ) {
				if ( gdata(GDATA_FLAG_SUB_DIVERSIONARY_TACTICS) < 3 ) {
					gdata(GDATA_FLAG_SUB_DIVERSIONARY_TACTICS) = 3
					txt_questupdate
				}
			}
		}
	}
	if ( gdata(GDATA_AREA) == AREA_RUOZA ) {
		if ( gdata(GDATA_LEVEL) == 3 ) {
			if ( exist_questtarget() == 0 ) {
				if ( gdata(GDATA_FLAG_SUB_THE_RESULT_OF_REVENGE) < 2 ) {
					gdata(GDATA_FLAG_SUB_THE_RESULT_OF_REVENGE) = 2
					txt_questupdate
				}
			}
		}
		if ( gdata(GDATA_LEVEL) == 10 ) {
			if ( exist_questtarget() == 0 ) {
				if ( gdata(GDATA_FLAG_SUB_THE_RESULT_OF_REVENGE) < 1002 ) {
					gdata(GDATA_FLAG_SUB_THE_RESULT_OF_REVENGE) = 1002
					snd SOUNDLIST_WRITE1
					txt lang("マーチは壊滅した。", "March was destroyed.")
				}
			}
		}
	}
	if ( gdata(GDATA_AREA) == AREA_HARVEST_SHIP ) {
		if ( gdata(GDATA_LEVEL) == 141 ) {
			if ( exist_questtarget() == 0 ) {
				if ( gdata(GDATA_FLAG_SUB_THE_DISTANT_SEA_OF_STARS) < 3 ) {
					gdata(GDATA_FLAG_SUB_THE_DISTANT_SEA_OF_STARS) = 3
					txt_questupdate
				}
			}
		}
	}
	if ( gdata(GDATA_AREA) == AREA_KURUALM ) {
		if ( gdata(GDATA_LEVEL) == 3 ) {
			if ( exist_questtarget() == 0 ) {
				if ( gdata(GDATA_FLAG_SUB_PIRATE_HUNTING) < 3 ) {
					gdata(GDATA_FLAG_SUB_PIRATE_HUNTING) = 3
					txt_questupdate
				}
			}
		}
		if ( gdata(GDATA_LEVEL) == 5 ) {
			if ( exist_questtarget() == 0 ) {
				if ( gdata(GDATA_FLAG_SUB_LAW_OF_NINJAS) < 3 ) {
					gdata(GDATA_FLAG_SUB_LAW_OF_NINJAS) = 3
					txt_questupdate
					txt lang("？？？「あいつ…ここまで本気とはな。多少荒っぽい手を使わざるを得ないか」", "??? says: \"You.. you really made it this far, huh. We're going to have to get serious.\"")
				}
			}
		}
	}
	if ( gdata(GDATA_AREA) == AREA_MELUGAS ) {
		if ( gdata(GDATA_LEVEL) == 3 ) {
			if ( exist_questtarget() == 0 ) {
				if ( gdata(GDATA_FLAG_SUB_JUERES_IMPERTINENCE) < 2 ) {
					gdata(GDATA_FLAG_SUB_JUERES_IMPERTINENCE) = 2
					txt_questupdate
				}
			}
		}
	}
	if ( gdata(GDATA_AREA) == AREA_LUDUS ) {
		if ( gdata(GDATA_LEVEL) == 3 ) {
			if ( exist_questtarget() == 0 ) {
				if ( gdata(GDATA_FLAG_SUB_H_SISTER) < 2 ) {
					gdata(GDATA_FLAG_SUB_H_SISTER) = 2
					txt_questupdate
				}
			}
		}
	}
	if ( gdata(GDATA_AREA) == AREA_NT_SOUTH_BORDER ) {
		if ( gdata(GDATA_LEVEL) == 100 ) {
			if ( exist_questtarget() == 0 ) {
				if ( gdata(GDATA_FLAG_SUB_REGULUS_ZANAN) < 100 ) {
					gdata(GDATA_FLAG_SUB_REGULUS_ZANAN) = 100
					txt_questupdate
				}
			}
		}
	}
	if ( gdata(GDATA_QUEST) == QUEST_TYPE_NONE ) {
		return
	}
	if ( gdata(GDATA_QUEST_STATUS) != QUEST_STATE_SUCCESS ) {
		if ( gdata(GDATA_QUEST_TYPE) == 1 ) {
			locvar_check_quest_p = 0
			repeat MAX_CHARA_TOTAL - MAX_CHARA_SAVE, MAX_CHARA_SAVE
				if ( cdata(CDATA_RELATION_ORG, cnt) == (-3) ) {
					if ( cdata(CDATA_EXIST, cnt) == CHAR_STATE_ALIVE ) {
						if ( cbit(CHARA_BIT_SUMMONED, cnt) != 1 ) {
							if ( cbit(CHARA_BIT_NECRO, cnt) != 1 ) {
								locvar_check_quest_p++
							}
						}
					}
				}
			loop
			if ( locvar_check_quest_p == 0 ) {
				if ( gdata(GDATA_TIME_STOP_TIME) > 0 ) {
					gdata(GDATA_TIME_STOP_TIME) = 0
					txtef COLOR_SKY_BLUE
					txt lang("時は再び動き出した。", "Time starts to run again.")
				}
				if ( gdata(GDATA_FLAG_STOP_TIME_OTHER) > 0 ) {
					gdata(GDATA_FLAG_STOP_TIME_OTHER) = 0
				}
				gdata(GDATA_QUEST_STATUS) = QUEST_STATE_SUCCESS
				evadd EVENT_QUEST_ELEMINATE
			}
			else {
				txtmore
				txtef COLOR_BLUE
				txt lang("[殲滅依頼]残り" + locvar_check_quest_p + "体" + "] ", "" + locvar_check_quest_p + " more to go.")
			}
		}
		if ( gdata(GDATA_QUEST) == QUEST_TYPE_CONQUER ) {
			if ( findcharaaz(qdata(QDATA_PARAM1, gdata(GDATA_QUEST_REF))) == 0 ) {
				if ( gdata(GDATA_TIME_STOP_TIME) > 0 ) {
					gdata(GDATA_TIME_STOP_TIME) = 0
					txtef COLOR_SKY_BLUE
					txt lang("時は再び動き出した。", "Time starts to run again.")
				}
				if ( gdata(GDATA_FLAG_STOP_TIME_OTHER) > 0 ) {
					gdata(GDATA_FLAG_STOP_TIME_OTHER) = 0
				}
				evadd EVENT_QUEST_ELEMINATE
			}
		}
	}
	return

#deffunc refreshspeed int refreshspeed_arg1
	cdata(CDATA_SPEED, refreshspeed_arg1) = sdata(SKILL_ATTR_SPD, refreshspeed_arg1)
	if ( cdata(CDATA_BODY_SPEED_FIX, refreshspeed_arg1) != 0 ) {
		if ( cdata(CDATA_SHIFT_FORM, refreshspeed_arg1) != SHIFT_FORM_GAMMA ) {
			cdata(CDATA_SPEED, refreshspeed_arg1) = sdata(SKILL_ATTR_SPD, refreshspeed_arg1) * limit(100 - cdata(CDATA_BODY_SPEED_FIX, refreshspeed_arg1), 0, 100) / 100
		}
	}
	if ( cdata(CDATA_SPEED, refreshspeed_arg1) < 10 ) {
		cdata(CDATA_SPEED, refreshspeed_arg1) = 10
	}
	if ( cdata(CDATA_CONDITION_OIL, refreshspeed_arg1) == 0 ) {
		inv_find ITEM_ID_MAGAQUA, refreshspeed_arg1
		if ( stat != (-1) ) {
			cdata(CDATA_CONDITION_WET, refreshspeed_arg1) = 31
		}
	}
	if ( gdata(GDATA_WORLD) == AREA_SOUTH_TYRIS & gdata(GDATA_WORLD_X) > 55 & gdata(GDATA_WORLD_Y) > 32 ) {
		cdata(CDATA_CONDITION_WET, refreshspeed_arg1) = 0
	}
	if ( gdata(GDATA_WORLD) == AREA_LOST_YLVA & gdata(GDATA_WORLD_X) > 39 & gdata(GDATA_WORLD_Y) > 33 ) {
		cdata(CDATA_CONDITION_WET, refreshspeed_arg1) = 0
	}
	if ( cdata(CDATA_CONDITION_WET, refreshspeed_arg1) > 0 ) {
		if ( cdata(CDATA_ID, refreshspeed_arg1) == CREATURE_ID_FIN_CROCODILE ) {
			cdata(CDATA_SPEED, refreshspeed_arg1) += sdata(SKILL_NORMAL_SWIMMING, refreshspeed_arg1) * 3 / 5
		}
		else {
			cdata(CDATA_SPEED, refreshspeed_arg1) += sdata(SKILL_NORMAL_SWIMMING, refreshspeed_arg1) * 2 / 5
		}
	}
	if ( refreshspeed_arg1 != 0 ) {
		if ( cdata(CDATA_SP, refreshspeed_arg1) < 0 ) {
			cdata(CDATA_SPEED, refreshspeed_arg1) = cdata(CDATA_SPEED, refreshspeed_arg1) * 7 / 10
		}
	}
	if ( refreshspeed_arg1 != 0 ) {
		if ( cdata(CDATA_SP, refreshspeed_arg1) >= 0 & cdata(CDATA_SP, refreshspeed_arg1) < 25 ) {
			cdata(CDATA_SPEED, refreshspeed_arg1) = cdata(CDATA_SPEED, refreshspeed_arg1) * 8 / 10
		}
	}
	if ( refreshspeed_arg1 != 0 ) {
		if ( cdata(CDATA_SP, refreshspeed_arg1) >= 25 & cdata(CDATA_SP, refreshspeed_arg1) < 50 ) {
			cdata(CDATA_SPEED, refreshspeed_arg1) = cdata(CDATA_SPEED, refreshspeed_arg1) * 9 / 10
		}
	}
	if ( cdata(CDATA_IN_TAGTEAM, refreshspeed_arg1) != 0 ) {
		cdata(CDATA_SPEED, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) = sdata(SKILL_ATTR_SPD, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1))
		if ( cdata(CDATA_BODY_SPEED_FIX, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) != 0 ) {
			if ( cdata(CDATA_SHIFT_FORM, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) != SHIFT_FORM_GAMMA ) {
				cdata(CDATA_SPEED, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) = sdata(SKILL_ATTR_SPD, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) * limit(100 - cdata(CDATA_BODY_SPEED_FIX, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)), 0, 100) / 100
			}
		}
		if ( cdata(CDATA_SPEED, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) < 10 ) {
			cdata(CDATA_SPEED, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) = 10
		}
		if ( cdata(CDATA_CONDITION_OIL, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) == 0 ) {
			inv_find ITEM_ID_MAGAQUA, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)
			if ( stat != (-1) ) {
				cdata(CDATA_CONDITION_WET, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) = 31
			}
		}
		if ( gdata(GDATA_WORLD) == AREA_SOUTH_TYRIS & gdata(GDATA_WORLD_X) > 55 & gdata(GDATA_WORLD_Y) > 32 ) {
			cdata(CDATA_CONDITION_WET, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) = 0
		}
		if ( gdata(GDATA_WORLD) == AREA_LOST_YLVA & gdata(GDATA_WORLD_X) > 39 & gdata(GDATA_WORLD_Y) > 33 ) {
			cdata(CDATA_CONDITION_WET, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) = 0
		}
		if ( cdata(CDATA_CONDITION_WET, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) > 0 ) {
			cdata(CDATA_SPEED, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) += sdata(SKILL_NORMAL_SWIMMING, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) * 1 / 2
		}
		if ( cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1) != 0 ) {
			if ( cdata(CDATA_SP, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) < 0 ) {
				cdata(CDATA_SPEED, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) = cdata(CDATA_SPEED, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) * 7 / 10
			}
		}
		if ( cdata(CDATA_TAGTEAM_PARTNER, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) != 0 ) {
			if ( cdata(CDATA_SP, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) >= 0 & cdata(CDATA_SP, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) < 25 ) {
				cdata(CDATA_SPEED, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) = cdata(CDATA_SPEED, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) * 8 / 10
			}
		}
		if ( cdata(CDATA_TAGTEAM_PARTNER, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) != 0 ) {
			if ( cdata(CDATA_SP, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) >= 25 & cdata(CDATA_SP, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) < 50 ) {
				cdata(CDATA_SPEED, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) = cdata(CDATA_SPEED, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) * 9 / 10
			}
		}
		if ( cdata(CDATA_SPEED, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) < cdata(CDATA_SPEED, refreshspeed_arg1) ) {
			cdata(CDATA_SPEED, refreshspeed_arg1) = cdata(CDATA_SPEED, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1))
		}
		if ( cdata(CDATA_SPEED, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) > cdata(CDATA_SPEED, refreshspeed_arg1) ) {
			cdata(CDATA_SPEED, cdata(CDATA_TAGTEAM_PARTNER, refreshspeed_arg1)) = cdata(CDATA_SPEED, refreshspeed_arg1)
		}
	}
	cdata(CDATA_SPEED_FIX, refreshspeed_arg1) = 0
	if ( trait(TRAIT_NORMAL_OTHER_INDEPENDENT) ) {
		if ( refreshspeed_arg1 == 0 ) {
			locvar_refreshspeed_alone = 0
			repeat MAX_CHARA_TOTAL
				if ( cnt == CHARA_PLAYER ) {
					continue
				}
				if ( cdata(CDATA_RELATION, cnt) != 10 ) {
					continue
				}
				if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
					continue
				}
				locvar_refreshspeed_alone = 10
				break
			loop
			if ( locvar_refreshspeed_alone == 0 ) {
				cdata(CDATA_SPEED, refreshspeed_arg1) += sorg(SKILL_ATTR_SPD, CHARA_PLAYER) / 5
			}
		}
	}
	if ( refreshspeed_arg1 != 0 ) {
		if ( gdata(GDATA_RIDER) != refreshspeed_arg1 ) {
			return
		}
	}
	if ( gdata(GDATA_RIDER) != 0 ) {
		if ( cdata(CDATA_RIDING, gdata(GDATA_RIDER)) == 0 ) {
			cdata(CDATA_SPEED, CHARA_PLAYER) = sdata(SKILL_ATTR_SPD, gdata(GDATA_RIDER)) * 100 / limit(100 + sdata(SKILL_ATTR_SPD, gdata(GDATA_RIDER)) - sdata(SKILL_ATTR_STR, gdata(GDATA_RIDER)) * 3 / 2 - sdata(SKILL_ACTIVE_RIDING, gdata(GDATA_RIDER)) * 1 / 2 - sdata(SKILL_ACTIVE_RIDING, CHARA_PLAYER) * 2 - (cbit(CHARA_BIT_SUPERIOR_RIDING, gdata(GDATA_RIDER)) == TRUE) * 50, 100, 1000000)
			if ( cbit(CHARA_BIT_INFERIOR_RIDING, gdata(GDATA_RIDER)) ) {
				cdata(CDATA_SPEED, CHARA_PLAYER) /= 10
			}
			if ( gdata(GDATA_RIDER) == refreshspeed_arg1 ) {
				cdata(CDATA_SPEED, refreshspeed_arg1) = limit(sdata(SKILL_ATTR_STR, refreshspeed_arg1) + sdata(SKILL_ACTIVE_RIDING, CHARA_PLAYER), 10, sdata(SKILL_ATTR_SPD, refreshspeed_arg1))
				return
			}
		}
		if ( cdata(CDATA_RIDING, gdata(GDATA_RIDER)) == 1 ) {
			cdata(CDATA_SPEED, CHARA_PLAYER) = limit(sdata(SKILL_ATTR_STR, CHARA_PLAYER) + sdata(SKILL_ACTIVE_RIDING, gdata(GDATA_RIDER)), 10, sdata(SKILL_ATTR_SPD, CHARA_PLAYER))
			if ( gdata(GDATA_RIDER) == refreshspeed_arg1 ) {
				cdata(CDATA_SPEED, refreshspeed_arg1) = sdata(SKILL_ATTR_SPD, CHARA_PLAYER) * 100 / limit(100 + sdata(SKILL_ATTR_SPD, CHARA_PLAYER) - sdata(SKILL_ATTR_STR, CHARA_PLAYER) * 3 / 2 - sdata(SKILL_ACTIVE_RIDING, CHARA_PLAYER) * 1 / 2 - sdata(SKILL_ACTIVE_RIDING, refreshspeed_arg1) * 2, 100, 1000000)
				if ( cdata(CDATA_SPEED, refreshspeed_arg1) > sdata(SKILL_ATTR_SPD, refreshspeed_arg1) * 3 ) {
					cdata(CDATA_SPEED, refreshspeed_arg1) = sdata(SKILL_ATTR_SPD, refreshspeed_arg1) * 3
				}
				return
			}
		}
	}
	gspdorg = sorg(SKILL_ATTR_SPD, CHARA_PLAYER)
	if ( gdata(GDATA_RIDER) == 0 ) {
		locvar_refreshspeed_r = cdata(CDATA_HUNGER, CHARA_PLAYER) / 1000 * 1000
		if ( locvar_refreshspeed_r < 1000 ) {
			cdata(CDATA_SPEED_FIX, CHARA_PLAYER) -= 30
		}
		if ( locvar_refreshspeed_r < 2000 ) {
			cdata(CDATA_SPEED_FIX, CHARA_PLAYER) -= 10
		}
		if ( cdata(CDATA_SP, CHARA_PLAYER) < 0 ) {
			cdata(CDATA_SPEED_FIX, CHARA_PLAYER) -= 30
		}
		if ( cdata(CDATA_SP, CHARA_PLAYER) < 25 ) {
			cdata(CDATA_SPEED_FIX, CHARA_PLAYER) -= 20
		}
		if ( cdata(CDATA_SP, CHARA_PLAYER) < 50 ) {
			cdata(CDATA_SPEED_FIX, CHARA_PLAYER) -= 10
		}
	}
	if ( cdata(CDATA_BURDEN, CHARA_PLAYER) >= 3 ) {
		cdata(CDATA_SPEED_FIX, CHARA_PLAYER) -= 50
	}
	if ( cdata(CDATA_BURDEN, CHARA_PLAYER) == 2 ) {
		cdata(CDATA_SPEED_FIX, CHARA_PLAYER) -= 30
	}
	if ( cdata(CDATA_BURDEN, CHARA_PLAYER) == 1 ) {
		cdata(CDATA_SPEED_FIX, CHARA_PLAYER) -= 10
	}
	if ( gdata(GDATA_FLAG_MOST_EXPENSIVE_WORLD_MAP_VEHICLE_THIS_MONTH) < gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_KIND) ) {
		gdata(GDATA_FLAG_MOST_EXPENSIVE_WORLD_MAP_VEHICLE_THIS_MONTH) = gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_KIND)
	}
	if ( gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_KIND) == VEHICLE_NONE ) {
		if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD | mdata(MDATA_TYPE) == MAP_TYPE_LOCAL ) {
			if ( gdata(GDATA_CARGO_WEIGHT) > gdata(GDATA_CARGO_LIMIT) ) {
				cdata(CDATA_SPEED_FIX, CHARA_PLAYER) -= 25 + 25 * (gdata(GDATA_CARGO_WEIGHT) / (gdata(GDATA_CARGO_LIMIT) + 1))
			}
		}
	}
	if ( gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_KIND) >= VEHICLE_CARRIAGE & gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_KIND) <= VEHICLE_TRUCK ) {
		if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
			if ( gdata(GDATA_CARGO_WEIGHT) > gdata(GDATA_CARGO_LIMIT) ) {
				cdata(CDATA_SPEED_FIX, CHARA_PLAYER) -= 25 + 25 * (gdata(GDATA_CARGO_WEIGHT) / (gdata(GDATA_CARGO_LIMIT) + 1))
			}
		}
	}
	if ( gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_KIND) >= VEHICLE_MAGIC_LOCOMOTIVE & gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_KIND) <= VEHICLE_LAND_BATTLESHIP ) {
		if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
			if ( gdata(GDATA_CARGO_WEIGHT) > gdata(GDATA_CARGO_LIMIT) ) {
				cdata(CDATA_SPEED_FIX, CHARA_PLAYER) -= (25 + 25 * (gdata(GDATA_CARGO_WEIGHT) / (gdata(GDATA_CARGO_LIMIT) + 1))) / 2
			}
		}
	}
	gspd = cdata(CDATA_SPEED, CHARA_PLAYER) * (100 + cdata(CDATA_TIME_SCALE, CHARA_PLAYER)) / 100
	if ( gspd < 10 ) {
		gspd = 10
	}
	return

#deffunc tag_begin int tag_begin_arg1, int tag_begin_arg2
	txtef COLOR_YELLOW
	txt lang(cdatan(CDATAN_NAME, tag_begin_arg1) + "は" + cdatan(CDATAN_NAME, tag_begin_arg2) + "とタッグを組んだ。", cdatan(CDATAN_NAME, tag_begin_arg1) + " and " + cdatan(CDATAN_NAME, tag_begin_arg2) + " form a tag-team.")
	map(cdata(CDATA_X, tag_begin_arg2), cdata(CDATA_Y, tag_begin_arg2), 1) = 0
	cdata(CDATA_TAGTEAM_PARTNER, tag_begin_arg2) = tag_begin_arg1
	cdata(CDATA_IN_TAGTEAM, tag_begin_arg2) = 1
	cdata(CDATA_TAGTEAM_PARTNER, tag_begin_arg1) = tag_begin_arg2
	cdata(CDATA_IN_TAGTEAM, tag_begin_arg1) = -1
	rowactend tag_begin_arg1
	rowactend tag_begin_arg2
	refreshspeed tag_begin_arg1
	refreshspeed tag_begin_arg2
	return

#deffunc tag_end int tag_end_arg1
	locvar_tag_end_ttc = cdata(CDATA_TAGTEAM_PARTNER, tag_end_arg1)
	txt lang(cdatan(CDATAN_NAME, tag_end_arg1) + "と" + cdatan(CDATAN_NAME, locvar_tag_end_ttc) + "は解散した。", "You were disbanded " + cdatan(CDATAN_NAME, tag_end_arg1) + " with " + cdatan(CDATAN_NAME, locvar_tag_end_ttc) + ".")
	cdata(CDATA_TAGTEAM_PARTNER, locvar_tag_end_ttc) = -1
	cdata(CDATA_IN_TAGTEAM, locvar_tag_end_ttc) = 0
	cdata(CDATA_TAGTEAM_PARTNER, tag_end_arg1) = -1
	cdata(CDATA_IN_TAGTEAM, tag_end_arg1) = 0
	rowactend tag_end_arg1
	rowactend locvar_tag_end_ttc
	refreshspeed tag_end_arg1
	refreshspeed locvar_tag_end_ttc
	return

#deffunc ride_begin int ride_begin_arg1
	if ( cdata(CDATA_RIDING, ride_begin_arg1) == 0 ) {
		txt lang(name(ride_begin_arg1) + "に騎乗した(" + name(ride_begin_arg1) + "の速度: " + cdata(CDATA_SPEED, ride_begin_arg1) + "→", "You ride " + name(ride_begin_arg1) + ". (" + name(ride_begin_arg1) + "'s speed: " + cdata(CDATA_SPEED, ride_begin_arg1) + "->")
	}
	if ( cdata(CDATA_RIDING, ride_begin_arg1) == 1 ) {
		txt lang(name(ride_begin_arg1) + "を乗せた(" + name(ride_begin_arg1) + "の速度: " + cdata(CDATA_SPEED, ride_begin_arg1) + "→", name(ride_begin_arg1) + " rides you. (" + name(ride_begin_arg1) + "'s speed: " + cdata(CDATA_SPEED, ride_begin_arg1) + "->")
	}
	cbitmod CHARA_BIT_RIDE, ride_begin_arg1, 1
	map(cdata(CDATA_X, ride_begin_arg1), cdata(CDATA_Y, ride_begin_arg1), 1) = 0
	gdata(GDATA_RIDER) = ride_begin_arg1
	create_pcpic 0, 1
	rowactend gdata(GDATA_RIDER)
	refreshspeed gdata(GDATA_RIDER)
	txt "" + cdata(CDATA_SPEED, ride_begin_arg1) + ") "
	if ( cdata(CDATA_RIDING, gdata(GDATA_RIDER)) == 0 ) {
		if ( cbit(CHARA_BIT_SUPERIOR_RIDING, gdata(GDATA_RIDER)) ) {
			txt lang("この生物は乗馬用にちょうどいい！", "You feel comfortable.")
		}
	}
	if ( cdata(CDATA_RIDING, gdata(GDATA_RIDER)) == 0 ) {
		if ( cbit(CHARA_BIT_INFERIOR_RIDING, gdata(GDATA_RIDER)) ) {
			txt lang("この生物はあなたを乗せるには非力すぎる。", "This creature is too weak to carry you.")
		}
	}
	return

#deffunc ride_end
	cbitmod CHARA_BIT_RIDE, gdata(GDATA_RIDER), 0
	rowactend gdata(GDATA_RIDER)
	locvar_ride_end_p = gdata(GDATA_RIDER)
	gdata(GDATA_RIDER) = 0
	create_pcpic 0, 1
	refreshspeed locvar_ride_end_p
	return

#deffunc chara_vanquish int chara_vanquish_charid
	if ( cdata(CDATA_IN_TAGTEAM, chara_vanquish_charid) != 0 ) {
		locvar_chara_vanquish_ttc = cdata(CDATA_TAGTEAM_PARTNER, chara_vanquish_charid)
		map(cdata(CDATA_X, chara_vanquish_charid), cdata(CDATA_Y, chara_vanquish_charid), 1) = locvar_chara_vanquish_ttc + 1
		cdata(CDATA_X, locvar_chara_vanquish_ttc) = cdata(CDATA_X, chara_vanquish_charid)
		cdata(CDATA_Y, locvar_chara_vanquish_ttc) = cdata(CDATA_Y, chara_vanquish_charid)
		tag_end chara_vanquish_charid
	}
	if ( chara_vanquish_charid == gdata(GDATA_RIDER) ) {
		ride_end
	}
	else {
		if ( cdata(CDATA_EXIST, chara_vanquish_charid) == CHAR_STATE_ALIVE | cdata(CDATA_EXIST, chara_vanquish_charid) == CHAR_STATE_TEMP ) {
			map(cdata(CDATA_X, chara_vanquish_charid), cdata(CDATA_Y, chara_vanquish_charid), 1) = 0
		}
	}
	cdata(CDATA_EXIST, chara_vanquish_charid) = CHAR_STATE_DEAD
	cdata(CDATA_ROLE, chara_vanquish_charid) = ROLE_NONE
	if ( cbit(CHARA_BIT_NECRO, chara_vanquish_charid) != 1 ) {
		check_quest
	}
	return

#deffunc turn_aggro int turn_aggro_arg1, int turn_aggro_arg2, int turn_aggro_arg3
	if ( turn_aggro_arg2 < MAX_CHARA_FOLLOWER ) {
		cdata(CDATA_RELATION, turn_aggro_arg1) = -3
	}
	cdata(CDATA_AI_AGGRO, turn_aggro_arg1) = turn_aggro_arg3
	cdata(CDATA_EMO_ICON, turn_aggro_arg1) = 18 + 100 * 2
	cdata(CDATA_TARGET, turn_aggro_arg1) = turn_aggro_arg2
	return

#deffunc make_sound int make_sound_arg1, int make_sound_arg2, int make_sound_arg3, int make_sound_arg4, int make_sound_arg5, int make_sound_arg6
	repeat MAX_CHARA_TOTAL - 1, 1
		if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
			continue
		}
		if ( cdata(CDATA_CONDITION_DIM, cnt) > 60 ) {
			continue
		}
		if ( dist(make_sound_arg1, make_sound_arg2, cdata(CDATA_X, cnt), cdata(CDATA_Y, cnt)) < make_sound_arg3 ) {
			if ( rnd(make_sound_arg4) == 0 ) {
				if ( cdata(CDATA_CONDITION_SLEEP, cnt) != 0 ) {
					cdata(CDATA_CONDITION_SLEEP, cnt) = 0
					if ( synccheck(cnt, -1) ) {
						txt lang(name(cnt) + "は物音に気付き目を覚ました。", name(cnt) + " notice" + _s(cnt) + " the sound and wake" + _s(cnt) + " up.")
					}
					cdata(CDATA_EMO_ICON, cnt) = 21 + 100 * 2
					if ( make_sound_arg5 ) {
						if ( cdata(CDATA_ALLIED, cnt) == 0 ) {
							if ( rnd(500) == 0 ) {
								if ( synccheck(cnt, -1) ) {
									txtef COLOR_SKY_BLUE
									txt lang(name(cnt) + "はキレた。", name(cnt) + " can no longer put up with it.")
									txt lang("「もう我慢できない」", cnvtalk("That's it."))
								}
								turn_aggro cnt, make_sound_arg6, 80
							}
						}
					}
				}
			}
		}
	loop
	return

#defcfunc get_freechara
	locvar_get_freechara_f = -1
	repeat MAX_CHARA_TOTAL - MAX_CHARA_SAVE, MAX_CHARA_SAVE
		if ( cdata(CDATA_EXIST, cnt) == CHAR_STATE_DEAD ) {
			locvar_get_freechara_f = cnt
			break
		}
	loop
	return locvar_get_freechara_f

#defcfunc get_freeally
	locvar_get_freechara_f = 0
	repeat limit(sdata(SKILL_ATTR_CHA, CHARA_PLAYER) / 5 + 1, 2, 16 - 1), 1
		if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_DEAD ) {
			continue
		}
		locvar_get_freechara_f = cnt
		break
	loop
	repeat MAX_CHARA_TOTAL
		if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
			continue
		}
		if ( cnt == CHARA_PLAYER ) {
			continue
		}
		if ( cnt < MAX_CHARA_FOLLOWER ) {
			locvar_get_freeally_np++
		}
		if ( cdata(CDATA_ID, cnt) == CREATURE_ID_CAT_ZOMBIE | cdata(CDATA_ID, cnt) == CREATURE_ID_ZOMBIE | cdata(CDATA_ID, cnt) == CREATURE_ID_MUMMY | cdata(CDATA_ID, cnt) == CREATURE_ID_SKELETON_WARRIOR | cdata(CDATA_ID, cnt) == CREATURE_ID_LICH | cdata(CDATA_ID, cnt) == CREATURE_ID_NECRO_DOLL | cdata(CDATA_ID, cnt) == CREATURE_ID_DRAGON_ZOMBIE | cdata(CDATA_ID, cnt) == CREATURE_ID_DEAD_EYES_BLOOD_DRAGON ) {
			if ( cbit(CHARA_BIT_LIVESTOCK, cnt) != 1 ) {
				if ( cbit(CHARA_BIT_NECRO, cnt) == 1 ) {
					locvar_get_freeally_np++
				}
			}
		}
	loop
	if ( locvar_get_freeally_np >= 15 ) {
		locvar_get_freechara_f = 0
	}
	locvar_get_freeally_np = 0
	return locvar_get_freechara_f

#defcfunc get_freeallyne
	locvar_get_freeally_np = 0
	repeat MAX_CHARA_TOTAL
		if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
			continue
		}
		if ( cnt == CHARA_PLAYER ) {
			continue
		}
		if ( cnt < MAX_CHARA_FOLLOWER ) {
			locvar_get_freeally_np++
		}
		if ( cdata(CDATA_ID, cnt) == CREATURE_ID_CAT_ZOMBIE | cdata(CDATA_ID, cnt) == CREATURE_ID_ZOMBIE | cdata(CDATA_ID, cnt) == CREATURE_ID_MUMMY | cdata(CDATA_ID, cnt) == CREATURE_ID_SKELETON_WARRIOR | cdata(CDATA_ID, cnt) == CREATURE_ID_LICH | cdata(CDATA_ID, cnt) == CREATURE_ID_NECRO_DOLL | cdata(CDATA_ID, cnt) == CREATURE_ID_DRAGON_ZOMBIE | cdata(CDATA_ID, cnt) == CREATURE_ID_DEAD_EYES_BLOOD_DRAGON ) {
			if ( cbit(CHARA_BIT_LIVESTOCK, cnt) != 1 ) {
				if ( cbit(CHARA_BIT_NECRO, cnt) == 1 ) {
					locvar_get_freeally_np++
				}
			}
		}
	loop
	if ( locvar_get_freeally_np >= 15 ) {
		locvar_get_freechara_f = 0
	}
	else {
		locvar_get_freechara_f = 1
	}
	locvar_get_freeally_np = 0
	return locvar_get_freechara_f

#deffunc del_chara int del_chara_arg1
	if ( gdata(STARTING_GDATA_FLAG + 301) == 0 ) {
		if ( cdata(CDATA_IN_TAGTEAM, del_chara_arg1) != 0 ) {
			locvar_del_chara_ttc = cdata(CDATA_TAGTEAM_PARTNER, del_chara_arg1)
			map(cdata(CDATA_X, del_chara_arg1), cdata(CDATA_Y, del_chara_arg1), 1) = locvar_del_chara_ttc + 1
			cdata(CDATA_X, locvar_del_chara_ttc) = cdata(CDATA_X, del_chara_arg1)
			cdata(CDATA_Y, locvar_del_chara_ttc) = cdata(CDATA_Y, del_chara_arg1)
			tag_end del_chara_arg1
		}
	}
	inv_getheader del_chara_arg1
	repeat invrange, invhead
		inv(INV_ITEM_NUM, cnt) = 0
	loop
	repeat 10
		cdatan(cnt, del_chara_arg1) = ""
	loop
	memset sdata(SKILL_NONE, del_chara_arg1), 0, MAX_SKILL_RANGE * 4 * 2
	memset cdata(CDATA_EXIST, del_chara_arg1), 0, MAX_CHARA_DATA * 4
	return

#deffunc relocate_chara int relocate_chara_arg1, int relocate_chara_arg2, int relocate_chara_arg3
	locvar_relocate_chara_tc = relocate_chara_arg2
	if ( relocate_chara_arg1 == gdata(GDATA_RIDER) ) {
		ride_end
		cdata(CDATA_X, relocate_chara_arg1) = cdata(CDATA_X, CHARA_PLAYER)
		cdata(CDATA_Y, relocate_chara_arg1) = cdata(CDATA_Y, CHARA_PLAYER)
	}
	if ( cdata(CDATA_IN_TAGTEAM, relocate_chara_arg1) != 0 ) {
		locvar_del_chara_ttc = cdata(CDATA_TAGTEAM_PARTNER, relocate_chara_arg1)
		map(cdata(CDATA_X, relocate_chara_arg1), cdata(CDATA_Y, relocate_chara_arg1), 1) = locvar_del_chara_ttc + 1
		cdata(CDATA_X, locvar_del_chara_ttc) = cdata(CDATA_X, relocate_chara_arg1)
		cdata(CDATA_Y, locvar_del_chara_ttc) = cdata(CDATA_Y, relocate_chara_arg1)
		tag_end relocate_chara_arg1
	}
	if ( locvar_relocate_chara_tc == (-1) ) {
		locvar_get_freechara_f = 0
		repeat MAX_CHARA_TOTAL - MAX_CHARA_SAVE, MAX_CHARA_SAVE
			if ( cdata(CDATA_EXIST, cnt) == CHAR_STATE_DEAD ) {
				locvar_get_freechara_f = 1
				locvar_relocate_chara_tc = cnt
				break
			}
		loop
		if ( locvar_get_freechara_f == 0 ) {
			repeat
				locvar_relocate_chara_tc = MAX_CHARA_SAVE + rnd(MAX_CHARA_TOTAL - MAX_CHARA_SAVE)
				if ( cdata(CDATA_EXIST, cnt) == CHAR_STATE_ALIVE ) {
					if ( cdata(CDATA_ROLE, cnt) == ROLE_NONE ) {
						break
					}
				}
			loop
			chara_vanquish locvar_relocate_chara_tc
		}
	}
	if ( relocate_chara_arg3 == 1 ) {
		locvar_relocate_chara_x = cdata(CDATA_X, locvar_relocate_chara_tc)
		locvar_relocate_chara_y = cdata(CDATA_Y, locvar_relocate_chara_tc)
	}
	locvar_relocate_chara_p1 = cdata(CDATA_RELATION, locvar_relocate_chara_tc)
	locvar_relocate_chara_p2 = cdata(CDATA_AI_AGGRO, locvar_relocate_chara_tc)
	locvar_relocate_chara_p3 = cdata(CDATA_EXIST, locvar_relocate_chara_tc)
	locvar_relocate_chara_hp = cdata(CDATA_HP, locvar_relocate_chara_tc)
	cdata(CDATA_AI_ITEM, relocate_chara_arg1) = 0
	if ( gdata(GDATA_AREA) == AREA_DOJO | adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_DISCARDED_RANCH ) {
		cdata(CDATA_ROLE, relocate_chara_arg1) = ROLE_SPECIAL
	}
	else {
		cbitmod CHARA_BIT_LIVESTOCK, relocate_chara_arg1, 0
	}
	inv_getheader relocate_chara_arg1
	locvar_relocate_chara_p = invhead
	locvar_relocate_chara_invrangecc = invrange
	inv_getheader locvar_relocate_chara_tc
	repeat invrange, invhead
		locvar_relocate_chara_cnt2 = cnt
		if ( cnt == locvar_relocate_chara_invrangecc ) {
			break
		}
		if ( cc == relocate_chara_arg1 ) {
			if ( ci == locvar_relocate_chara_p ) {
				ci = locvar_relocate_chara_cnt2
			}
		}
		repeat INV_ITEM_MAX
			inv(cnt, locvar_relocate_chara_cnt2) = inv(cnt, locvar_relocate_chara_p)
			inv(cnt, locvar_relocate_chara_p) = 0
		loop
		inv(INV_ITEM_EQUIP, cnt) = 0
		locvar_relocate_chara_p++
	loop
	repeat 1200
		sdata(cnt, locvar_relocate_chara_tc) = sdata(cnt, relocate_chara_arg1)
		sdata(cnt, relocate_chara_arg1) = 0
	loop
	repeat 500
		cdata(cnt, locvar_relocate_chara_tc) = cdata(cnt, relocate_chara_arg1)
		cdata(cnt, relocate_chara_arg1) = 0
	loop
	repeat 10
		cdatan(cnt, locvar_relocate_chara_tc) = cdatan(cnt, relocate_chara_arg1)
		cdatan(cnt, relocate_chara_arg1) = ""
	loop
	repeat MAX_EQUIP_SLOT_TOTAL, CDATA_STARTING_EQUIP_SLOTS
		cdata(cnt, locvar_relocate_chara_tc) = cdata(cnt, locvar_relocate_chara_tc) / EXT_EQUIP_SLOTS * EXT_EQUIP_SLOTS
	loop
	if ( relocate_chara_arg3 == 1 ) {
		cdata(CDATA_EXIST, locvar_relocate_chara_tc) = CHAR_STATE_ALIVE
		cdata(CDATA_X, locvar_relocate_chara_tc) = locvar_relocate_chara_x
		cdata(CDATA_Y, locvar_relocate_chara_tc) = locvar_relocate_chara_y
		cdata(CDATA_RELATION, locvar_relocate_chara_tc) = locvar_relocate_chara_p1
		cdata(CDATA_AI_AGGRO, locvar_relocate_chara_tc) = locvar_relocate_chara_p2
		cdata(CDATA_HP, locvar_relocate_chara_tc) = locvar_relocate_chara_hp
		cdata(CDATA_EXIST, locvar_relocate_chara_tc) = locvar_relocate_chara_p3
		map(cdata(CDATA_X, locvar_relocate_chara_tc), cdata(CDATA_Y, locvar_relocate_chara_tc), 1) = locvar_relocate_chara_tc + 1
	}
	else {
		if ( relocate_chara_arg1 != 56 ) {
			map(cdata(CDATA_X, locvar_relocate_chara_tc), cdata(CDATA_Y, locvar_relocate_chara_tc), 1) = locvar_relocate_chara_tc + 1
		}
		else {
			rc = locvar_relocate_chara_tc
			cdata(CDATA_EXIST, locvar_relocate_chara_tc) = CHAR_STATE_ALIVE
			cxinit = cdata(CDATA_X, CHARA_PLAYER)
			cyinit = cdata(CDATA_Y, CHARA_PLAYER)
			gosub *place_chara
		}
		cdata(CDATA_TARGET, locvar_relocate_chara_tc) = 0
		cdata(CDATA_AI_AGGRO, locvar_relocate_chara_tc) = 0
	}
	if ( gdata(GDATA_TEMPORARY_FLAGS2) != 200 ) {
		if ( locvar_relocate_chara_tc < MAX_CHARA_FOLLOWER | cbit(CHARA_BIT_LIVESTOCK, locvar_relocate_chara_tc) != 1 ) {
			repeat MAX_SKILL_RESIST - STARTING_SKILL_RESIST, STARTING_SKILL_RESIST
				locvar_relocate_chara_p = 100
				if ( sorg(cnt, locvar_relocate_chara_tc) >= 500 | sorg(cnt, locvar_relocate_chara_tc) <= 100 ) {
					locvar_relocate_chara_p = sorg(cnt, locvar_relocate_chara_tc)
				}
				if ( locvar_relocate_chara_p > 500 ) {
					locvar_relocate_chara_p = 500
				}
				sdata(cnt + STARTING_SKILL_SPACT, locvar_relocate_chara_tc) = locvar_relocate_chara_p * 1000000
			loop
		}
	}
	gdata(GDATA_TEMPORARY_FLAGS2) = 0
	rc = locvar_relocate_chara_tc
	gosub *chara_equipFull
	r1 = locvar_relocate_chara_tc
	gosub *charaRefresh
	return relocate_chara_arg1

#deffunc hostileaction int hostileaction_target, int hostileaction_source
	if ( hostileaction_target >= MAX_CHARA_FOLLOWER | hostileaction_source == CHARA_PLAYER ) {
		return
	}
	if ( cdata(CDATA_ALLIED, hostileaction_target) == 0 ) {
		if ( hostileaction_target != CHARA_PLAYER ) {
			return
		}
	}
	if ( cdata(CDATA_RELATION, hostileaction_source) != (-3) ) {
		cdata(CDATA_EMO_ICON, hostileaction_source) = 18 + 100 * 4
	}
	if ( cdata(CDATA_RELATION, hostileaction_source) == 10 ) {
		txtmore
		txtef COLOR_PURPLE
		txt lang(name(hostileaction_source) + "は嫌な顔をした。", name(hostileaction_source) + " glares at you.")
	}
	else {
		if ( hostileaction_target <= MAX_CHARA_FOLLOWER ) {
			if ( cdata(CDATA_RELATION, hostileaction_source) == 0 ) {
				modkarma CHARA_PLAYER, -2
			}
		}
		if ( cdata(CDATA_ID, hostileaction_source) == CREATURE_ID_EBON_THE_FIRE_GIANT ) {
			if ( gdata(GDATA_FLAG_FIRE_GIANT) == 0 ) {
				txtmore
				txtef COLOR_PURPLE
				txt lang(name(hostileaction_source) + "は嫌な顔をした。", name(hostileaction_source) + " glares at you.")
				return
			}
		}
		if ( cdata(CDATA_RELATION, hostileaction_source) > (-2) ) {
			txtmore
			txtef COLOR_PURPLE
			txt lang(name(hostileaction_source) + "は嫌な顔をした。", name(hostileaction_source) + " glares at you.")
			cdata(CDATA_RELATION, hostileaction_source) = -2
		}
		else {
			if ( cdata(CDATA_RELATION, hostileaction_source) != (-3) ) {
				txtef COLOR_PURPLE
				txtmore
				txt lang(name(hostileaction_source) + "は激怒した。", name(hostileaction_source) + " gets furious!")
			}
			cdata(CDATA_RELATION, hostileaction_source) = -3
			cdata(CDATA_AI_AGGRO, hostileaction_source) = 80
			cdata(CDATA_TARGET, hostileaction_source) = hostileaction_target
		}
		if ( cdata(CDATA_ID, hostileaction_source) != CREATURE_ID_RAIZEL_THE_OLD_WIZARD | cdata(CDATA_ALLIED, hostileaction_source) != 0 | gdata(GDATA_FLAG_MAIN) < 760 ) {
			if ( gdata(GDATA_TEMPORARY_FLAGS2) < 1000 ) {
				customtalk hostileaction_source, DBMODE_FLAVOR_ANGERED
				gosub *convert_word
			}
		}
	}
	if ( cbit(CHARA_BIT_LIVESTOCK, hostileaction_source) == 1 & gdata(GDATA_AREA) != AREA_DOJO ) {
		if ( rnd(50) == 0 ) {
			txtef COLOR_RED
			txt lang("家畜は興奮した！", "The livestock got excited!")
			repeat MAX_CHARA_TOTAL
				if ( cbit(CHARA_BIT_LIVESTOCK, cnt) == 1 ) {
					cdata(CDATA_TARGET, cnt) = 0
					cdata(CDATA_AI_AGGRO, cnt) = 20
					cdata(CDATA_EMO_ICON, cnt) = 18 + 100 * 3
				}
			loop
		}
	}
	if ( cdata(CDATA_ROW_ACT, hostileaction_source) != ACTION_CHARGE ) {
		rowactend hostileaction_source
	}
	return

#deffunc rowact_check int rowact_check_charid
	if ( cdata(CDATA_ROW_ACT, rowact_check_charid) != ACTION_NONE ) {
		if ( cdata(CDATA_ROW_ACT, rowact_check_charid) != ACTION_TRAVEL ) {
			cdata(CDATA_ROW_ACT_WARNING, rowact_check_charid) = 1
		}
	}
	return

#deffunc rowact_item int rowact_item_arg1
	repeat MAX_CHARA_TOTAL
		if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
			continue
		}
		if ( cdata(CDATA_ACTION_PERIOD, cnt) <= 0 ) {
			continue
		}
		if ( cdata(CDATA_ROW_ACT, cnt) == ACTION_EAT | cdata(CDATA_ROW_ACT, cnt) == ACTION_READ ) {
			if ( cdata(CDATA_ITEM_USING, cnt) == rowact_item_arg1 ) {
				rowactend cnt
				txt lang(name(cnt) + "は行動を中断した。", name(cnt) + " cancel" + _s(cnt) + " " + his(cnt) + " action.")
			}
		}
	loop
	return

#deffunc wake_up
	if ( gdata(GDATA_HOUR) >= 7 & gdata(GDATA_HOUR) <= 22 ) {
		repeat MAX_CHARA_TOTAL - MAX_CHARA_SAVE, MAX_CHARA_SAVE
			if ( cdata(CDATA_CONDITION_SLEEP, cnt) > 0 ) {
				if ( rnd(10) ) {
					cdata(CDATA_CONDITION_SLEEP, cnt) = 0
				}
			}
		loop
	}
	return

#deffunc incognitobegin
	if ( gdata(GDATA_FLAG_DUEL_TARGET) > 0 ) {
		snd SOUNDLIST_FAIL1
		txt lang("決闘中は変装が効かない。", "Incognito does not work for the duel opponent.")
		return
	}
	repeat MAX_CHARA_TOTAL - MAX_CHARA_FOLLOWER, MAX_CHARA_FOLLOWER
		if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
			continue
		}
		if ( cdata(CDATA_ROLE, cnt) == ROLE_SHOP_WANDER ) {
			continue
		}
		if ( cdata(CDATA_ROLE, cnt) == ROLE_SHOP_GUARD ) {
			continue
		}
		if ( cdata(CDATA_ID, cnt) == CREATURE_ID_AILE_THE_ATTENDANT ) {
			continue
		}
		if ( cdata(CDATA_QUALITY, cnt) == FIX_QUALITY_UNIQUE ) {
			if ( cdata(CDATA_ID, cnt) != CREATURE_ID_ETHER_GENERATOR ) {
				continue
			}
		}
		if ( cdata(CDATA_RELATION_ORG, cnt) >= (-2) ) {
			if ( cdata(CDATA_RELATION, cnt) <= (-2) ) {
				cdata(CDATA_AI_AGGRO, cnt) = 0
				cdata(CDATA_RELATION, cnt) = cdata(CDATA_RELATION_ORG, cnt)
				cdata(CDATA_EMO_ICON, cnt) = 21 + 100 * 2
			}
		}
	loop
	return

#deffunc incognitoend
	repeat MAX_CHARA_TOTAL - MAX_CHARA_FOLLOWER, MAX_CHARA_FOLLOWER
		if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
			continue
		}
		if ( cdata(CDATA_ROLE, cnt) == ROLE_GUARD | cdata(CDATA_ROLE, cnt) == ROLE_BOUNTY_HUNTER ) {
			if ( cdata(CDATA_KARMA, CHARA_PLAYER) < (-30) ) {
				cdata(CDATA_RELATION, cnt) = -3
				cdata(CDATA_AI_AGGRO, cnt) = 80
				cdata(CDATA_EMO_ICON, cnt) = 18 + 100 * 2
			}
		}
	loop
	return

#deffunc cell_setchara int cell_setchara_arg1, int cell_setchara_arg2, int cell_setchara_arg3
	map(cell_setchara_arg2, cell_setchara_arg3, 1) = cell_setchara_arg1 + 1
	cdata(CDATA_X, cell_setchara_arg1) = cell_setchara_arg2
	cdata(CDATA_Y, cell_setchara_arg1) = cell_setchara_arg3
	return

#deffunc cell_removechara int cell_removechara_arg1, int cell_removechara_arg2
	map(cell_removechara_arg1, cell_removechara_arg2, 1) = 0
	return

#deffunc cell_findspace int cell_findspace_arg1, int cell_findspace_arg2, int cell_findspace_arg3
	locvar_cell_findspace_f = 0
	repeat cell_findspace_arg3 * 2 + 1
		locvar_cell_findspace_dy = cell_findspace_arg2 + cnt - 1
		if ( locvar_cell_findspace_dy < 0 | locvar_cell_findspace_dy >= mdata(MDATA_HEIGHT) ) {
			continue
		}
		repeat cell_findspace_arg3 * 2 + 1
			locvar_cell_findspace_dx = cell_findspace_arg1 + cnt - 1
			if ( locvar_cell_findspace_dx < 0 | locvar_cell_findspace_dx >= mdata(MDATA_WIDTH) ) {
				continue
			}
			if ( map(locvar_cell_findspace_dx, locvar_cell_findspace_dy, 1) != 0 ) {
				continue
			}
			if ( chipm(CHIPM_ATTRIB, map(locvar_cell_findspace_dx, locvar_cell_findspace_dy, 0)) & CHIPM_ATTRIB_CANT_PASS ) {
				continue
			}
			if ( chipm(CHIPM_ATTRIB, map(locvar_cell_findspace_dx, locvar_cell_findspace_dy, 6) \ 1000) & CHIPM_ATTRIB_CANT_PASS ) {
				continue
			}
			rtval = locvar_cell_findspace_dx, locvar_cell_findspace_dy
			locvar_cell_findspace_f = 1
		loop
		if ( locvar_cell_findspace_f ) {
			break
		}
	loop
	return locvar_cell_findspace_f

#defcfunc findbuff int findbuff_charid, int findbuff_buffid
	locvar_findbuff_f = -1
	repeat MAX_BLESSINGS + MAX_HEXES
		if ( cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, findbuff_charid) == 0 ) {
			break
		}
		if ( cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, findbuff_charid) == findbuff_buffid ) {
			locvar_findbuff_f = cnt
			break
		}
	loop
	return locvar_findbuff_f

#deffunc addbuff int addbuff_charid, int addbuff_buffid, int addbuff_arg3, int addbuff_arg4
	if ( addbuff_arg4 <= 0 ) {
		return 0
	}
	locvar_addbuff_p = -1
	repeat MAX_BLESSINGS + MAX_HEXES
		if ( cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, addbuff_charid) == addbuff_buffid ) {
			if ( cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF + 2, addbuff_charid) < addbuff_arg4 ) {
				locvar_addbuff_p = cnt
				break
			}
			else {
				locvar_addbuff_p = -2
				break
			}
		}
		if ( cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, addbuff_charid) == 0 ) {
			locvar_addbuff_p = cnt
			break
		}
	loop
	if ( locvar_addbuff_p == (-1) ) {
		locvar_addbuff_p = rnd(8 + 8)
	}
	if ( locvar_addbuff_p == (-2) ) {
		if ( synccheck(addbuff_charid, -1) ) {
			txtmore
			txt lang("しかし、効果はなかった。", "But it produces no effect.")
			return 0
		}
	}
	locvar_addbuff_fixeddur = addbuff_arg4
	if ( bdataref(0, addbuff_buffid) == 2 ) {
		locvar_addbuff_f = 0
		if ( sdata(SKILL_RES_MAGIC, addbuff_charid) / 2 > rnd(addbuff_arg3 * 2 + 100) ) {
			locvar_addbuff_f = 1
		}
		if ( addbuff_arg3 * 3 < sdata(SKILL_RES_MAGIC, addbuff_charid) ) {
			locvar_addbuff_f = 1
		}
		if ( addbuff_arg3 / 3 > sdata(SKILL_RES_MAGIC, addbuff_charid) ) {
			locvar_addbuff_f = 0
		}
		if ( cdata(CDATA_QUALITY, addbuff_charid) > FIX_QUALITY_GREAT | cdata(CDATA_ID, addbuff_charid) == CREATURE_ID_AILE_THE_ATTENDANT ) {
			if ( rnd(4) ) {
				locvar_addbuff_f = 1
			}
			else {
				if ( addbuff_buffid != BUFF_DEATH_WORD ) {
					locvar_addbuff_fixeddur = addbuff_arg4 / 5 + 1
				}
			}
		}
		if ( cdata(CDATA_ALLIED, addbuff_charid) == 0 & cdata(CDATA_QUALITY, addbuff_charid) > FIX_QUALITY_GREAT ) {
			if ( addbuff_buffid == BUFF_DEATH_WORD ) {
				locvar_addbuff_f = 1
			}
		}
		if ( findbuff(addbuff_charid, BUFF_HOLY_VEIL) != (-1) ) {
			if ( cdata(STARTING_CDATA_BUFF + findbuff(addbuff_charid, BUFF_HOLY_VEIL) * ARRAY_CDATA_BUFF + 1, addbuff_charid) + 50 > addbuff_arg3 * 5 / 2 | rnd(cdata(STARTING_CDATA_BUFF + findbuff(addbuff_charid, BUFF_HOLY_VEIL) * ARRAY_CDATA_BUFF + 1, addbuff_charid) + 50) > rnd(addbuff_arg3 + 1) ) {
				txt lang("ホーリーヴェイルが呪いを防いだ。", "The holy veil repels the hex.")
				return
			}
		}
		if ( locvar_addbuff_f == 1 ) {
			if ( synccheck(addbuff_charid, -1) ) {
				txtmore
				txt lang(cnven(name(addbuff_charid)) + "は抵抗した。", name(addbuff_charid) + " resist" + _s(addbuff_charid) + " the hex.")
			}
			return
		}
		if ( cc == CHARA_PLAYER ) {
			hostileaction CHARA_PLAYER, addbuff_charid
		}
	}
	if ( synccheck(addbuff_charid, -1) ) {
		txtmore

		/********** ORIGINAL - BEGINNING **********

		txt lang(name(addbuff_charid) + bufftxt(0, addbuff_buffid), name(addbuff_charid) + " " + bufftxt(0, addbuff_buffid) + _s(addbuff_charid) + bufftxt(1, addbuff_buffid))

		 ********** ORIGINAL - ENDING **********/

		/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // Fix some of the buff texts

		if ( en ) {
			buff_text_entity = name(addbuff_charid)
			buff_text_part_one = bufftxt(0, addbuff_buffid) + _s(addbuff_charid)
			buff_text_part_two = bufftxt(1, addbuff_buffid)

			if ( addbuff_charid == CHARA_PLAYER ) {
				buff_text_entity = cnven(buff_text_entity)
				switch addbuff_buffid
					case BUFF_CLEAR_MIND
						buff_text_part_two = " " + his(addbuff_charid) + " mind..."
						swbreak
					case BUFF_SUPER_REGEN
						buff_text_part_one = " body regenerate" + _s(addbuff_charid)
						swbreak
					case BUFF_FEATHER
						buff_text_part_one = " body become" + _s(addbuff_charid)
						swbreak
					case BUFF_ATTRIBUTE
						buff_text_part_two = " " + his(addbuff_charid) + " attribute."
						swbreak
					case BUFF_RESOLUTION_HAND
						buff_text_part_one = " hands"
						swbreak
					case BUFF_EMERGENCY_EVASION
					case BUFF_MAGIC_EQUIP
					case BUFF_SUPER_ARMOR
						buff_text_part_two = " out the power of " + his(addbuff_charid) + " armor."
						swbreak
					case BUFF_SHIELD_PARRY
						buff_text_part_two = " out the power of " + his(addbuff_charid) + " shield."
						swbreak
					default
						swbreak
				swend
			}
			else {
				switch addbuff_buffid
					case BUFF_CLEAR_MIND
						buff_text_part_two = " " + his(addbuff_charid) + " mind..."
						swbreak
					case BUFF_EMERGENCY_EVASION
					case BUFF_MAGIC_EQUIP
					case BUFF_SUPER_ARMOR
						buff_text_part_two = " out the power of " + his(addbuff_charid) + " armor."
						swbreak
					case BUFF_SHIELD_PARRY
						buff_text_part_two = " out the power of " + his(addbuff_charid) + " shield."
						swbreak
					case BUFF_ATTRIBUTE
						buff_text_part_two = " " + his(addbuff_charid) + " attribute."
						swbreak
					case BUFF_BLACK_MIRROR
						buff_text_part_one = " copies"
					default
						swbreak
				swend
			}

			txt buff_text_entity + buff_text_part_one + buff_text_part_two
		}
		else {
			txt name(addbuff_charid) + bufftxt(0, addbuff_buffid)
		}

		/********** BLOODYSHADE CUSTOM - ENDING **********/

		/********** RUIN0X11 CUSTOM - BEGINNING **********/

        if ( bufftxt(0, addbuff_buffid) != "" & synccheck(addbuff_charid, -1) ) {
            buff_popup_type = DMGPOPUP_ADD_BUFF
            if ( bdataref(BDATAREF_BUFF_TYPE, addbuff_buffid) == BUFF_TYPE_HEX ) {
                buff_popup_type = DMGPOPUP_ADD_HEX
            }
            DamagePopupAdd buffname(addbuff_buffid), addbuff_charid, buff_popup_type, addbuff_buffid
        }

		/********** RUIN0X11 CUSTOM - ENDING **********/

	}
	cdata(STARTING_CDATA_BUFF + locvar_addbuff_p * ARRAY_CDATA_BUFF, addbuff_charid) = addbuff_buffid, addbuff_arg3, locvar_addbuff_fixeddur
	r1 = addbuff_charid
	gosub *charaRefresh
	return

#deffunc delbuff int delbuff_charid, int delbuff_buffindex
	delbuff_buffid = cdata(STARTING_CDATA_BUFF + delbuff_buffindex * ARRAY_CDATA_BUFF, delbuff_charid)
	if ( delbuff_charid == CHARA_PLAYER ) {
		txtef COLOR_PURPLE
		txt lang("" + buffname(delbuff_buffid) + "の効果が切れた。", "The effect of " + buffname(delbuff_buffid) + " ends.")
	}
	if ( cdata(STARTING_CDATA_BUFF + delbuff_buffindex * ARRAY_CDATA_BUFF, delbuff_charid) == BUFF_INCOGNITO ) {
		if ( delbuff_charid == CHARA_PLAYER ) {
			incognitoend
		}
	}
	if ( cdata(STARTING_CDATA_BUFF + delbuff_buffindex * ARRAY_CDATA_BUFF, delbuff_charid) == BUFF_DEATH_WORD ) {
		cbitmod CHARA_BIT_DEATH_COUNT, delbuff_charid, 0
	}
	if ( cdata(STARTING_CDATA_BUFF + delbuff_buffindex * ARRAY_CDATA_BUFF, delbuff_charid) == BUFF_CONTINGENCY ) {
		cbitmod CHARA_BIT_CONTINGENCY, delbuff_charid, 0
	}
	if ( cdata(STARTING_CDATA_BUFF + delbuff_buffindex * ARRAY_CDATA_BUFF, delbuff_charid) == BUFF_ATTRIBUTE ) {
		cdata(CDATA_ATTRIBUTE_ELE, delbuff_charid) = 0
	}
	if ( cdata(STARTING_CDATA_BUFF + delbuff_buffindex * ARRAY_CDATA_BUFF, delbuff_charid) == BUFF_DATA_SCAN ) {
		gdata(GDATA_FLAG_DATA_SCAN_CHARA_INDEX) = 0
	}
	cdata(STARTING_CDATA_BUFF + delbuff_buffindex * ARRAY_CDATA_BUFF, delbuff_charid) = 0
	repeat MAX_BLESSINGS + MAX_HEXES - delbuff_buffindex - 1, delbuff_buffindex
		if ( cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, delbuff_charid) == 0 ) {
			if ( cdata(STARTING_CDATA_BUFF + (cnt + 1) * ARRAY_CDATA_BUFF, delbuff_charid) != 0 ) {
				cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, delbuff_charid) = cdata(STARTING_CDATA_BUFF + (cnt + 1) * ARRAY_CDATA_BUFF, delbuff_charid), cdata(STARTING_CDATA_BUFF + (cnt + 1) * ARRAY_CDATA_BUFF + 1, delbuff_charid), cdata(STARTING_CDATA_BUFF + (cnt + 1) * ARRAY_CDATA_BUFF + 2, delbuff_charid)
				cdata(STARTING_CDATA_BUFF + (cnt + 1) * ARRAY_CDATA_BUFF, delbuff_charid) = 0, 0, 0
			}
			else {
				break
			}
		}
	loop

    /********** RUIN0X11 CUSTOM - BEGINNING **********/

    if ( bufftxt(0, delbuff_buffid) != "" & synccheck(delbuff_charid, -1) ) {
        buff_popup_type = DMGPOPUP_REMOVE_BUFF
        if ( bdataref(BDATAREF_BUFF_TYPE, delbuff_buffid) == BUFF_TYPE_HEX ) {
            buff_popup_type = DMGPOPUP_REMOVE_HEX
        }
        DamagePopupAdd buffname(delbuff_buffid), delbuff_charid, buff_popup_type, delbuff_buffid
    }

    /********** RUIN0X11 CUSTOM - ENDING **********/

	r1 = delbuff_charid
	gosub *charaRefresh
	return

#deffunc animeload int animeload_arg1, int animeload_arg2
	if ( mode != MODELIST_MAIN ) {
		return
	}
	if ( synccheck(animeload_arg2, -1) == 0 ) {
		return
	}
	if ( cfg_animewait == 0 ) {
		return
	}
	screenupdate = -1
	gosub *screen_draw
	locvar_animeload_dx = (cdata(CDATA_X, animeload_arg2) - scx) * inf_tiles + inf_screenx
	locvar_animeload_dy = (cdata(CDATA_Y, animeload_arg2) - scy) * inf_tiles + inf_screeny
	gsel 7
	picload exedir + "graphic\\anime" + animeload_arg1 + ".bmp"
	gsel 4
	gmode 0
	pos 0, 0
	gcopy 0, locvar_animeload_dx - 24, locvar_animeload_dy - 40, 96, 96
	gsel 0
	gmode 2
	locvar_animeload_i = 5, 50
	locvar_animeload_r = 0
	if ( animeload_arg1 == 8 ) {
		snd SOUNDLIST_OFFER1
	}
	if ( animeload_arg1 == 10 ) {
		locvar_animeload_i = 8, 30
		locvar_animeload_r = 0.2
		snd SOUNDLIST_ENC2
	}
	if ( animeload_arg1 == 11 ) {
		locvar_animeload_i = 5, 50
		locvar_animeload_r = 0
		snd SOUNDLIST_ENC
	}
	if ( animeload_arg1 == 14 ) {
		locvar_animeload_i = 6, 50
	}
	repeat locvar_animeload_i
		gmode 2, 96, 96
		pos locvar_animeload_dx + 24, locvar_animeload_dy + 8
		grotate 7, cnt * 96, 0, locvar_animeload_r * cnt, 96, 96
		gmode 0
		redraw 1
		redraw 0
		pos locvar_animeload_dx - 24, locvar_animeload_dy - 40
		gcopy 4, 0, 0, 96, 96
		await cfg_animewait + locvar_animeload_i(1)
	loop
	gmode 2
	return

#deffunc animeblood int animeblood_arg1, int animeblood_arg2, int animeblood_arg3
	if ( synccheck(animeblood_arg1, -1) == 0 ) {
		return
	}
	if ( cfg_animewait == 0 ) {
		return
	}
	screenupdate = -1
	gosub *screen_draw
	if ( animeblood_arg2 == 0 ) {
        preparePicItem xy2pic(16, 0), 0
	}
	if ( animeblood_arg2 == 1 ) {
        preparePicItem xy2pic(18, 0), 0
	}
	locvar_animeload_dx = (cdata(CDATA_X, animeblood_arg1) - scx) * inf_tiles + inf_screenx
	locvar_animeload_dy = (cdata(CDATA_Y, animeblood_arg1) - scy) * inf_tiles + inf_screeny, 0
	gsel 4
	gmode 0
	pos 0, 0
	gcopy 0, locvar_animeload_dx - 48, locvar_animeload_dy - 56, 144, 160
	locvar_animeblood_ele2 = 0
	if ( animeblood_arg3 == 52 ) {
		locvar_animeblood_ele2 = 1
		gsel 7
		picload exedir + "graphic\\anime18.bmp"
		locvar_animeload_dy(1) = -16
	}
	if ( animeblood_arg3 == 51 ) {
		locvar_animeblood_ele2 = 1
		gsel 7
		picload exedir + "graphic\\anime19.bmp"
		locvar_animeload_dy(1) = -16
	}
	if ( animeblood_arg3 == 50 ) {
		locvar_animeblood_ele2 = 1
		gsel 7
		picload exedir + "graphic\\anime20.bmp"
		locvar_animeload_dy(1) = -20
	}
	if ( animeblood_arg3 == 56 ) {
		locvar_animeblood_ele2 = 1
		gsel 7
		picload exedir + "graphic\\anime22.bmp"
		locvar_animeload_dy(1) = -24
	}
	if ( animeblood_arg3 == 53 ) {
		locvar_animeblood_ele2 = 1
		gsel 7
		picload exedir + "graphic\\anime21.bmp"
		locvar_animeload_dy(1) = -16
	}
	if ( animeblood_arg3 == 54 ) {
		locvar_animeblood_ele2 = 1
		gsel 7
		picload exedir + "graphic\\anime23.bmp"
		locvar_animeload_dy(1) = -16
	}
	if ( animeblood_arg3 == 57 ) {
		locvar_animeblood_ele2 = 1
		gsel 7
		picload exedir + "graphic\\anime24.bmp"
		locvar_animeload_dy(1) = -16
	}
	if ( animeblood_arg3 == 59 ) {
		locvar_animeblood_ele2 = 1
		gsel 7
		picload exedir + "graphic\\anime25.bmp"
		locvar_animeload_dy(1) = -16
	}
	if ( animeblood_arg3 == 58 ) {
		locvar_animeblood_ele2 = 1
		gsel 7
		picload exedir + "graphic\\anime26.bmp"
		locvar_animeload_dy(1) = -16
	}
	if ( animeblood_arg3 == 55 | animeblood_arg3 == 63 ) {
		locvar_animeblood_ele2 = 1
		gsel 7
		picload exedir + "graphic\\anime27.bmp"
		locvar_animeload_dy(1) = -16
	}
	gmode 2
	gsel 0
	repeat 20
		locvar_animeblood_x(cnt) = rnd(48) - 24
		locvar_animeblood_y(cnt) = rnd(16)
	loop
	repeat 6
		locvar_animeblood_cnt2 = cnt * 2
		gmode 2, inf_tiles, inf_tiles
		if ( locvar_animeblood_ele2 ) {
			pos locvar_animeload_dx - 24, locvar_animeload_dy - 32 + locvar_animeload_dy(1)
			gcopy 7, cnt * 96, 0, 96, 96
		}
		repeat 20
			pos locvar_animeload_dx + 24 + locvar_animeblood_x(cnt) + (locvar_animeblood_x(cnt) < 3) * ((1 + (cnt \ 2 == 0)) * (-1)) * locvar_animeblood_cnt2 + (locvar_animeblood_x(cnt) > (-4)) * (1 + (cnt \ 2 == 0)) * locvar_animeblood_cnt2, locvar_animeload_dy + locvar_animeblood_y(cnt) + locvar_animeblood_cnt2 * locvar_animeblood_cnt2 / 2 - 12 + cnt
			grotate 1, 0, 960, 0.2 * cnt, 24 - locvar_animeblood_cnt2 * 2, 24 - locvar_animeblood_cnt2 * 2
		loop
		gmode 0
		redraw 1
		redraw 0
		pos locvar_animeload_dx - 48, locvar_animeload_dy - 56
		gcopy 4, 0, 0, 144, 160
		await cfg_animewait + 15 + (locvar_animeblood_ele2 != 0) * 20
	loop
	gmode 2
	return

#deffunc resistmod int resistmod_charid, int resistmod_ele, int resistmod_arg3
	locvar_resistmod_lv = sorg(resistmod_ele, resistmod_charid) + resistmod_arg3
	if ( sorg(resistmod_ele, resistmod_charid) >= 200 & resistmod_arg3 >= 50 ) {
		txt_nothinghappens
	}
	else {
		if ( locvar_resistmod_lv < 50 ) {
			locvar_resistmod_lv = 50
		}
		if ( locvar_resistmod_lv > 200 ) {
			locvar_resistmod_lv = 200
		}
		if ( resistmod_arg3 >= 50 ) {
			txtef COLOR_GREEN
			if ( resistmod_ele == SKILL_RES_FIRE ) {
				txt lang(name(resistmod_charid) + "の身体は急に火照りだした。", "Suddenly, " + name(resistmod_charid) + " feel" + _s(resistmod_charid) + " very hot.")
			}
			if ( resistmod_ele == SKILL_RES_COLD ) {
				txt lang(name(resistmod_charid) + "の身体は急に冷たくなった。", "Suddenly, " + name(resistmod_charid) + " feel" + _s(resistmod_charid) + " cool.")
			}
			if ( resistmod_ele == SKILL_RES_LIGHTNING ) {
				txt lang(name(resistmod_charid) + "の身体に電気が走った。", name(resistmod_charid) + " " + is(resistmod_charid) + " struck by an electric shock.")
			}
			if ( resistmod_ele == SKILL_RES_MIND ) {
				txt lang(name(resistmod_charid) + "は急に明晰になった。", "Suddenly, " + name(resistmod_charid) + your(resistmod_charid) + " mind becomes very clear.")
			}
			if ( resistmod_ele == SKILL_RES_NERVE ) {
				txt lang(name(resistmod_charid) + "は急に神経が図太くなった。", name(resistmod_charid) + your(resistmod_charid) + " nerve is sharpened.")
			}
			if ( resistmod_ele == SKILL_RES_DARKNESS ) {
				txt lang(name(resistmod_charid) + "は急に暗闇が怖くなくなった。", name(resistmod_charid) + " no longer fear" + _s(resistmod_charid) + " darkness.")
			}
			if ( resistmod_ele == SKILL_RES_SOUND ) {
				txt lang(name(resistmod_charid) + "は騒音を気にしなくなった。", name(resistmod_charid) + your(resistmod_charid) + " eardrums get thick.")
			}
			if ( resistmod_ele == SKILL_RES_CHAOS ) {
				txt lang(name(resistmod_charid) + "は急にカオスを理解した。", "Suddenly, " + name(resistmod_charid) + " understand" + _s(resistmod_charid) + " chaos.")
			}
			if ( resistmod_ele == SKILL_RES_POISON ) {
				txt lang(name(resistmod_charid) + "の毒への耐性は強くなった。", name(resistmod_charid) + " now " + have(resistmod_charid) + " antibodies to poisons.")
			}
			if ( resistmod_ele == SKILL_RES_NETHER ) {
				txt lang(name(resistmod_charid) + "の魂は地獄に近づいた。", name(resistmod_charid) + " " + is(resistmod_charid) + " no longer afraid of hell.")
			}
			if ( resistmod_ele == SKILL_RES_MAGIC ) {
				txt lang(name(resistmod_charid) + "の皮膚は魔力のオーラに包まれた。", name(resistmod_charid) + your(resistmod_charid) + " body is covered by a magical aura.")
			}
		}
		if ( resistmod_arg3 <= -50 ) {
			txtef COLOR_PURPLE
			if ( resistmod_ele == SKILL_RES_FIRE ) {
				txt lang(name(resistmod_charid) + "は急に汗をかきだした。", name(resistmod_charid) + " sweat" + _s(resistmod_charid) + ".")
			}
			if ( resistmod_ele == SKILL_RES_COLD ) {
				txt lang(name(resistmod_charid) + "は急に寒気を感じた。", name(resistmod_charid) + " shiver" + _s(resistmod_charid) + ".")
			}
			if ( resistmod_ele == SKILL_RES_LIGHTNING ) {
				txt lang(name(resistmod_charid) + "は急に電気に敏感になった。", name(resistmod_charid) + " " + is(resistmod_charid) + " shocked.")
			}
			if ( resistmod_ele == SKILL_RES_MIND ) {
				txt lang(name(resistmod_charid) + "は以前ほど明晰ではなくなった。", name(resistmod_charid) + your(resistmod_charid) + " mind becomes slippery.")
			}
			if ( resistmod_ele == SKILL_RES_NERVE ) {
				txt lang(name(resistmod_charid) + "の神経は急に萎縮した。", name(resistmod_charid) + " become" + _s(resistmod_charid) + " dull.")
			}
			if ( resistmod_ele == SKILL_RES_DARKNESS ) {
				txt lang(name(resistmod_charid) + "は急に暗闇が怖くなった。", "Suddenly, " + name(resistmod_charid) + " fear" + _s(resistmod_charid) + " darkness.")
			}
			if ( resistmod_ele == SKILL_RES_SOUND ) {
				txt lang(name(resistmod_charid) + "は急に辺りをうるさく感じた。", name(resistmod_charid) + " become" + _s(resistmod_charid) + " very sensitive to noises.")
			}
			if ( resistmod_ele == SKILL_RES_CHAOS ) {
				txt lang(name(resistmod_charid) + "はカオスへの理解を失った。", name(resistmod_charid) + " no longer understand" + _s(resistmod_charid) + " chaos.")
			}
			if ( resistmod_ele == SKILL_RES_POISON ) {
				txt lang(name(resistmod_charid) + "の毒への耐性は薄れた。", name(resistmod_charid) + " lose" + _s(resistmod_charid, 1) + " antibodies to poisons.")
			}
			if ( resistmod_ele == SKILL_RES_NETHER ) {
				txt lang(name(resistmod_charid) + "の魂は地獄から遠ざかった。", name(resistmod_charid) + " " + is(resistmod_charid) + " afraid of hell.")
			}
			if ( resistmod_ele == SKILL_RES_MAGIC ) {
				txt lang(name(resistmod_charid) + "の皮膚から魔力のオーラが消えた。", "The magical aura disappears from " + name(resistmod_charid) + your(resistmod_charid) + " body.")
			}
		}
		sdata(resistmod_ele + STARTING_SKILL_SPACT, resistmod_charid) = limit(locvar_resistmod_lv, 0, 2000) * 1000000 + sexp(resistmod_ele, resistmod_charid) * 1000 + sgrowth(resistmod_ele, resistmod_charid)
	}
	snd SOUNDLIST_ATK_ELEC
	if ( meal == 0 ) {
		animeload ANIMATION_THROW, resistmod_charid
	}
	r1 = resistmod_charid
	gosub *charaRefresh
	return

#deffunc resistmodh int resistmodh_charid, int resistmodh_ele, int resistmodh_arg3
	locvar_resistmod_lv = sorg(resistmodh_ele, resistmodh_charid)
	if ( sorg(resistmodh_ele, resistmodh_charid) >= 300 & resistmodh_arg3 >= 25 | sorg(resistmodh_ele, resistmodh_charid) < 100 ) {
		txt_nothinghappens
	}
	else {
		if ( locvar_resistmod_lv < 50 ) {
			locvar_resistmod_lv = 50
		}
		if ( locvar_resistmod_lv >= 100 ) {
			locvar_resistmod_lv = 300
		}
		if ( resistmodh_arg3 >= 25 ) {
			txtef COLOR_GREEN
			if ( resistmodh_ele == SKILL_RES_FIRE ) {
				txt lang(name(resistmodh_charid) + "の身体は急に火照りだした。", "Suddenly, " + name(resistmodh_charid) + " feel" + _s(resistmodh_charid) + " very hot.")
			}
			if ( resistmodh_ele == SKILL_RES_COLD ) {
				txt lang(name(resistmodh_charid) + "の身体は急に冷たくなった。", "Suddenly, " + name(resistmodh_charid) + " feel" + _s(resistmodh_charid) + " cool.")
			}
			if ( resistmodh_ele == SKILL_RES_LIGHTNING ) {
				txt lang(name(resistmodh_charid) + "の身体に電気が走った。", name(resistmodh_charid) + " " + is(resistmodh_charid) + " struck by an electric shock.")
			}
			if ( resistmodh_ele == SKILL_RES_MIND ) {
				txt lang(name(resistmodh_charid) + "は急に明晰になった。", "Suddenly, " + name(resistmodh_charid) + your(resistmodh_charid) + " mind becomes very clear.")
			}
			if ( resistmodh_ele == SKILL_RES_NERVE ) {
				txt lang(name(resistmodh_charid) + "は急に神経が図太くなった。", name(resistmodh_charid) + your(resistmodh_charid) + " nerve is sharpened.")
			}
			if ( resistmodh_ele == SKILL_RES_DARKNESS ) {
				txt lang(name(resistmodh_charid) + "は急に暗闇が怖くなくなった。", name(resistmodh_charid) + " no longer fear" + _s(resistmodh_charid) + " darkness.")
			}
			if ( resistmodh_ele == SKILL_RES_SOUND ) {
				txt lang(name(resistmodh_charid) + "は騒音を気にしなくなった。", name(resistmodh_charid) + your(resistmodh_charid) + " eardrums get thick.")
			}
			if ( resistmodh_ele == SKILL_RES_CHAOS ) {
				txt lang(name(resistmodh_charid) + "は急にカオスを理解した。", "Suddenly, " + name(resistmodh_charid) + " understand" + _s(resistmodh_charid) + " chaos.")
			}
			if ( resistmodh_ele == SKILL_RES_POISON ) {
				txt lang(name(resistmodh_charid) + "の毒への耐性は強くなった。", name(resistmodh_charid) + " now " + have(resistmodh_charid) + " antibodies to poisons.")
			}
			if ( resistmodh_ele == SKILL_RES_NETHER ) {
				txt lang(name(resistmodh_charid) + "の魂は地獄に近づいた。", name(resistmodh_charid) + " " + is(resistmodh_charid) + " no longer afraid of hell.")
			}
			if ( resistmodh_ele == SKILL_RES_MAGIC ) {
				txt lang(name(resistmodh_charid) + "の皮膚は魔力のオーラに包まれた。", name(resistmodh_charid) + your(resistmodh_charid) + " body is covered by a magical aura.")
			}
		}
		if ( resistmodh_arg3 <= -50 ) {
			txtef COLOR_PURPLE
			if ( resistmodh_ele == SKILL_RES_FIRE ) {
				txt lang(name(resistmodh_charid) + "は急に汗をかきだした。", name(resistmodh_charid) + " sweat" + _s(resistmodh_charid) + ".")
			}
			if ( resistmodh_ele == SKILL_RES_COLD ) {
				txt lang(name(resistmodh_charid) + "は急に寒気を感じた。", name(resistmodh_charid) + " shiver" + _s(resistmodh_charid) + ".")
			}
			if ( resistmodh_ele == SKILL_RES_LIGHTNING ) {
				txt lang(name(resistmodh_charid) + "は急に電気に敏感になった。", name(resistmodh_charid) + " " + is(resistmodh_charid) + " shocked.")
			}
			if ( resistmodh_ele == SKILL_RES_MIND ) {
				txt lang(name(resistmodh_charid) + "は以前ほど明晰ではなくなった。", name(resistmodh_charid) + your(resistmodh_charid) + " mind becomes slippery.")
			}
			if ( resistmodh_ele == SKILL_RES_NERVE ) {
				txt lang(name(resistmodh_charid) + "の神経は急に萎縮した。", name(resistmodh_charid) + " become" + _s(resistmodh_charid) + " dull.")
			}
			if ( resistmodh_ele == SKILL_RES_DARKNESS ) {
				txt lang(name(resistmodh_charid) + "は急に暗闇が怖くなった。", "Suddenly, " + name(resistmodh_charid) + " fear" + _s(resistmodh_charid) + " darkness.")
			}
			if ( resistmodh_ele == SKILL_RES_SOUND ) {
				txt lang(name(resistmodh_charid) + "は急に辺りをうるさく感じた。", name(resistmodh_charid) + " become" + _s(resistmodh_charid) + " very sensitive to noises.")
			}
			if ( resistmodh_ele == SKILL_RES_CHAOS ) {
				txt lang(name(resistmodh_charid) + "はカオスへの理解を失った。", name(resistmodh_charid) + " no longer understand" + _s(resistmodh_charid) + " chaos.")
			}
			if ( resistmodh_ele == SKILL_RES_POISON ) {
				txt lang(name(resistmodh_charid) + "の毒への耐性は薄れた。", name(resistmodh_charid) + " lose" + _s(resistmodh_charid, 1) + " antibodies to poisons.")
			}
			if ( resistmodh_ele == SKILL_RES_NETHER ) {
				txt lang(name(resistmodh_charid) + "の魂は地獄から遠ざかった。", name(resistmodh_charid) + " " + is(resistmodh_charid) + " afraid of hell.")
			}
			if ( resistmodh_ele == SKILL_RES_MAGIC ) {
				txt lang(name(resistmodh_charid) + "の皮膚から魔力のオーラが消えた。", "The magical aura disappears from " + name(resistmodh_charid) + your(resistmodh_charid) + " body.")
			}
		}
		sdata(resistmodh_ele + STARTING_SKILL_SPACT, resistmodh_charid) = limit(locvar_resistmod_lv, 0, 2000) * 1000000 + sexp(resistmodh_ele, resistmodh_charid) * 1000 + sgrowth(resistmodh_ele, resistmodh_charid)
	}
	snd SOUNDLIST_ATK_ELEC
	if ( meal == 0 ) {
		animeload ANIMATION_THROW, resistmodh_charid
	}
	r1 = resistmodh_charid
	gosub *charaRefresh
	return

#deffunc modcorrupt int modcorrupt_arg1
	locvar_modcorrupt_org = gdata(GDATA_CORRUPTION) / 1000
	locvar_modcorrupt_p = modcorrupt_arg1 + (modcorrupt_arg1 > 0) * gdata(GDATA_ETHER_SPEED)
	if ( trait(TRAIT_RACE_RES_ETHER) ) {
		if ( modcorrupt_arg1 > 0 ) {
			locvar_modcorrupt_p = locvar_modcorrupt_p * 100 / 150
		}
	}
	gdata(GDATA_CORRUPTION) += locvar_modcorrupt_p
	if ( gdata(GDATA_CORRUPTION) < 0 ) {
		gdata(GDATA_CORRUPTION) = 0
	}
	locvar_modcorrupt_mod = gdata(GDATA_CORRUPTION) / 1000 - locvar_modcorrupt_org
	if ( locvar_modcorrupt_mod > 0 ) {
		if ( locvar_modcorrupt_org == 0 ) {
			txtef COLOR_PURPLE
			txt lang("エーテルの病が発症した。", "You show signs of Ether Disease.")
			if ( cfg_extrahelp ) {
				if ( gdata(STARTING_GDATA_HELP + 15) == 0 ) {
					if ( mode == MODELIST_MAIN ) {
						if ( cdata(CDATA_ACTION_PERIOD, CHARA_PLAYER) == 0 ) {
							gdata(STARTING_GDATA_HELP + 15) = 1
							ghelp = 15
							gosub *elona_help
						}
					}
				}
			}
		}
		if ( locvar_modcorrupt_org + locvar_modcorrupt_mod >= 20 ) {
			locvar_modcorrupt_p = 20 - locvar_modcorrupt_org
		}
		else {
			locvar_modcorrupt_p = locvar_modcorrupt_mod
		}
		repeat locvar_modcorrupt_p
			locvar_modcorrupt_cnt2 = cnt
			if ( locvar_modcorrupt_org + locvar_modcorrupt_cnt2 > 20 ) {
				break
			}
			repeat 100000
				await
				tid = rnd(MAX_TRAIT_ETHER - STARTING_TRAIT_ETHER) + STARTING_TRAIT_ETHER
				traitmode = 0
				gosub *trait_ref
				if ( stat == 0 | traitref != 3 ) {
					continue
				}
				if ( trait(tid) <= traitref(1) ) {
					continue
				}
				trait(tid)--
				locvar_modcorrupt_i = 700 + locvar_modcorrupt_org + locvar_modcorrupt_cnt2
				gdata(locvar_modcorrupt_i) = tid
				txtef COLOR_PURPLE
				txt lang("あなたはエーテルに侵食された。", "Your disease is getting worse.")
				txtmore
				txtef COLOR_RED
				txt traitrefn(1)
				if ( tid == TRAIT_ETHER_EQUIP_LEG ) {
					body = EQUIP_SLOT_LEG
					r1 = CHARA_PLAYER
					gosub *act_unequip_part
				}
				if ( tid == TRAIT_ETHER_EQUIP_BACK ) {
					body = EQUIP_SLOT_BACK
					r1 = CHARA_PLAYER
					gosub *act_unequip_part
				}
				if ( tid == TRAIT_ETHER_EQUIP_NECK ) {
					body = EQUIP_SLOT_NECK
					r1 = CHARA_PLAYER
					gosub *act_unequip_part
				}
				if ( tid == TRAIT_ETHER_EQUIP_HEAD ) {
					body = EQUIP_SLOT_HEAD
					r1 = CHARA_PLAYER
					gosub *act_unequip_part
				}
				if ( tid == TRAIT_ETHER_BONES ) {
					body = EQUIP_SLOT_BODY
					r1 = CHARA_PLAYER
					gosub *act_unequip_part
				}
				if ( tid == TRAIT_ETHER_BLADE_HANDS ) {
					body = EQUIP_SLOT_HAND
					r1 = CHARA_PLAYER
					gosub *act_unequip_part
				}
				if ( tid == TRAIT_ETHER_WEBBED ) {
					body = EQUIP_SLOT_RING
					r1 = CHARA_PLAYER
					gosub *act_unequip_part
				}
				if ( tid == TRAIT_ETHER_THICK_ARMS ) {
					body = EQUIP_SLOT_ARM
					r1 = CHARA_PLAYER
					gosub *act_unequip_part
				}
				if ( tid == TRAIT_ETHER_TAIL ) {
					body = EQUIP_SLOT_WAIST
					r1 = CHARA_PLAYER
					gosub *act_unequip_part
				}
				break
			loop
		loop
		animeload ANIMATION_FIZZLE, CHARA_PLAYER
		r1 = CHARA_PLAYER
		gosub *charaRefresh
		return
	}
	if ( locvar_modcorrupt_mod < 0 ) {
		if ( locvar_modcorrupt_org + locvar_modcorrupt_mod < 0 ) {
			locvar_modcorrupt_p = locvar_modcorrupt_org
		}
		else {
			locvar_modcorrupt_p = abs(locvar_modcorrupt_mod)
		}
		if ( locvar_modcorrupt_p < 0 ) {
			locvar_modcorrupt_p = 0
		}
		repeat locvar_modcorrupt_p
			locvar_modcorrupt_cnt2 = cnt
			repeat 100000
				await
				tid = rnd(MAX_TRAIT_ETHER - STARTING_TRAIT_ETHER) + STARTING_TRAIT_ETHER
				if ( cnt == 0 ) {
					locvar_modcorrupt_i = 700 + locvar_modcorrupt_org - locvar_modcorrupt_cnt2 - 1
					if ( gdata(locvar_modcorrupt_i) != 0 ) {
						tid = gdata(locvar_modcorrupt_i)
					}
				}
				traitmode = 0
				gosub *trait_ref
				if ( stat == 0 | traitref != 3 ) {
					continue
				}
				if ( trait(tid) >= 0 ) {
					continue
				}
				trait(tid)++
				txtef COLOR_GREEN
				txt lang("あなたのエーテルの侵食はやわらいだ。", "The symptoms of the Ether Disease seem to calm down.")
				txtmore
				txtef COLOR_GREEN
				txt traitrefn(0)
				break
			loop
		loop
		animeload ANIMATION_BLOOD, CHARA_PLAYER
		r1 = CHARA_PLAYER
		gosub *charaRefresh
		return
	}
	return

#deffunc wet int wet_arg1, int wet_arg2
	if ( cdata(CDATA_CONDITION_OIL, wet_arg1) != 0 ) {
		return
	}
	cdata(CDATA_CONDITION_WET, wet_arg1) += wet_arg2
	if ( synccheck(wet_arg1, -1) ) {
		txtmore
		txt lang(name(wet_arg1) + "は濡れた。", name(wet_arg1) + " get" + _s(wet_arg1) + " wet.")
		if ( cbit(CHARA_BIT_INVISIBLE, wet_arg1) == 1 ) {
			txtmore
			txt lang(name(wet_arg1) + "の姿があらわになった。", name(wet_arg1) + " " + is(wet_arg1) + " revealed " + his(wet_arg1) + " shape.")
			txtmore
		}
	}
	if ( cdata(CDATA_IN_TAGTEAM, wet_arg1) != 0 ) {
		ttc@con = cdata(CDATA_TAGTEAM_PARTNER, wet_arg1)
		cdata(CDATA_CONDITION_WET, ttc@con) += wet_arg2
		txtmore
		txt lang(name(ttc@con) + "は濡れた。", name(ttc@con) + " get" + _s(ttc@con) + " wet.")
		if ( cbit(CHARA_BIT_INVISIBLE, ttc@con) == 1 ) {
			txtmore
			txt lang(name(ttc@con) + "の姿があらわになった。", name(ttc@con) + " " + is(ttc@con) + " revealed " + his(ttc@con) + " shape.")
			txtmore
		}
	}
	if ( wet_arg1 == 0 ) {
		if ( gdata(GDATA_RIDER) != 0 ) {
			cdata(CDATA_CONDITION_WET, gdata(GDATA_RIDER)) += wet_arg2
			txtmore
			txt lang(name(gdata(GDATA_RIDER)) + "は濡れた。", name(gdata(GDATA_RIDER)) + " get" + _s(gdata(GDATA_RIDER)) + " wet.")
			if ( cbit(CHARA_BIT_INVISIBLE, gdata(GDATA_RIDER)) == 1 ) {
				txtmore
				txt lang(name(gdata(GDATA_RIDER)) + "の姿があらわになった。", name(ttc@con) + " " + is(gdata(GDATA_RIDER)) + " revealed " + his(gdata(GDATA_RIDER)) + " shape.")
				txtmore
			}
		}
	}
	return

#deffunc dmgcon int dmgcon_charid, int dmgcon_cond, int dmgcon_power
	if ( dmgcon_power < 1 ) {
		f@con = 0
	}
	else {
		f@con = 1
	}
	if ( gdata(GDATA_FLAG_INVULNERABLE_TURNS) > 0 & dmgcon_charid == CHARA_PLAYER ) {
		f@con = 0
	}
	if ( dmgcon_cond == CONDITION_BLIND ) {
		if ( cbit(CHARA_BIT_RES_BLIND, dmgcon_charid) == 1 ) {
			f@con = 0
		}
		if ( findbuff(dmgcon_charid, BUFF_GEM_POWER) != (-1) ) {
			f@con = 0
		}
		if ( cdata(CDATA_QUALITY, dmgcon_charid) > FIX_QUALITY_GREAT | cdata(CDATA_ID, dmgcon_charid) == CREATURE_ID_AILE_THE_ATTENDANT ) {
			if ( rnd(cdata(CDATA_LEVEL, dmgcon_charid) / 2 + 1) ) {
				f@con = 0
			}
		}
		res@con = SKILL_RES_DARKNESS
		gosub *conCalc
		if ( f@con == 0 ) {
			return 0
		}
		p@con = p@con / 6
		if ( p@con > 0 ) {
			if ( cdata(CDATA_CONDITION_BLIND, dmgcon_charid) == 0 ) {
				cdata(CDATA_CONDITION_BLIND, dmgcon_charid) = p@con
				if ( synccheck(dmgcon_charid, -1) ) {
					txtmore
					txtef COLOR_PURPLE
					txt lang(name(dmgcon_charid) + "は盲目になった。", name(dmgcon_charid) + " " + is(dmgcon_charid) + " blinded.")
                    DamagePopupAdd "" + _conblind, dmgcon_charid, DMGPOPUP_ADD_CONDITION, CONDITION_BLIND
				}
			}
			rowactend dmgcon_charid
		}
		return 1
	}
	if ( dmgcon_cond == CONDITION_WINCE ) {
		if ( findbuff(dmgcon_charid, BUFF_HOLY_VEIL) != (-1) ) {
			f@con = 0
		}
		if ( cdata(CDATA_QUALITY, dmgcon_charid) > FIX_QUALITY_GREAT | cdata(CDATA_ID, dmgcon_charid) == CREATURE_ID_AILE_THE_ATTENDANT ) {
			if ( rnd(cdata(CDATA_LEVEL, dmgcon_charid) / 2 + 1) ) {
				f@con = 0
			}
		}
		res@con = SKILL_RES_FIRE
		gosub *conCalc
		if ( f@con == 0 ) {
			return 0
		}
		p@con = p@con / 6
		if ( p@con > 0 ) {
			if ( cdata(CDATA_CONDITION_WINCE, dmgcon_charid) == 0 ) {
				cdata(CDATA_CONDITION_WINCE, dmgcon_charid) = p@con
				if ( synccheck(dmgcon_charid, -1) ) {
					txtmore
					txtef COLOR_PURPLE
					txt lang(name(dmgcon_charid) + "は怯んだ。", name(dmgcon_charid) + " " + is(dmgcon_charid) + " faltered.")
                    DamagePopupAdd "" + _conkaen, dmgcon_charid, DMGPOPUP_ADD_CONDITION, CONDITION_WINCE
				}
			}
			rowactend dmgcon_charid
		}
		return 1
	}
	if ( dmgcon_cond == CONDITION_CHILLS ) {
		if ( findbuff(dmgcon_charid, BUFF_REGENERATION) != (-1) ) {
			f@con = 0
		}
		if ( cdata(CDATA_QUALITY, dmgcon_charid) > FIX_QUALITY_GREAT | cdata(CDATA_ID, dmgcon_charid) == CREATURE_ID_AILE_THE_ATTENDANT ) {
			if ( rnd(cdata(CDATA_LEVEL, dmgcon_charid) / 2 + 1) ) {
				f@con = 0
			}
		}
		res@con = SKILL_RES_COLD
		gosub *conCalc
		if ( f@con == 0 ) {
			return 0
		}
		p@con = p@con / 6
		if ( p@con > 0 ) {
			if ( cdata(CDATA_CONDITION_CHILLS, dmgcon_charid) == 0 ) {
				cdata(CDATA_CONDITION_CHILLS, dmgcon_charid) = p@con
				if ( synccheck(dmgcon_charid, -1) ) {
					txtmore
					txtef COLOR_PURPLE
					txt lang(name(dmgcon_charid) + "は震え始めた。", name(dmgcon_charid) + " began trembling.")
                    DamagePopupAdd "" + _conreiki, dmgcon_charid, DMGPOPUP_ADD_CONDITION, CONDITION_CHILLS
				}
			}
			rowactend dmgcon_charid
		}
		return 1
	}
	if ( dmgcon_cond == CONDITION_INVERT ) {
		p@con = rnd(dmgcon_power / 2 + 1) + 1
		if ( p@con > 0 ) {
			if ( cdata(CDATA_CONDITION_INVERT, dmgcon_charid) == 0 ) {
				cdata(CDATA_CONDITION_INVERT, dmgcon_charid) = 2
				if ( synccheck(dmgcon_charid, -1) ) {
					txtmore
					txtef COLOR_PURPLE
					txt lang(name(dmgcon_charid) + "は転倒した。", name(dmgcon_charid) + " " + was(dmgcon_charid) + " knocked down.")
                    DamagePopupAdd "" + _coninvert, dmgcon_charid, DMGPOPUP_ADD_CONDITION, CONDITION_INVERT
				}
			}
			rowactend dmgcon_charid
		}
		return 1
	}
	if ( dmgcon_cond == CONDITION_CONFUSE ) {
		if ( cbit(CHARA_BIT_RES_CONFUSE, dmgcon_charid) == 1 ) {
			f@con = 0
		}
		if ( findbuff(dmgcon_charid, BUFF_HERO) != (-1) ) {
			f@con = 0
		}
		if ( findbuff(dmgcon_charid, BUFF_JYUSOU_GOUSHIN) != (-1) ) {
			f@con = 0
		}
		if ( findbuff(dmgcon_charid, BUFF_CONCENTRATION) != (-1) ) {
			f@con = 0
		}
		if ( findbuff(dmgcon_charid, BUFF_RUN_WILDLY) != (-1) ) {
			f@con = 0
		}
		if ( cdata(CDATA_QUALITY, dmgcon_charid) > FIX_QUALITY_GREAT | cdata(CDATA_ID, dmgcon_charid) == CREATURE_ID_AILE_THE_ATTENDANT ) {
			if ( rnd(cdata(CDATA_LEVEL, dmgcon_charid) / 2 + 1) ) {
				f@con = 0
			}
		}
		res@con = SKILL_RES_MIND
		gosub *conCalc
		if ( f@con == 0 ) {
			return 0
		}
		p@con = p@con / 10
		if ( p@con > 0 ) {
			if ( cdata(CDATA_CONDITION_CONFUSE, dmgcon_charid) == 0 ) {
				cdata(CDATA_CONDITION_CONFUSE, dmgcon_charid) = p@con
				if ( synccheck(dmgcon_charid, -1) ) {
					txtmore
					txtef COLOR_PURPLE
					txt lang(name(dmgcon_charid) + "は混乱した。", name(dmgcon_charid) + " " + is(dmgcon_charid) + " confused.")
                    DamagePopupAdd "" + _conconfuse, dmgcon_charid, DMGPOPUP_ADD_CONDITION, CONDITION_CONFUSE
				}
			}
			rowactend dmgcon_charid
		}
		return 1
	}
	if ( dmgcon_cond == CONDITION_PARALYZE ) {
		if ( cbit(CHARA_BIT_RES_PARALYZE, dmgcon_charid) == 1 ) {
			f@con = 0
		}
		if ( findbuff(dmgcon_charid, BUFF_GEM_POWER) != (-1) ) {
			f@con = 0
		}
		if ( cdata(CDATA_QUALITY, dmgcon_charid) > FIX_QUALITY_GREAT | cdata(CDATA_ID, dmgcon_charid) == CREATURE_ID_AILE_THE_ATTENDANT ) {
			if ( rnd(cdata(CDATA_LEVEL, dmgcon_charid) + 1) ) {
				f@con = 0
			}
		}
		res@con = SKILL_RES_NERVE
		gosub *conCalc
		if ( f@con == 0 ) {
			return 0
		}
		p@con = p@con / 10
		if ( p@con > 0 ) {
			if ( cdata(CDATA_CONDITION_PARALYZE, dmgcon_charid) == 0 ) {
				cdata(CDATA_CONDITION_PARALYZE, dmgcon_charid) = p@con
				if ( synccheck(dmgcon_charid, -1) ) {
					txtmore
					txtef COLOR_PURPLE
					txt lang(name(dmgcon_charid) + "は麻痺した。", name(dmgcon_charid) + " " + is(dmgcon_charid) + " paralyzed.")
                    DamagePopupAdd "" + _conparalyze, dmgcon_charid, DMGPOPUP_ADD_CONDITION, CONDITION_PARALYZE
				}
			}
			rowactend dmgcon_charid
		}
		return 1
	}
	if ( dmgcon_cond == CONDITION_MPOISON ) {
		if ( cdata(CDATA_QUALITY, dmgcon_charid) > FIX_QUALITY_GREAT | cdata(CDATA_ID, dmgcon_charid) == CREATURE_ID_AILE_THE_ATTENDANT ) {
			if ( rnd(cdata(CDATA_LEVEL, dmgcon_charid) / 3 + 1) ) {
				f@con = 0
			}
		}
		p@con = rnd(dmgcon_power / 2 + 1) + dmgcon_power / 2
		p@con = p@con * 100 / (50 + sdata(SKILL_NORMAL_MAGIC_CAPACITY, dmgcon_charid))
		p@con = p@con / 5
		if ( p@con > 0 ) {
			if ( cdata(CDATA_CONDITION_MPOISON, dmgcon_charid) == 0 ) {
				cdata(CDATA_CONDITION_MPOISON, dmgcon_charid) = p@con
				if ( synccheck(dmgcon_charid, -1) ) {
					txtmore
					txtef COLOR_PURPLE
					txt lang(name(dmgcon_charid) + "は魔力を漏らし始めた。", name(dmgcon_charid) + " began to leak MP.")
                    DamagePopupAdd "" + _conmpoison, dmgcon_charid, DMGPOPUP_ADD_CONDITION, CONDITION_MPOISON
				}
			}
			else {
				cdata(CDATA_CONDITION_MPOISON, dmgcon_charid) += p@con / 3 + 3
			}
			rowactend dmgcon_charid
		}
		return 1
	}
	if ( dmgcon_cond == CONDITION_POISON ) {
		if ( cbit(CHARA_BIT_RES_POISON, dmgcon_charid) == 1 ) {
			f@con = 0
		}
		if ( cdata(CDATA_QUALITY, dmgcon_charid) > FIX_QUALITY_GREAT | cdata(CDATA_ID, dmgcon_charid) == CREATURE_ID_AILE_THE_ATTENDANT ) {
			if ( rnd(cdata(CDATA_LEVEL, dmgcon_charid) / 3 + 1) ) {
				f@con = 0
			}
		}
		if ( findbuff(dmgcon_charid, BUFF_DISINFECTION) != (-1) ) {
			f@con = 0
		}
		res@con = SKILL_RES_POISON
		gosub *conCalc
		if ( f@con == 0 ) {
			return 0
		}
		p@con = p@con / 5
		if ( p@con > 0 ) {
			if ( cdata(CDATA_CONDITION_POISON, dmgcon_charid) == 0 ) {
				cdata(CDATA_CONDITION_POISON, dmgcon_charid) = p@con
				if ( synccheck(dmgcon_charid, -1) ) {
					txtmore
					txtef COLOR_PURPLE
					txt lang(name(dmgcon_charid) + "は毒におかされた。", name(dmgcon_charid) + " " + is(dmgcon_charid) + " poisoned.")
                    DamagePopupAdd "" + _conpoison, dmgcon_charid, DMGPOPUP_ADD_CONDITION, CONDITION_POISON
				}
			}
			else {
				cdata(CDATA_CONDITION_POISON, dmgcon_charid) += p@con / 3 + 3
			}
			rowactend dmgcon_charid
		}
		return 1
	}
	if ( dmgcon_cond == CONDITION_SLEEP ) {
		if ( cbit(CHARA_BIT_RES_SLEEP, dmgcon_charid) == 1 ) {
			f@con = 0
		}
		if ( findbuff(dmgcon_charid, BUFF_CONCENTRATION) != (-1) ) {
			f@con = 0
		}
		if ( cdata(CDATA_QUALITY, dmgcon_charid) > FIX_QUALITY_GREAT | cdata(CDATA_ID, dmgcon_charid) == CREATURE_ID_AILE_THE_ATTENDANT ) {
			if ( rnd(cdata(CDATA_LEVEL, dmgcon_charid) / 5 + 1) ) {
				f@con = 0
			}
		}
		res@con = SKILL_RES_NERVE
		gosub *conCalc
		if ( f@con == 0 ) {
			return 0
		}
		p@con = p@con / 4
		if ( p@con > 0 ) {
			if ( cdata(CDATA_CONDITION_SLEEP, dmgcon_charid) == 0 ) {
				cdata(CDATA_CONDITION_SLEEP, dmgcon_charid) = p@con
				if ( synccheck(dmgcon_charid, -1) ) {
					txtmore
					txtef COLOR_PURPLE
					txt lang(name(dmgcon_charid) + "は眠りにおちた。", name(dmgcon_charid) + " fall" + _s(dmgcon_charid) + " asleep.")
                    DamagePopupAdd "" + _consleep, dmgcon_charid, DMGPOPUP_ADD_CONDITION, CONDITION_SLEEP
				}
			}
			rowactend dmgcon_charid
		}
		return 1
	}
	if ( dmgcon_cond == CONDITION_FEAR ) {
		if ( cbit(CHARA_BIT_RES_FEAR, dmgcon_charid) == 1 ) {
			f@con = 0
		}
		if ( findbuff(dmgcon_charid, BUFF_HOLY_SHIELD) != (-1) ) {
			f@con = 0
		}
		if ( findbuff(dmgcon_charid, BUFF_HERO) != (-1) ) {
			f@con = 0
		}
		if ( cdata(CDATA_QUALITY, dmgcon_charid) > FIX_QUALITY_GREAT | cdata(CDATA_ID, dmgcon_charid) == CREATURE_ID_AILE_THE_ATTENDANT ) {
			if ( rnd(cdata(CDATA_LEVEL, dmgcon_charid) / 5 + 1) ) {
				f@con = 0
			}
		}
		res@con = SKILL_RES_MIND
		gosub *conCalc
		if ( f@con == 0 ) {
			return 0
		}
		p@con = p@con / 7
		if ( p@con > 0 ) {
			if ( cdata(CDATA_CONDITION_FEAR, dmgcon_charid) == 0 ) {
				cdata(CDATA_CONDITION_FEAR, dmgcon_charid) = p@con
			}
			if ( synccheck(dmgcon_charid, -1) ) {
				txtmore
				txt lang(name(dmgcon_charid) + "は恐怖に侵された。", name(dmgcon_charid) + " " + is(dmgcon_charid) + " frightened.")
                DamagePopupAdd "" + _confear, dmgcon_charid, DMGPOPUP_ADD_CONDITION, CONDITION_FEAR
			}
			if ( TweakData(TWEAK_GAMEPLAY_CG_DISABLE_THIRST, TWEAK_CATEGORY_GAMEPLAY) == FALSE ) {
				if ( cdata(CDATA_THIRST, dmgcon_charid) > 12000 ) {
					if ( synccheck(dmgcon_charid, -1) ) {
						snd SOUNDLIST_WATERM
						txt lang(name(dmgcon_charid) + "は漏らした。", name(dmgcon_charid) + " is incontinent.")
						if ( dmgcon_charid != CHARA_PLAYER ) {
							txt lang("「…スッキリ！」", cnvtalk("Do not look at me!"))
						}
					}
					if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
						if ( cfg_dust_select == 0 ) {
							flt
							itemcreate -1, ITEM_ID_URINE, cdata(CDATA_X, dmgcon_charid), cdata(CDATA_Y, dmgcon_charid), 0
							if ( stat != 0 ) {
								if ( dmgcon_charid != CHARA_PLAYER ) {
									inv(INV_ITEM_SUB_NAME, ci) = cdata(CDATA_ID, dmgcon_charid)
									item_stack -1, ci
								}
							}
						}
					}
					cdata(CDATA_THIRST, dmgcon_charid) = 5000
				}
			}
		}
		return 1
	}
	if ( dmgcon_cond == CONDITION_DIM ) {
		if ( findbuff(dmgcon_charid, BUFF_SUPER_ARMOR) != (-1) ) {
			f@con = 0
		}
		if ( cdata(CDATA_QUALITY, dmgcon_charid) > FIX_QUALITY_GREAT | cdata(CDATA_ID, dmgcon_charid) == CREATURE_ID_AILE_THE_ATTENDANT ) {
			if ( rnd(cdata(CDATA_LEVEL, dmgcon_charid) / 3 + 1) ) {
				f@con = 0
			}
		}
		if ( cdatan(CDATAN_RACE, dmgcon_charid) == "golem" ) {
			f@con = 0
		}
		res@con = SKILL_RES_SOUND
		gosub *conCalc
		if ( f@con == 0 ) {
			return 0
		}
		p@con = p@con / 8
		if ( p@con > 0 ) {
			if ( cdata(CDATA_CONDITION_DIM, dmgcon_charid) == 0 ) {
				cdata(CDATA_CONDITION_DIM, dmgcon_charid) = p@con
				if ( synccheck(dmgcon_charid, -1) ) {
					txtmore
					txtef COLOR_PURPLE
					txt lang(name(dmgcon_charid) + "は朦朧とした。", name(dmgcon_charid) + " " + is(dmgcon_charid) + " dimmed.")
                    DamagePopupAdd "" + _condim, dmgcon_charid, DMGPOPUP_ADD_CONDITION, CONDITION_DIM
				}
			}
			rowactend dmgcon_charid
		}
		return 1
	}
	if ( dmgcon_cond == CONDITION_BLEED ) {
		p@con = dmgcon_power / 25
		if ( cdata(CDATA_QUALITY, dmgcon_charid) > FIX_QUALITY_GREAT | cdata(CDATA_ID, dmgcon_charid) == CREATURE_ID_AILE_THE_ATTENDANT ) {
			p@con /= 5
		}
		if ( p@con > 0 ) {
			if ( cdata(CDATA_CONDITION_BLEED, dmgcon_charid) == 0 ) {
				cdata(CDATA_CONDITION_BLEED, dmgcon_charid) = p@con
				if ( synccheck(dmgcon_charid, -1) ) {
					txtmore
					txtef COLOR_PURPLE
					txt lang(name(dmgcon_charid) + "は血を流し始めた。", name(dmgcon_charid) + " begin" + _s(dmgcon_charid) + " to bleed.")
                    DamagePopupAdd "" + _conbleed, dmgcon_charid, DMGPOPUP_ADD_CONDITION, CONDITION_BLEED
				}
			}
			else {
				cdata(CDATA_CONDITION_BLEED, dmgcon_charid) += p@con
			}
			rowactend dmgcon_charid
		}
		return 1
	}
	if ( dmgcon_cond == CONDITION_DRUNK ) {
		p@con = dmgcon_power / 10
		cdata(CDATA_ALCOHOL_CONSUMED, dmgcon_charid)++
		if ( p@con > 0 ) {
			if ( cdata(CDATA_CONDITION_DRUNK, dmgcon_charid) == 0 ) {
				cdata(CDATA_CONDITION_DRUNK, dmgcon_charid) = p@con
				if ( synccheck(dmgcon_charid, -1) ) {
					txtmore
					txt lang(name(dmgcon_charid) + "は酔っ払った。", name(dmgcon_charid) + " get" + _s(dmgcon_charid) + " drunk.")
                    DamagePopupAdd "" + _condrunk, dmgcon_charid, DMGPOPUP_ADD_CONDITION, CONDITION_DRUNK
				}
			}
			else {
				cdata(CDATA_CONDITION_DRUNK, dmgcon_charid) += p@con
			}
		}
		return 1
	}
	if ( dmgcon_cond == CONDITION_INSANE ) {
		if ( cdata(CDATA_SANITY, dmgcon_charid) > 100 ) {
			cdata(CDATA_SANITY, dmgcon_charid) = 100
		}
		p@con = dmgcon_power / 8 + cdata(CDATA_SANITY, dmgcon_charid)
		if ( cdata(CDATA_CONDITION_DRUNK, dmgcon_charid) > 0 ) {
			p@con /= 4
		}
		if ( cdata(CDATA_QUALITY, dmgcon_charid) > FIX_QUALITY_GREAT | cdata(CDATA_ID, dmgcon_charid) == CREATURE_ID_AILE_THE_ATTENDANT ) {
			p@con /= 8
		}
		if ( findbuff(dmgcon_charid, BUFF_RETENTION) != (-1) ) {
			p@con /= 2
		}
		if ( p@con > 0 ) {
			if ( cdata(CDATA_CONDITION_INSANE, dmgcon_charid) == 0 ) {
				cdata(CDATA_CONDITION_INSANE, dmgcon_charid) = p@con
				if ( synccheck(dmgcon_charid, -1) ) {
					txtmore
					txtef COLOR_PURPLE
					txt lang(name(dmgcon_charid) + "は気が狂った。", name(dmgcon_charid) + " become" + _s(dmgcon_charid) + " insane.")
                    DamagePopupAdd "" + _coninsane, dmgcon_charid, DMGPOPUP_ADD_CONDITION, CONDITION_INSANE
				}
			}
			else {
				cdata(CDATA_CONDITION_INSANE, dmgcon_charid) += p@con / 3 + 1
			}
			rowactend dmgcon_charid
		}
		return 1
	}
	if ( dmgcon_cond == CONDITION_SICK ) {
		p@con = dmgcon_power / 10
		if ( p@con > 0 ) {
			if ( cdata(CDATA_CONDITION_SICK, dmgcon_charid) == 0 ) {
				cdata(CDATA_CONDITION_SICK, dmgcon_charid) = p@con
				if ( synccheck(dmgcon_charid, -1) ) {
					txtmore
					txtef COLOR_PURPLE
					txt lang(name(dmgcon_charid) + "は病気になった。", name(dmgcon_charid) + " get" + _s(dmgcon_charid) + " sick.")
                    DamagePopupAdd "" + _consick, dmgcon_charid, DMGPOPUP_ADD_CONDITION, CONDITION_SICK
				}
				if ( dmgcon_charid == CHARA_PLAYER ) {
					item_find ITEM_ID_AMULET_OF_JURE, 3, 1
					if ( stat != (-1) ) {
						if ( inv(INV_ITEM_NUM, stat) >= 1 ) {
							if ( rnd(64) >= 1 ) {
								snd SOUNDLIST_PRAY2
								txtef COLOR_GREEN
								txt lang("しかし健康のお守りが輝き、瞬く間に病気が完治した。", "But the Amulet of Jure shines brightly for a moment, instantly curing the sickness.")
								cdata(CDATA_CONDITION_SICK, dmgcon_charid) = 0
                                DamagePopupAdd "" + _consick, dmgcon_charid, DMGPOPUP_REMOVE_CONDITION, CONDITION_SICK
							}
						}
					}
				}
			}
			else {
				cdata(CDATA_CONDITION_SICK, dmgcon_charid) += p@con / 10 + 1
			}
		}
		return 1
	}
	return

*conCalc
	p@con = rnd(dmgcon_power / 2 + 1) + dmgcon_power / 2
	r@con = sdata(res@con, dmgcon_charid) / 50
	p@con = p@con * 100 / (50 + r@con * 50)
	if ( r@con >= 3 ) {
		if ( p@con < 40 ) {
			f@con = 0
		}
	}
	return

#define global healhp(%1,%2,%3=1) _healhp %1, %2, %3
#deffunc _healhp int healhp_charid, int healhp_amount, int healhp_showpopup
	cdata(CDATA_HP, healhp_charid) += healhp_amount
	if ( cdata(CDATA_HP, healhp_charid) > cdata(CDATA_MAX_HP, healhp_charid) ) {
		cdata(CDATA_HP, healhp_charid) = cdata(CDATA_MAX_HP, healhp_charid)
	}

    /********** RUIN0X11 CUSTOM - BEGINNING **********/

    if ( healhp_showpopup & synccheck(healhp_charid, -1) ) {
        DamagePopupAdd "" + healhp_amount, healhp_charid, DMGPOPUP_HEAL, 0
    }

    /********** RUIN0X11 CUSTOM - ENDING **********/

	return

#define global healmp(%1,%2,%3=1) _healmp %1, %2, %3
#deffunc _healmp int healmp_charid, int healmp_amount, int healmp_showpopup
	cdata(CDATA_MP, healmp_charid) += healmp_amount
	if ( cdata(CDATA_MP, healmp_charid) > cdata(CDATA_MAX_MP, healmp_charid) ) {
		cdata(CDATA_MP, healmp_charid) = cdata(CDATA_MAX_MP, healmp_charid)
	}
	if ( cdata(CDATA_CONDITION_MPOISON, healmp_charid) > 1 ) {
		cdata(CDATA_CONDITION_MPOISON, healmp_charid) = cdata(CDATA_CONDITION_MPOISON, healmp_charid) / 2 - 10
		if ( cdata(CDATA_CONDITION_MPOISON, healmp_charid) < 1 ) {
			cdata(CDATA_CONDITION_MPOISON, healmp_charid) = 1
		}
	}

    /********** RUIN0X11 CUSTOM - BEGINNING **********/

    if ( healmp_showpopup & synccheck(healmp_charid, -1) ) {
        DamagePopupAdd "" + healmp_amount, healmp_charid, DMGPOPUP_HEAL_MP, 0
    }

    /********** RUIN0X11 CUSTOM - ENDING **********/

	return

#define global healsp(%1,%2,%3=1) _healsp %1, %2, %3
#deffunc _healsp int healsp_charid, int healsp_amount, int healsp_showpopup
	cdata(CDATA_SP, healsp_charid) += healsp_amount
	if ( cdata(CDATA_SP, healsp_charid) > cdata(CDATA_MAX_SP, healsp_charid) ) {
		cdata(CDATA_SP, healsp_charid) = cdata(CDATA_MAX_SP, healsp_charid)
	}
	if ( cdata(CDATA_SP, healsp_charid) < cdata(CDATA_MAX_SP, healsp_charid) ) {
		refreshspeed healsp_charid
	}

    /********** RUIN0X11 CUSTOM - BEGINNING **********/

    if ( healsp_showpopup & synccheck(healsp_charid, -1) ) {
        DamagePopupAdd "" + healsp_amount, healsp_charid, DMGPOPUP_HEAL_SP, 0
    }

    /********** RUIN0X11 CUSTOM - ENDING **********/

	return

#deffunc healcon int healcon_charid, int healcon_cond, int healcon_arg3
	if ( healcon_cond == CONDITION_WINCE ) {
		if ( cdata(CDATA_CONDITION_WINCE, healcon_charid) > 0 ) {
			if ( healcon_arg3 == 0 ) {
				cdata(CDATA_CONDITION_WINCE, healcon_charid) = 0
			}
			else {
				cdata(CDATA_CONDITION_WINCE, healcon_charid) -= healcon_arg3
			}
			if ( cdata(CDATA_CONDITION_WINCE, healcon_charid) <= 0 ) {
				cdata(CDATA_CONDITION_WINCE, healcon_charid) = 0
				if ( synccheck(healcon_charid, -1) ) {
					txt lang(name(healcon_charid) + "は怯みから回復した。", name(healcon_charid) + " recover" + _s(healcon_charid) + " from faltering.")
                    DamagePopupAdd "" + _conkaen, healcon_charid, DMGPOPUP_REMOVE_CONDITION, CONDITION_WINCE
				}
			}
			return
		}
	}
	if ( healcon_cond == CONDITION_CHILLS ) {
		if ( cdata(CDATA_CONDITION_CHILLS, healcon_charid) > 0 ) {
			if ( healcon_arg3 == 0 ) {
				cdata(CDATA_CONDITION_CHILLS, healcon_charid) = 0
			}
			else {
				cdata(CDATA_CONDITION_CHILLS, healcon_charid) -= healcon_arg3
			}
			if ( cdata(CDATA_CONDITION_CHILLS, healcon_charid) <= 0 ) {
				cdata(CDATA_CONDITION_CHILLS, healcon_charid) = 0
				if ( synccheck(healcon_charid, -1) ) {
					txt lang(name(healcon_charid) + "の震えが止まった。", name(healcon_charid) + " suppressed " + his(healcon_charid) + " trembling.")
                    DamagePopupAdd "" + _conreiki, healcon_charid, DMGPOPUP_REMOVE_CONDITION, CONDITION_CHILLS
				}
			}
			return
		}
	}
	if ( healcon_cond == CONDITION_FEAR ) {
		if ( cdata(CDATA_CONDITION_FEAR, healcon_charid) > 0 ) {
			if ( healcon_arg3 == 0 ) {
				cdata(CDATA_CONDITION_FEAR, healcon_charid) = 0
			}
			else {
				cdata(CDATA_CONDITION_FEAR, healcon_charid) -= healcon_arg3
			}
			if ( cdata(CDATA_CONDITION_FEAR, healcon_charid) <= 0 ) {
				cdata(CDATA_CONDITION_FEAR, healcon_charid) = 0
				if ( synccheck(healcon_charid, -1) ) {
					txt lang(name(healcon_charid) + "は恐怖から立ち直った。", name(healcon_charid) + " shake" + _s(healcon_charid) + " off " + his(healcon_charid) + " fear.")
                    DamagePopupAdd "" + _confear, healcon_charid, DMGPOPUP_REMOVE_CONDITION, CONDITION_FEAR
				}
			}
			return
		}
	}
	if ( healcon_cond == CONDITION_BLIND ) {
		if ( cdata(CDATA_CONDITION_BLIND, healcon_charid) > 0 ) {
			if ( healcon_arg3 == 0 ) {
				cdata(CDATA_CONDITION_BLIND, healcon_charid) = 0
			}
			else {
				cdata(CDATA_CONDITION_BLIND, healcon_charid) -= healcon_arg3
			}
			if ( cdata(CDATA_CONDITION_BLIND, healcon_charid) <= 0 ) {
				cdata(CDATA_CONDITION_BLIND, healcon_charid) = 0
				if ( synccheck(healcon_charid, -1) ) {
					txt lang(name(healcon_charid) + "は盲目から回復した。", name(healcon_charid) + " can see again.")
                    DamagePopupAdd "" + _conblind, healcon_charid, DMGPOPUP_REMOVE_CONDITION, CONDITION_BLIND
				}
			}
			return
		}
	}
	if ( healcon_cond == CONDITION_CONFUSE ) {
		if ( cdata(CDATA_CONDITION_CONFUSE, healcon_charid) > 0 ) {
			if ( healcon_arg3 == 0 ) {
				cdata(CDATA_CONDITION_CONFUSE, healcon_charid) = 0
			}
			else {
				cdata(CDATA_CONDITION_CONFUSE, healcon_charid) -= healcon_arg3
			}
			if ( cdata(CDATA_CONDITION_CONFUSE, healcon_charid) <= 0 ) {
				cdata(CDATA_CONDITION_CONFUSE, healcon_charid) = 0
				if ( synccheck(healcon_charid, -1) ) {
					txt lang(name(healcon_charid) + "は混乱から回復した。", name(healcon_charid) + " recover" + _s(healcon_charid) + " from confusion.")
                    DamagePopupAdd "" + _conconfuse, healcon_charid, DMGPOPUP_REMOVE_CONDITION, CONDITION_CONFUSE
				}
			}
			return
		}
	}
	if ( healcon_cond == CONDITION_PARALYZE ) {
		if ( cdata(CDATA_CONDITION_PARALYZE, healcon_charid) > 0 ) {
			if ( healcon_arg3 == 0 ) {
				cdata(CDATA_CONDITION_PARALYZE, healcon_charid) = 0
			}
			else {
				cdata(CDATA_CONDITION_PARALYZE, healcon_charid) -= healcon_arg3
			}
			if ( cdata(CDATA_CONDITION_PARALYZE, healcon_charid) <= 0 ) {
				cdata(CDATA_CONDITION_PARALYZE, healcon_charid) = -1
				if ( synccheck(healcon_charid, -1) ) {
					txt lang(name(healcon_charid) + "は麻痺から回復した。", name(healcon_charid) + " recover" + _s(healcon_charid) + " from paralysis.")
                    DamagePopupAdd "" + _conparalyze, healcon_charid, DMGPOPUP_REMOVE_CONDITION, CONDITION_PARALYZE
				}
			}
			return
		}
	}
	if ( healcon_cond == CONDITION_OIL ) {
		if ( cdata(CDATA_CONDITION_OIL, healcon_charid) > 0 ) {
			if ( healcon_arg3 == 0 ) {
				cdata(CDATA_CONDITION_OIL, healcon_charid) = 0
			}
			else {
				cdata(CDATA_CONDITION_OIL, healcon_charid) -= healcon_arg3
			}
			if ( cdata(CDATA_CONDITION_OIL, healcon_charid) <= 0 ) {
				cdata(CDATA_CONDITION_OIL, healcon_charid) = 0
				if ( synccheck(healcon_charid, -1) ) {
					txt lang(name(healcon_charid) + "のオイルが全て蒸発した。", name(healcon_charid) + " recover" + _s(healcon_charid) + " from oil.")
                    DamagePopupAdd "" + _conoil, healcon_charid, DMGPOPUP_REMOVE_CONDITION, CONDITION_OIL
				}
			}
			return
		}
	}
	if ( healcon_cond == CONDITION_MPOISON ) {
		if ( cdata(CDATA_CONDITION_MPOISON, healcon_charid) > 0 ) {
			if ( healcon_arg3 == 0 ) {
				cdata(CDATA_CONDITION_MPOISON, healcon_charid) = 0
			}
			else {
				cdata(CDATA_CONDITION_MPOISON, healcon_charid) -= healcon_arg3
			}
			if ( cdata(CDATA_CONDITION_MPOISON, healcon_charid) <= 0 ) {
				cdata(CDATA_CONDITION_MPOISON, healcon_charid) = 0
				if ( synccheck(healcon_charid, -1) ) {
					txt lang(name(healcon_charid) + "の魔力の漏れが収まった。", name(healcon_charid) + " recover" + _s(healcon_charid) + " from MP leak.")
                    DamagePopupAdd "" + _conmpoison, healcon_charid, DMGPOPUP_REMOVE_CONDITION, CONDITION_MPOISON
				}
			}
			return
		}
	}
	if ( healcon_cond == CONDITION_POISON ) {
		if ( cdata(CDATA_CONDITION_POISON, healcon_charid) > 0 ) {
			if ( healcon_arg3 == 0 ) {
				cdata(CDATA_CONDITION_POISON, healcon_charid) = 0
			}
			else {
				cdata(CDATA_CONDITION_POISON, healcon_charid) -= healcon_arg3
			}
			if ( cdata(CDATA_CONDITION_POISON, healcon_charid) <= 0 ) {
				cdata(CDATA_CONDITION_POISON, healcon_charid) = 0
				if ( synccheck(healcon_charid, -1) ) {
					txt lang(name(healcon_charid) + "は毒から回復した。", name(healcon_charid) + " recover" + _s(healcon_charid) + " from poison.")
                    DamagePopupAdd "" + _conpoison, healcon_charid, DMGPOPUP_REMOVE_CONDITION, CONDITION_POISON
				}
			}
			return
		}
	}
	if ( healcon_cond == CONDITION_SLEEP ) {
		if ( cdata(CDATA_CONDITION_SLEEP, healcon_charid) > 0 ) {
			if ( healcon_arg3 == 0 ) {
				cdata(CDATA_CONDITION_SLEEP, healcon_charid) = 0
			}
			else {
				cdata(CDATA_CONDITION_SLEEP, healcon_charid) -= healcon_arg3
			}
			if ( cdata(CDATA_CONDITION_SLEEP, healcon_charid) <= 0 ) {
				cdata(CDATA_CONDITION_SLEEP, healcon_charid) = 0
				if ( synccheck(healcon_charid, -1) ) {
					txt lang(name(healcon_charid) + "は心地よい眠りから覚めた。", name(healcon_charid) + " awake" + _s(healcon_charid) + " from " + his(healcon_charid) + " sleep.")
                    DamagePopupAdd "" + _consleep, healcon_charid, DMGPOPUP_REMOVE_CONDITION, CONDITION_SLEEP
				}
			}
			return
		}
	}
	if ( healcon_cond == CONDITION_DIM ) {
		if ( cdata(CDATA_CONDITION_DIM, healcon_charid) > 0 ) {
			if ( healcon_arg3 == 0 ) {
				cdata(CDATA_CONDITION_DIM, healcon_charid) = 0
			}
			else {
				cdata(CDATA_CONDITION_DIM, healcon_charid) -= healcon_arg3
			}
			if ( cdata(CDATA_CONDITION_DIM, healcon_charid) <= 0 ) {
				cdata(CDATA_CONDITION_DIM, healcon_charid) = 0
				if ( synccheck(healcon_charid, -1) ) {
					txt lang(name(healcon_charid) + "の意識ははっきりした。", name(healcon_charid) + your(healcon_charid) + " conciousness becomes clear.")
                    DamagePopupAdd "" + _condim, healcon_charid, DMGPOPUP_REMOVE_CONDITION, CONDITION_DIM
				}
			}
		}
	}
	if ( healcon_cond == CONDITION_BLEED ) {
		if ( cdata(CDATA_CONDITION_BLEED, healcon_charid) > 0 ) {
			if ( healcon_arg3 == 0 ) {
				cdata(CDATA_CONDITION_BLEED, healcon_charid) = 0
			}
			else {
				cdata(CDATA_CONDITION_BLEED, healcon_charid) -= healcon_arg3
			}
			if ( cdata(CDATA_CONDITION_BLEED, healcon_charid) <= 0 ) {
				cdata(CDATA_CONDITION_BLEED, healcon_charid) = 0
				if ( synccheck(healcon_charid, -1) ) {
					txt lang(name(healcon_charid) + "の出血は止まった。", name(healcon_charid) + your(healcon_charid) + " bleeding stops.")
                    DamagePopupAdd "" + _conbleed, healcon_charid, DMGPOPUP_REMOVE_CONDITION, CONDITION_BLEED
				}
			}
		}
	}
	if ( healcon_cond == CONDITION_DRUNK ) {
		if ( cdata(CDATA_CONDITION_DRUNK, healcon_charid) > 0 ) {
			if ( healcon_arg3 == 0 ) {
				cdata(CDATA_CONDITION_DRUNK, healcon_charid) = 0
			}
			else {
				cdata(CDATA_CONDITION_DRUNK, healcon_charid) -= healcon_arg3
			}
			if ( cdata(CDATA_CONDITION_DRUNK, healcon_charid) <= 0 ) {
				cdata(CDATA_CONDITION_DRUNK, healcon_charid) = 0
				if ( synccheck(healcon_charid, -1) ) {
					txt lang(name(healcon_charid) + "の酔いは覚めた。", name(healcon_charid) + " get" + _s(healcon_charid) + " sober.")
                    DamagePopupAdd "" + _condrunk, healcon_charid, DMGPOPUP_REMOVE_CONDITION, CONDITION_DRUNK
				}
			}
		}
	}
	if ( healcon_cond == CONDITION_INSANE ) {
		if ( cdata(CDATA_CONDITION_INSANE, healcon_charid) > 0 ) {
			if ( healcon_arg3 == 0 ) {
				cdata(CDATA_CONDITION_INSANE, healcon_charid) = 0
			}
			else {
				cdata(CDATA_CONDITION_INSANE, healcon_charid) -= healcon_arg3
			}
			if ( cdata(CDATA_CONDITION_INSANE, healcon_charid) <= 0 ) {
				cdata(CDATA_CONDITION_INSANE, healcon_charid) = 0
				if ( synccheck(healcon_charid, -1) ) {
					txt lang(name(healcon_charid) + "は正気に戻った。", name(healcon_charid) + " come" + _s(healcon_charid) + " to " + yourself(healcon_charid) + " again.")
                    DamagePopupAdd "" + _coninsane, healcon_charid, DMGPOPUP_REMOVE_CONDITION, CONDITION_INSANE
				}
			}
		}
	}
	if ( healcon_cond == CONDITION_SICK ) {
		if ( cdata(CDATA_CONDITION_SICK, healcon_charid) > 0 ) {
			if ( healcon_arg3 == 0 ) {
				cdata(CDATA_CONDITION_SICK, healcon_charid) = 0
			}
			else {
				cdata(CDATA_CONDITION_SICK, healcon_charid) -= healcon_arg3
			}
			if ( cdata(CDATA_CONDITION_SICK, healcon_charid) <= 0 ) {
				snd SOUNDLIST_PRAY1
				cdata(CDATA_CONDITION_SICK, healcon_charid) = 0
				if ( synccheck(healcon_charid, -1) ) {
					txt lang(name(healcon_charid) + "の病気は治った。", name(healcon_charid) + " recover" + _s(healcon_charid) + " from " + his(healcon_charid) + " illness.")
                    DamagePopupAdd "" + _consick, healcon_charid, DMGPOPUP_REMOVE_CONDITION, CONDITION_SICK
				}
			}
		}
	}
	return

#deffunc spillblood int spillblood_arg1, int spillblood_arg2, int spillblood_arg3
	repeat spillblood_arg3 + 1
		if ( cnt == 0 ) {
			locvar_spillblood_dx = spillblood_arg1
			locvar_spillblood_dy = spillblood_arg2
		}
		else {
			locvar_spillblood_dx = spillblood_arg1 + rnd(2) - rnd(2)
			locvar_spillblood_dy = spillblood_arg2 + rnd(2) - rnd(2)
		}
		if ( locvar_spillblood_dx < 0 | locvar_spillblood_dx >= mdata(MDATA_WIDTH) | locvar_spillblood_dy < 0 | locvar_spillblood_dy >= mdata(MDATA_HEIGHT) ) {
			continue
		}
		if ( chipm(CHIPM_WALL, map(locvar_spillblood_dx, locvar_spillblood_dy, 0)) ) {
			continue
		}
		if ( map(locvar_spillblood_dx, locvar_spillblood_dy, 7) \ 10 < 5 ) {
			map(locvar_spillblood_dx, locvar_spillblood_dy, 7)++
		}
	loop
	return

#deffunc spillfrag int spillfrag_arg1, int spillfrag_arg2, int spillfrag_arg3
	repeat spillfrag_arg3 + 1
		if ( cnt == 0 ) {
			locvar_spillblood_dx = spillfrag_arg1
			locvar_spillblood_dy = spillfrag_arg2
		}
		else {
			locvar_spillblood_dx = spillfrag_arg1 + rnd(2) - rnd(2)
			locvar_spillblood_dy = spillfrag_arg2 + rnd(2) - rnd(2)
		}
		if ( locvar_spillblood_dx < 0 | locvar_spillblood_dx >= mdata(MDATA_WIDTH) | locvar_spillblood_dy < 0 | locvar_spillblood_dy >= mdata(MDATA_HEIGHT) ) {
			continue
		}
		if ( chipm(CHIPM_WALL, map(locvar_spillblood_dx, locvar_spillblood_dy, 0)) ) {
			continue
		}
		if ( map(locvar_spillblood_dx, locvar_spillblood_dy, 7) / 10 < 4 ) {
			map(locvar_spillblood_dx, locvar_spillblood_dy, 7) = map(locvar_spillblood_dx, locvar_spillblood_dy, 7) \ 10 + (map(locvar_spillblood_dx, locvar_spillblood_dy, 7) / 10 + 1) * 10
		}
	loop
	return

#deffunc check_talk int check_talk_arg1, int check_talk_arg2
	if ( cdata(CDATA_EXIST, check_talk_arg2) == CHAR_STATE_ALIVE ) {
		return
	}
	if ( check_talk_arg1 >= 0 ) {
		if ( check_talk_arg1 == 0 | cdata(CDATA_RELATION, check_talk_arg1) >= 10 ) {
			if ( cbit(CHARA_BIT_NECRO, check_talk_arg2) != TRUE & cdata(CDATA_RELATION, check_talk_arg2) != RELATION_ALLY & gdata(GDATA_FLAG_MAIN) != 900 ) {
				if ( gdata(GDATA_FLAG_LEOLD_JOB_STAGE) == 1 ) {
					if ( cdata(CDATA_LEVEL, check_talk_arg2) >= gdata(GDATA_FLAG_LEOLD_JOB_TIER) ) {
						if ( cdata(CDATA_RELATION_ORG, check_talk_arg2) == (-3) ) {
							gdata(GDATA_FLAG_LEOLD_JOB_STAGE) = 2
							txt_questupdate
						}
					}
				}
				if ( cdata(CDATA_SHOP_INVEST, check_talk_arg1) < cdata(CDATA_LEVEL, check_talk_arg2) ) {
					cdata(CDATA_SHOP_INVEST, check_talk_arg1) = cdata(CDATA_LEVEL, check_talk_arg2)
				}
			}
		}
	}
	if ( gdata(GDATA_AREA) == AREA_PET_ARENA | gdata(GDATA_AREA) == AREA_SHOW_HOUSE | gdata(GDATA_AREA) == AREA_ARENA ) {
		return
	}
	locvar_check_talk_p = 0
	if ( check_talk_arg1 < 0 ) {
		return
	}
	if ( cdata(CDATA_INIT_ATTR, check_talk_arg1) == 0 ) {
		cdata(CDATA_INIT_ATTR, check_talk_arg1) = sorg(SKILL_ATTR_STR, check_talk_arg1) + sorg(SKILL_ATTR_CON, check_talk_arg1) + sorg(SKILL_ATTR_DEX, check_talk_arg1) + sorg(SKILL_ATTR_PER, check_talk_arg1) + sorg(SKILL_ATTR_LER, check_talk_arg1) + sorg(SKILL_ATTR_WIL, check_talk_arg1) + sorg(SKILL_ATTR_MAG, check_talk_arg1) + sorg(SKILL_ATTR_CHA, check_talk_arg1)
	}
	if ( cdata(CDATA_INIT_SPEED, check_talk_arg1) == 0 ) {
		cdata(CDATA_INIT_SPEED, check_talk_arg1) = sorg(SKILL_ATTR_SPD, check_talk_arg1)
	}
	if ( cdata(CDATA_INIT_ATTR, check_talk_arg2) == 0 ) {
		cdata(CDATA_INIT_ATTR, check_talk_arg2) = sorg(SKILL_ATTR_STR, check_talk_arg2) + sorg(SKILL_ATTR_CON, check_talk_arg2) + sorg(SKILL_ATTR_DEX, check_talk_arg2) + sorg(SKILL_ATTR_PER, check_talk_arg2) + sorg(SKILL_ATTR_LER, check_talk_arg2) + sorg(SKILL_ATTR_WIL, check_talk_arg2) + sorg(SKILL_ATTR_MAG, check_talk_arg2) + sorg(SKILL_ATTR_CHA, check_talk_arg2)
	}
	if ( cdata(CDATA_INIT_SPEED, check_talk_arg2) == 0 ) {
		cdata(CDATA_INIT_SPEED, check_talk_arg2) = sorg(SKILL_ATTR_SPD, check_talk_arg2)
	}
	if ( cdata(CDATA_INIT_LIFEMANA, check_talk_arg1) == 0 ) {
		cdata(CDATA_INIT_LIFEMANA, check_talk_arg1) = limit(sorg(SKILL_ATTR_LIFE, check_talk_arg1), 50, 200) * 2 + limit(sorg(SKILL_ATTR_MANA, check_talk_arg1), 50, 200) / 2
	}
	if ( charaGivesExp(check_talk_arg2) & cdata(CDATA_ROLE, check_talk_arg2) != ROLE_BOUNTY_HUNTER & cdata(CDATA_ROLE, check_talk_arg2) != ROLE_GUARD & cbit(CHARA_BIT_CRADLE_15TH, check_talk_arg2) != 1 ) {
		if ( gdata(GDATA_AREA) != AREA_VOID ) {
			if ( sorg(SKILL_ATTR_SPD, check_talk_arg2) > sorg(SKILL_ATTR_SPD, check_talk_arg1) ) {
				skillexp SKILL_ATTR_SPD, check_talk_arg1, limit(sorg(SKILL_ATTR_SPD, check_talk_arg2), 10, 2000) / 5
			}
		}
		if ( cdata(CDATA_AP_CURRENT, check_talk_arg1) < 2000 ) {
			locvar_check_talk_aspd = cdata(CDATA_INIT_SPEED, check_talk_arg1)
			if ( gdata(GDATA_RIDER) != 0 ) {
				if ( check_talk_arg1 == 0 | check_talk_arg1 == gdata(GDATA_RIDER) ) {
					if ( cdata(CDATA_INIT_SPEED, CHARA_PLAYER) > cdata(CDATA_INIT_SPEED, gdata(GDATA_RIDER)) ) {
						locvar_check_talk_aspd = cdata(CDATA_INIT_SPEED, CHARA_PLAYER)
					}
					else {
						locvar_check_talk_aspd = cdata(CDATA_INIT_SPEED, gdata(GDATA_RIDER))
					}
				}
			}
			if ( cdata(CDATA_INIT_ATTR, check_talk_arg2) + cdata(CDATA_INIT_LIFEMANA, check_talk_arg2) >= 1000 ) {
				if ( cdata(CDATA_INIT_ATTR, check_talk_arg2) + cdata(CDATA_INIT_SPEED, check_talk_arg2) > cdata(CDATA_INIT_ATTR, check_talk_arg1) + cdata(CDATA_INIT_LIFEMANA, check_talk_arg1) + locvar_check_talk_aspd + (cdata(CDATA_AP_TOTAL, check_talk_arg1) + 1) / 5 ) {
					if ( cdata(CDATA_INIT_SPEED, check_talk_arg2) > locvar_check_talk_aspd * 5 ) {
						cdata(CDATA_AP_CURRENT, check_talk_arg1) += 1
						cdata(CDATA_AP_TOTAL, check_talk_arg1) += 1
						if ( check_talk_arg1 != 0 ) {
							cdata(CDATA_AP_CURRENT, check_talk_arg1) += 1
							cdata(CDATA_AP_TOTAL, check_talk_arg1) += 1
						}
					}
					if ( cdata(CDATA_INIT_SPEED, check_talk_arg2) > locvar_check_talk_aspd * 4 ) {
						cdata(CDATA_AP_CURRENT, check_talk_arg1) += 2
						cdata(CDATA_AP_TOTAL, check_talk_arg1) += 2
						if ( check_talk_arg1 != 0 ) {
							cdata(CDATA_AP_CURRENT, check_talk_arg1) += 2
							cdata(CDATA_AP_TOTAL, check_talk_arg1) += 2
						}
					}
					if ( cdata(CDATA_INIT_SPEED, check_talk_arg2) > locvar_check_talk_aspd * 3 ) {
						cdata(CDATA_AP_CURRENT, check_talk_arg1) += 2
						cdata(CDATA_AP_TOTAL, check_talk_arg1) += 2
						if ( check_talk_arg1 != 0 ) {
							cdata(CDATA_AP_CURRENT, check_talk_arg1) += 2
							cdata(CDATA_AP_TOTAL, check_talk_arg1) += 2
						}
					}
					if ( cdata(CDATA_INIT_SPEED, check_talk_arg2) > locvar_check_talk_aspd * 2 ) {
						cdata(CDATA_AP_CURRENT, check_talk_arg1) += 2
						cdata(CDATA_AP_TOTAL, check_talk_arg1) += 2
						if ( check_talk_arg1 != 0 ) {
							cdata(CDATA_AP_CURRENT, check_talk_arg1) += 2
							cdata(CDATA_AP_TOTAL, check_talk_arg1) += 2
						}
					}
					if ( cdata(CDATA_INIT_SPEED, check_talk_arg2) > locvar_check_talk_aspd ) {
						cdata(CDATA_AP_CURRENT, check_talk_arg1)++
						cdata(CDATA_AP_TOTAL, check_talk_arg1)++
						snd SOUNDLIST_ENC
						animeload ANIMATION_CHAOS_CHILD, check_talk_arg1
						if ( check_talk_arg1 != 0 ) {
							cdata(CDATA_AP_CURRENT, check_talk_arg1)++
							cdata(CDATA_AP_TOTAL, check_talk_arg1)++
						}
					}
					if ( cdata(CDATA_AP_CURRENT, check_talk_arg1) > 2000 ) {
						cdata(CDATA_AP_TOTAL, check_talk_arg1) -= cdata(CDATA_AP_CURRENT, check_talk_arg1) - 2000
						cdata(CDATA_AP_CURRENT, check_talk_arg1) = 2000
					}
					if ( cdata(CDATA_AP_TOTAL, check_talk_arg1) < 0 ) {
						cdata(CDATA_AP_TOTAL, check_talk_arg1) = 2000
					}
				}
			}
		}
		locvar_check_talk_ccr = -1
		if ( gdata(GDATA_RIDER) != 0 ) {
			if ( check_talk_arg1 == 0 ) {
				locvar_check_talk_ccr = gdata(GDATA_RIDER)
			}
			if ( check_talk_arg1 == gdata(GDATA_RIDER) ) {
				locvar_check_talk_ccr = 0
			}
		}
		if ( locvar_check_talk_ccr >= 0 ) {
			if ( cdata(CDATA_AP_CURRENT, locvar_check_talk_ccr) < 2000 ) {
				locvar_check_talk_aspd = cdata(CDATA_INIT_SPEED, locvar_check_talk_ccr)
				if ( cdata(CDATA_INIT_SPEED, CHARA_PLAYER) > cdata(CDATA_INIT_SPEED, gdata(GDATA_RIDER)) ) {
					locvar_check_talk_aspd = cdata(CDATA_INIT_SPEED, CHARA_PLAYER)
				}
				else {
					locvar_check_talk_aspd = cdata(CDATA_INIT_SPEED, gdata(GDATA_RIDER))
				}
				if ( 0 ) {
					cdata(CDATA_INIT_ATTR, CHARA_PLAYER) = 1
					locvar_check_talk_aspd = 1
					cdata(CDATA_AP_TOTAL, CHARA_PLAYER) = 1
				}
				if ( cdata(CDATA_INIT_ATTR, check_talk_arg2) + cdata(CDATA_INIT_LIFEMANA, check_talk_arg2) >= 1000 ) {
					if ( cdata(CDATA_INIT_ATTR, check_talk_arg2) + cdata(CDATA_INIT_SPEED, check_talk_arg2) > cdata(CDATA_INIT_ATTR, locvar_check_talk_ccr) + cdata(CDATA_INIT_LIFEMANA, locvar_check_talk_ccr) + locvar_check_talk_aspd + (cdata(CDATA_AP_TOTAL, locvar_check_talk_ccr) + 1) / 5 ) {
						if ( cdata(CDATA_INIT_SPEED, check_talk_arg2) > locvar_check_talk_aspd * 5 ) {
							cdata(CDATA_AP_CURRENT, locvar_check_talk_ccr) += 1
							cdata(CDATA_AP_TOTAL, locvar_check_talk_ccr) += 1
							if ( locvar_check_talk_ccr != 0 ) {
								cdata(CDATA_AP_CURRENT, locvar_check_talk_ccr) += 1
								cdata(CDATA_AP_TOTAL, locvar_check_talk_ccr) += 1
							}
						}
						if ( cdata(CDATA_INIT_SPEED, check_talk_arg2) > locvar_check_talk_aspd * 4 ) {
							cdata(CDATA_AP_CURRENT, locvar_check_talk_ccr) += 2
							cdata(CDATA_AP_TOTAL, locvar_check_talk_ccr) += 2
							if ( locvar_check_talk_ccr != 0 ) {
								cdata(CDATA_AP_CURRENT, locvar_check_talk_ccr) += 2
								cdata(CDATA_AP_TOTAL, locvar_check_talk_ccr) += 2
							}
						}
						if ( cdata(CDATA_INIT_SPEED, check_talk_arg2) > locvar_check_talk_aspd * 3 ) {
							cdata(CDATA_AP_CURRENT, locvar_check_talk_ccr) += 2
							cdata(CDATA_AP_TOTAL, locvar_check_talk_ccr) += 2
							if ( locvar_check_talk_ccr != 0 ) {
								cdata(CDATA_AP_CURRENT, locvar_check_talk_ccr) += 2
								cdata(CDATA_AP_TOTAL, locvar_check_talk_ccr) += 2
							}
						}
						if ( cdata(CDATA_INIT_SPEED, check_talk_arg2) > locvar_check_talk_aspd * 2 ) {
							cdata(CDATA_AP_CURRENT, locvar_check_talk_ccr) += 2
							cdata(CDATA_AP_TOTAL, locvar_check_talk_ccr) += 2
							if ( locvar_check_talk_ccr != 0 ) {
								cdata(CDATA_AP_CURRENT, locvar_check_talk_ccr) += 2
								cdata(CDATA_AP_TOTAL, locvar_check_talk_ccr) += 2
							}
						}
						if ( cdata(CDATA_INIT_SPEED, check_talk_arg2) > locvar_check_talk_aspd ) {
							cdata(CDATA_AP_CURRENT, locvar_check_talk_ccr)++
							cdata(CDATA_AP_TOTAL, locvar_check_talk_ccr)++
							snd SOUNDLIST_ENC
							animeload 36, locvar_check_talk_ccr
							if ( locvar_check_talk_ccr != 0 ) {
								cdata(CDATA_AP_CURRENT, locvar_check_talk_ccr)++
								cdata(CDATA_AP_TOTAL, locvar_check_talk_ccr)++
							}
						}
						if ( cdata(CDATA_AP_CURRENT, locvar_check_talk_ccr) > 2000 ) {
							cdata(CDATA_AP_TOTAL, locvar_check_talk_ccr) -= cdata(CDATA_AP_CURRENT, locvar_check_talk_ccr) - 2000
							cdata(CDATA_AP_CURRENT, locvar_check_talk_ccr) = 2000
						}
						if ( cdata(CDATA_AP_TOTAL, locvar_check_talk_ccr) < 0 ) {
							cdata(CDATA_AP_TOTAL, locvar_check_talk_ccr) = 2000
						}
					}
				}
			}
		}
		if ( cdata(CDATA_IN_TAGTEAM, check_talk_arg1) != 0 ) {
			locvar_check_talk_cct = cdata(CDATA_TAGTEAM_PARTNER, check_talk_arg1)
			if ( gdata(GDATA_AREA) != AREA_VOID ) {
				if ( sorg(SKILL_ATTR_SPD, check_talk_arg2) > sorg(SKILL_ATTR_SPD, locvar_check_talk_cct) ) {
					skillexp SKILL_ATTR_SPD, locvar_check_talk_cct, limit(sorg(SKILL_ATTR_SPD, check_talk_arg2), 10, 2000) / 5
				}
			}
			if ( cdata(CDATA_AP_CURRENT, locvar_check_talk_cct) < 2000 ) {
				locvar_check_talk_aspd = cdata(CDATA_INIT_SPEED, locvar_check_talk_cct)
				if ( gdata(GDATA_RIDER) != 0 ) {
					if ( locvar_check_talk_cct == 0 | locvar_check_talk_cct == gdata(GDATA_RIDER) ) {
						if ( cdata(CDATA_INIT_SPEED, CHARA_PLAYER) > cdata(CDATA_INIT_SPEED, gdata(GDATA_RIDER)) ) {
							locvar_check_talk_aspd = cdata(CDATA_INIT_SPEED, CHARA_PLAYER)
						}
						else {
							locvar_check_talk_aspd = cdata(CDATA_INIT_SPEED, gdata(GDATA_RIDER))
						}
					}
				}
				if ( cdata(CDATA_INIT_ATTR, check_talk_arg2) + cdata(CDATA_INIT_LIFEMANA, check_talk_arg2) >= 1000 ) {
					if ( cdata(CDATA_INIT_ATTR, check_talk_arg2) + cdata(CDATA_INIT_SPEED, check_talk_arg2) > cdata(CDATA_INIT_ATTR, locvar_check_talk_cct) + cdata(CDATA_INIT_LIFEMANA, locvar_check_talk_cct) + locvar_check_talk_aspd + (cdata(CDATA_AP_TOTAL, locvar_check_talk_cct) + 1) / 5 ) {
						if ( cdata(CDATA_INIT_SPEED, check_talk_arg2) > locvar_check_talk_aspd * 5 ) {
							cdata(CDATA_AP_CURRENT, locvar_check_talk_cct) += 1
							cdata(CDATA_AP_TOTAL, locvar_check_talk_cct) += 1
							if ( check_talk_arg1 != 0 ) {
								cdata(CDATA_AP_CURRENT, locvar_check_talk_cct) += 1
								cdata(CDATA_AP_TOTAL, locvar_check_talk_cct) += 1
							}
						}
						if ( cdata(CDATA_INIT_SPEED, check_talk_arg2) > locvar_check_talk_aspd * 4 ) {
							cdata(CDATA_AP_CURRENT, locvar_check_talk_cct) += 1
							cdata(CDATA_AP_TOTAL, locvar_check_talk_cct) += 1
							if ( check_talk_arg1 != 0 ) {
								cdata(CDATA_AP_CURRENT, locvar_check_talk_cct) += 1
								cdata(CDATA_AP_TOTAL, locvar_check_talk_cct) += 1
							}
						}
						if ( cdata(CDATA_INIT_SPEED, check_talk_arg2) > locvar_check_talk_aspd * 3 ) {
							cdata(CDATA_AP_CURRENT, locvar_check_talk_cct) += 1
							cdata(CDATA_AP_TOTAL, locvar_check_talk_cct) += 1
							if ( check_talk_arg1 != 0 ) {
								cdata(CDATA_AP_CURRENT, locvar_check_talk_cct) += 1
								cdata(CDATA_AP_TOTAL, locvar_check_talk_cct) += 1
							}
						}
						if ( cdata(CDATA_INIT_SPEED, check_talk_arg2) > locvar_check_talk_aspd * 2 ) {
							cdata(CDATA_AP_CURRENT, locvar_check_talk_cct) += 1
							cdata(CDATA_AP_TOTAL, locvar_check_talk_cct) += 1
							if ( check_talk_arg1 != 0 ) {
								cdata(CDATA_AP_CURRENT, locvar_check_talk_cct) += 1
								cdata(CDATA_AP_TOTAL, locvar_check_talk_cct) += 1
							}
						}
						if ( cdata(CDATA_INIT_SPEED, check_talk_arg2) > locvar_check_talk_aspd ) {
							cdata(CDATA_AP_CURRENT, locvar_check_talk_cct)++
							cdata(CDATA_AP_TOTAL, locvar_check_talk_cct)++
							snd SOUNDLIST_ENC
							animeload ANIMATION_GAMEWIN3, locvar_check_talk_cct
							if ( locvar_check_talk_cct != 0 ) {
								cdata(CDATA_AP_CURRENT, locvar_check_talk_cct)++
								cdata(CDATA_AP_TOTAL, locvar_check_talk_cct)++
							}
						}
						if ( cdata(CDATA_AP_CURRENT, locvar_check_talk_cct) > 2000 ) {
							cdata(CDATA_AP_CURRENT, locvar_check_talk_cct) = 2000
						}
					}
				}
			}
		}
	}
	locvar_check_talk_exp = limit(cdata(CDATA_LEVEL, check_talk_arg2), 1, 400) * limit(cdata(CDATA_LEVEL, check_talk_arg2) + 1, 1, 400) * limit(cdata(CDATA_LEVEL, check_talk_arg2) + 2, 1, 400) / 10 + 10
	if ( check_talk_arg1 == 0 ) {
		if ( cdata(CDATA_LEVEL, check_talk_arg2) < cdata(CDATA_LEVEL, check_talk_arg1) ) {
			locvar_check_talk_exp = locvar_check_talk_exp / 100 + 5
		}
	}
	if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, check_talk_arg2) | cbit(CHARA_BIT_SPLIT_NO_EFFECT, check_talk_arg2) ) {
		locvar_check_talk_exp = 0
	}
	if ( cdata(CDATA_RELATION, check_talk_arg1) == RELATION_ALLY | check_talk_arg1 == 0 ) {
		if ( gdata(GDATA_SLEEP_EXP) > 1000000000 ) {
			gdata(GDATA_SLEEP_EXP) = 1000000000
		}
		gdata(GDATA_SLEEP_EXP) += locvar_check_talk_exp
		if ( gdata(GDATA_SLEEP_EXP) > 1000000000 ) {
			gdata(GDATA_SLEEP_EXP) = 1000000000
		}
	}
	if ( check_talk_arg1 == 0 ) {
		if ( cdata(CDATA_LEVEL, check_talk_arg2) > cdata(CDATA_LEVEL, check_talk_arg1) ) {
			if ( locvar_check_talk_exp > 10 ) {
				locvar_check_talk_exp = locvar_check_talk_exp * limit(cdata(CDATA_LEVEL, check_talk_arg2) * 30 / cdata(CDATA_LEVEL, CHARA_PLAYER), 10, 100) / 10
			}
		}
	}
	cdata(CDATA_EXP, check_talk_arg1) += locvar_check_talk_exp
	cdata(CDATA_AI_AGGRO, check_talk_arg1) = 0
	return

#deffunc check_kill int check_kill_arg1, int check_kill_arg2
	if ( check_kill_arg1 >= 0 ) {
		if ( check_kill_arg1 == 0 | cdata(CDATA_RELATION, check_kill_arg1) >= 10 ) {
			if ( cbit(CHARA_BIT_NECRO, check_kill_arg2) != TRUE & cdata(CDATA_RELATION, check_kill_arg2) != RELATION_ALLY & gdata(GDATA_FLAG_MAIN) != 900 ) {
				if ( gdata(GDATA_FLAG_LEOLD_JOB_STAGE) == 1 ) {
					if ( cdata(CDATA_LEVEL, check_kill_arg2) >= gdata(GDATA_FLAG_LEOLD_JOB_TIER) ) {
						if ( cdata(CDATA_RELATION_ORG, check_kill_arg2) == (-3) ) {
							gdata(GDATA_FLAG_LEOLD_JOB_STAGE) = 2
							txt_questupdate
						}
					}
				}
				if ( cdata(CDATA_SHOP_INVEST, check_kill_arg1) < cdata(CDATA_LEVEL, check_kill_arg2) ) {
					cdata(CDATA_SHOP_INVEST, check_kill_arg1) = cdata(CDATA_LEVEL, check_kill_arg2)
				}
			}
		}
	}
	if ( gdata(GDATA_AREA) == AREA_PET_ARENA | gdata(GDATA_AREA) == AREA_SHOW_HOUSE | gdata(GDATA_AREA) == AREA_ARENA ) {
		return
	}
	locvar_check_kill_p = 0
	if ( check_kill_arg1 < 0 ) {
		return
	}
	if ( cdata(CDATA_POWER_GAUGE, check_kill_arg2) <= (-200) ) {
		return
	}
	cdata(CDATA_POWER_GAUGE, check_kill_arg2) = -300
	if ( cdata(CDATA_INIT_ATTR, check_kill_arg1) == 0 ) {
		cdata(CDATA_INIT_ATTR, check_kill_arg1) = sorg(SKILL_ATTR_STR, check_kill_arg1) + sorg(SKILL_ATTR_CON, check_kill_arg1) + sorg(SKILL_ATTR_DEX, check_kill_arg1) + sorg(SKILL_ATTR_PER, check_kill_arg1) + sorg(SKILL_ATTR_LER, check_kill_arg1) + sorg(SKILL_ATTR_WIL, check_kill_arg1) + sorg(SKILL_ATTR_MAG, check_kill_arg1) + sorg(SKILL_ATTR_CHA, check_kill_arg1)
	}
	if ( cdata(CDATA_INIT_SPEED, check_kill_arg1) == 0 ) {
		cdata(CDATA_INIT_SPEED, check_kill_arg1) = sorg(SKILL_ATTR_SPD, check_kill_arg1)
	}
	if ( cdata(CDATA_INIT_ATTR, check_kill_arg2) == 0 ) {
		cdata(CDATA_INIT_ATTR, check_kill_arg2) = sorg(SKILL_ATTR_STR, check_kill_arg2) + sorg(SKILL_ATTR_CON, check_kill_arg2) + sorg(SKILL_ATTR_DEX, check_kill_arg2) + sorg(SKILL_ATTR_PER, check_kill_arg2) + sorg(SKILL_ATTR_LER, check_kill_arg2) + sorg(SKILL_ATTR_WIL, check_kill_arg2) + sorg(SKILL_ATTR_MAG, check_kill_arg2) + sorg(SKILL_ATTR_CHA, check_kill_arg2)
	}
	if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) == 0 ) {
		cdata(CDATA_INIT_SPEED, check_kill_arg2) = sorg(SKILL_ATTR_SPD, check_kill_arg2)
	}
	if ( cdata(CDATA_INIT_LIFEMANA, check_kill_arg1) == 0 ) {
		cdata(CDATA_INIT_LIFEMANA, check_kill_arg1) = limit(sorg(SKILL_ATTR_LIFE, check_kill_arg1), 50, 200) * 2 + limit(sorg(SKILL_ATTR_MANA, check_kill_arg1), 50, 200) / 2
	}
	if ( check_kill_arg1 >= 0 & check_kill_arg1 != check_kill_arg2 ) {
		if ( check_kill_arg1 == 0 | cdata(CDATA_RELATION, check_kill_arg1) >= 10 ) {
			if ( cbit(CHARA_BIT_NECRO, check_kill_arg2) != 1 & cdata(CDATA_RELATION, check_kill_arg2) != 10 ) {
				if ( check_kill_arg2 >= MAX_CHARA_FOLLOWER ) {
					if ( check_kill_arg1 < MAX_CHARA_FOLLOWER ) {
						gdata(GDATA_KILLED)++
					}
					if ( cdata(CDATA_ID, check_kill_arg2) == gdata(GDATA_FLAG_GUILD_FIGHTER_THIEF) ) {
						if ( gdata(GDATA_FLAG_GUILD_FIGHTER_NORMA) > 0 ) {
							gdata(GDATA_FLAG_GUILD_FIGHTER_NORMA)--
						}
					}
					if ( cdata(CDATA_RELATION_ORG, check_kill_arg2) >= 0 ) {
						locvar_check_kill_p = -2
					}
					if ( cdata(CDATA_ID, check_kill_arg2) == CREATURE_ID_RICH_PERSON ) {
						locvar_check_kill_p = -15
					}
					if ( cdata(CDATA_ID, check_kill_arg2) == CREATURE_ID_NOBLE_CHILD ) {
						locvar_check_kill_p = -10
					}
					if ( cdata(CDATA_ID, check_kill_arg2) == CREATURE_ID_TOURIST ) {
						locvar_check_kill_p = -5
					}
					if ( cdata(CDATA_ROLE, check_kill_arg2) >= ROLE_SHOP_MIN & cdata(CDATA_ROLE, check_kill_arg2) < ROLE_GUEST_MIN | cdata(CDATA_ROLE, check_kill_arg2) == ROLE_GUEST_MERCHANT ) {
						locvar_check_kill_p = -10
					}
					if ( cdata(CDATA_ID, check_kill_arg2) == CREATURE_ID_SILVER_WOLF | cdata(CDATA_ID, check_kill_arg2) == CREATURE_ID_TWINTAIL | cdata(CDATA_ID, check_kill_arg2) == CREATURE_ID_POPPY_THE_LITTLE_DOG | cdata(CDATA_ID, check_kill_arg2) == CREATURE_ID_DOG | cdata(CDATA_ID, check_kill_arg2) == CREATURE_ID_STRAY_CAT | cdata(CDATA_ID, check_kill_arg2) == CREATURE_ID_SILVER_CAT | cdata(CDATA_ID, check_kill_arg2) == CREATURE_ID_CAT | cdata(CDATA_ID, check_kill_arg2) == CREATURE_ID_HOUND | cdata(CDATA_ID, check_kill_arg2) == CREATURE_ID_DOG_COP | cdata(CDATA_ID, check_kill_arg2) == CREATURE_ID_PASCAL | cdata(CDATA_ID, check_kill_arg2) == CREATURE_ID_SHEEPDOG | cdata(CDATA_ID, check_kill_arg2) == CREATURE_ID_PADANGU ) {
						gdata(GDATA_FLAG_CAT_DOG_KILLED)++
						if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_ABNORMAL ) {
							locvar_check_kill_p = -30
						}
					}
					if ( gdata(GDATA_FLAG_DUEL_TARGET) == (-3) ) {
						gdata(GDATA_FLAG_DUEL_TARGET) = -2
						locvar_check_kill_p = 0
					}
					else {
						if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_ABNORMAL ) {
							modimp check_kill_arg2, -20
						}
						if ( cdata(CDATA_ROLE, check_kill_arg2) == ROLE_ADVENTURER ) {
							modimp check_kill_arg2, -25
						}
					}
					if ( charaGivesExp(check_kill_arg2) & cdata(CDATA_ROLE, check_kill_arg2) != ROLE_BOUNTY_HUNTER & cdata(CDATA_ROLE, check_kill_arg2) != ROLE_GUARD & cbit(CHARA_BIT_CRADLE_15TH, check_kill_arg2) != 1 ) {
						if ( gdata(GDATA_AREA) != AREA_VOID ) {
							if ( sorg(SKILL_ATTR_SPD, check_kill_arg2) > sorg(SKILL_ATTR_SPD, check_kill_arg1) ) {
								skillexp SKILL_ATTR_SPD, check_kill_arg1, limit(sorg(SKILL_ATTR_SPD, check_kill_arg2), 10, 2000) / 5
							}
						}
						if ( cdata(CDATA_AP_CURRENT, check_kill_arg1) < 2000 ) {
							locvar_check_kill_aspd = cdata(CDATA_INIT_SPEED, check_kill_arg1)
							if ( gdata(GDATA_RIDER) != 0 ) {
								if ( check_kill_arg1 == 0 | check_kill_arg1 == gdata(GDATA_RIDER) ) {
									if ( cdata(CDATA_INIT_SPEED, CHARA_PLAYER) > cdata(CDATA_INIT_SPEED, gdata(GDATA_RIDER)) ) {
										locvar_check_kill_aspd = cdata(CDATA_INIT_SPEED, CHARA_PLAYER)
									}
									else {
										locvar_check_kill_aspd = cdata(CDATA_INIT_SPEED, gdata(GDATA_RIDER))
									}
								}
							}
							if ( cdata(CDATA_INIT_ATTR, check_kill_arg2) + cdata(CDATA_INIT_LIFEMANA, check_kill_arg2) >= 1000 ) {
								if ( cdata(CDATA_INIT_ATTR, check_kill_arg2) + cdata(CDATA_INIT_SPEED, check_kill_arg2) > cdata(CDATA_INIT_ATTR, check_kill_arg1) + cdata(CDATA_INIT_LIFEMANA, check_kill_arg1) + locvar_check_kill_aspd + (cdata(CDATA_AP_TOTAL, check_kill_arg1) + 1) / 5 ) {
									if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd * 5 ) {
										cdata(CDATA_AP_CURRENT, check_kill_arg1) += 2
										cdata(CDATA_AP_TOTAL, check_kill_arg1) += 2
										if ( check_kill_arg1 != 0 ) {
											cdata(CDATA_AP_CURRENT, check_kill_arg1) += 2
											cdata(CDATA_AP_TOTAL, check_kill_arg1) += 2
										}
									}
									if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd * 4 ) {
										cdata(CDATA_AP_CURRENT, check_kill_arg1) += 3
										cdata(CDATA_AP_TOTAL, check_kill_arg1) += 3
										if ( check_kill_arg1 != 0 ) {
											cdata(CDATA_AP_CURRENT, check_kill_arg1) += 3
											cdata(CDATA_AP_TOTAL, check_kill_arg1) += 3
										}
									}
									if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd * 3 ) {
										cdata(CDATA_AP_CURRENT, check_kill_arg1) += 3
										cdata(CDATA_AP_TOTAL, check_kill_arg1) += 3
										if ( check_kill_arg1 != 0 ) {
											cdata(CDATA_AP_CURRENT, check_kill_arg1) += 3
											cdata(CDATA_AP_TOTAL, check_kill_arg1) += 3
										}
									}
									if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd * 2 ) {
										cdata(CDATA_AP_CURRENT, check_kill_arg1) += 3
										cdata(CDATA_AP_TOTAL, check_kill_arg1) += 3
										if ( check_kill_arg1 != 0 ) {
											cdata(CDATA_AP_CURRENT, check_kill_arg1) += 3
											cdata(CDATA_AP_TOTAL, check_kill_arg1) += 3
										}
									}
									if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd ) {
										cdata(CDATA_AP_CURRENT, check_kill_arg1)++
										cdata(CDATA_AP_TOTAL, check_kill_arg1)++
										snd SOUNDLIST_ENC
										animeload ANIMATION_CHAOS_CHILD, check_kill_arg1
										if ( check_kill_arg1 != 0 ) {
											cdata(CDATA_AP_CURRENT, check_kill_arg1)++
											cdata(CDATA_AP_TOTAL, check_kill_arg1)++
										}
									}
									if ( cdata(CDATA_AP_CURRENT, check_kill_arg1) > 2000 ) {
										cdata(CDATA_AP_TOTAL, check_kill_arg1) -= cdata(CDATA_AP_CURRENT, check_kill_arg1) - 2000
										cdata(CDATA_AP_CURRENT, check_kill_arg1) = 2000
									}
									if ( cdata(CDATA_AP_TOTAL, check_kill_arg1) < 0 ) {
										cdata(CDATA_AP_TOTAL, check_kill_arg1) = 2000
									}
								}
							}
						}
						if ( cbit(CHARA_BIT_NECRO, check_kill_arg1) == 1 ) {
							if ( gdata(GDATA_AREA) != AREA_VOID ) {
								if ( sorg(SKILL_ATTR_SPD, check_kill_arg2) > sorg(SKILL_ATTR_SPD, CHARA_PLAYER) ) {
									skillexp SKILL_ATTR_SPD, CHARA_PLAYER, limit(sorg(SKILL_ATTR_SPD, check_kill_arg2), 10, 2000) / 5
								}
							}
							if ( cdata(CDATA_AP_CURRENT, CHARA_PLAYER) < 2000 ) {
								locvar_check_kill_aspd = cdata(CDATA_INIT_SPEED, CHARA_PLAYER)
								if ( gdata(GDATA_RIDER) != 0 ) {
									if ( cdata(CDATA_INIT_SPEED, CHARA_PLAYER) > cdata(CDATA_INIT_SPEED, gdata(GDATA_RIDER)) ) {
										locvar_check_kill_aspd = cdata(CDATA_INIT_SPEED, CHARA_PLAYER)
									}
									else {
										locvar_check_kill_aspd = cdata(CDATA_INIT_SPEED, gdata(GDATA_RIDER))
									}
								}
								if ( cdata(CDATA_INIT_ATTR, check_kill_arg2) + cdata(CDATA_INIT_LIFEMANA, check_kill_arg2) >= 1000 ) {
									if ( cdata(CDATA_INIT_ATTR, check_kill_arg2) + cdata(CDATA_INIT_SPEED, check_kill_arg2) > cdata(CDATA_INIT_ATTR, CHARA_PLAYER) + cdata(CDATA_INIT_LIFEMANA, CHARA_PLAYER) + locvar_check_kill_aspd + (cdata(CDATA_AP_TOTAL, CHARA_PLAYER) + 1) / 5 ) {
										if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd * 5 ) {
											cdata(CDATA_AP_CURRENT, CHARA_PLAYER) += 2
											cdata(CDATA_AP_TOTAL, CHARA_PLAYER) += 2
										}
										if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd * 4 ) {
											cdata(CDATA_AP_CURRENT, CHARA_PLAYER) += 3
											cdata(CDATA_AP_TOTAL, CHARA_PLAYER) += 3
										}
										if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd * 3 ) {
											cdata(CDATA_AP_CURRENT, CHARA_PLAYER) += 3
											cdata(CDATA_AP_TOTAL, CHARA_PLAYER) += 3
										}
										if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd * 2 ) {
											cdata(CDATA_AP_CURRENT, CHARA_PLAYER) += 3
											cdata(CDATA_AP_TOTAL, CHARA_PLAYER) += 3
										}
										if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd ) {
											cdata(CDATA_AP_CURRENT, CHARA_PLAYER)++
											cdata(CDATA_AP_TOTAL, CHARA_PLAYER)++
											snd SOUNDLIST_ENC
											animeload ANIMATION_CHAOS_CHILD, CHARA_PLAYER
										}
										if ( cdata(CDATA_AP_CURRENT, CHARA_PLAYER) > 2000 ) {
											cdata(CDATA_AP_CURRENT, CHARA_PLAYER) = 2000
										}
									}
								}
							}
							if ( cdata(CDATA_IN_TAGTEAM, CHARA_PLAYER) != 0 ) {
								locvar_check_kill_cct = cdata(CDATA_TAGTEAM_PARTNER, CHARA_PLAYER)
								if ( cdata(CDATA_AP_CURRENT, locvar_check_kill_cct) < 2000 ) {
									locvar_check_kill_aspd = cdata(CDATA_INIT_SPEED, locvar_check_kill_cct)
									if ( gdata(GDATA_RIDER) != 0 ) {
										if ( locvar_check_kill_cct == 0 | locvar_check_kill_cct == gdata(GDATA_RIDER) ) {
											if ( cdata(CDATA_INIT_SPEED, CHARA_PLAYER) > cdata(CDATA_INIT_SPEED, gdata(GDATA_RIDER)) ) {
												locvar_check_kill_aspd = cdata(CDATA_INIT_SPEED, CHARA_PLAYER)
											}
											else {
												locvar_check_kill_aspd = cdata(CDATA_INIT_SPEED, gdata(GDATA_RIDER))
											}
										}
									}
									if ( cdata(CDATA_INIT_ATTR, check_kill_arg2) + cdata(CDATA_INIT_LIFEMANA, check_kill_arg2) >= 1000 ) {
										if ( cdata(CDATA_INIT_ATTR, check_kill_arg2) + cdata(CDATA_INIT_SPEED, check_kill_arg2) > cdata(CDATA_INIT_ATTR, locvar_check_kill_cct) + cdata(CDATA_INIT_LIFEMANA, locvar_check_kill_cct) + locvar_check_kill_aspd + (cdata(CDATA_AP_TOTAL, locvar_check_kill_cct) + 1) / 5 ) {
											if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd * 5 ) {
												cdata(CDATA_AP_CURRENT, locvar_check_kill_cct) += 1
												cdata(CDATA_AP_TOTAL, locvar_check_kill_cct) += 1
											}
											if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd * 4 ) {
												cdata(CDATA_AP_CURRENT, locvar_check_kill_cct) += 1
												cdata(CDATA_AP_TOTAL, locvar_check_kill_cct) += 1
											}
											if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd * 3 ) {
												cdata(CDATA_AP_CURRENT, locvar_check_kill_cct) += 1
												cdata(CDATA_AP_TOTAL, locvar_check_kill_cct) += 1
											}
											if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd * 2 ) {
												cdata(CDATA_AP_CURRENT, locvar_check_kill_cct) += 1
												cdata(CDATA_AP_TOTAL, locvar_check_kill_cct) += 1
											}
											if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd ) {
												cdata(CDATA_AP_CURRENT, locvar_check_kill_cct)++
												cdata(CDATA_AP_TOTAL, locvar_check_kill_cct)++
												snd SOUNDLIST_ENC
												animeload ANIMATION_GAMEWIN3, locvar_check_kill_cct
												if ( locvar_check_kill_cct != 0 ) {
													cdata(CDATA_AP_CURRENT, locvar_check_kill_cct)++
													cdata(CDATA_AP_TOTAL, locvar_check_kill_cct)++
												}
											}
											if ( cdata(CDATA_AP_CURRENT, locvar_check_kill_cct) > 2000 ) {
												cdata(CDATA_AP_CURRENT, locvar_check_kill_cct) = 2000
											}
										}
									}
								}
							}
						}
						locvar_check_kill_ccr = -1
						if ( gdata(GDATA_RIDER) != 0 ) {
							if ( check_kill_arg1 == 0 ) {
								locvar_check_kill_ccr = gdata(GDATA_RIDER)
							}
							if ( check_kill_arg1 == gdata(GDATA_RIDER) ) {
								locvar_check_kill_ccr = 0
							}
						}
						if ( locvar_check_kill_ccr >= 0 ) {
							if ( cdata(CDATA_AP_CURRENT, locvar_check_kill_ccr) < 2000 ) {
								locvar_check_kill_aspd = cdata(CDATA_INIT_SPEED, locvar_check_kill_ccr)
								if ( cdata(CDATA_INIT_SPEED, CHARA_PLAYER) > cdata(CDATA_INIT_SPEED, gdata(GDATA_RIDER)) ) {
									locvar_check_kill_aspd = cdata(CDATA_INIT_SPEED, CHARA_PLAYER)
								}
								else {
									locvar_check_kill_aspd = cdata(CDATA_INIT_SPEED, gdata(GDATA_RIDER))
								}
								if ( 0 ) {
									cdata(CDATA_INIT_ATTR, CHARA_PLAYER) = 1
									locvar_check_kill_aspd = 1
									cdata(CDATA_AP_TOTAL, CHARA_PLAYER) = 1
								}
								if ( cdata(CDATA_INIT_ATTR, check_kill_arg2) + cdata(CDATA_INIT_LIFEMANA, check_kill_arg2) >= 1000 ) {
									if ( cdata(CDATA_INIT_ATTR, check_kill_arg2) + cdata(CDATA_INIT_SPEED, check_kill_arg2) > cdata(CDATA_INIT_ATTR, locvar_check_kill_ccr) + cdata(CDATA_INIT_LIFEMANA, locvar_check_kill_ccr) + locvar_check_kill_aspd + (cdata(CDATA_AP_TOTAL, locvar_check_kill_ccr) + 1) / 5 ) {
										if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd * 5 ) {
											cdata(CDATA_AP_CURRENT, locvar_check_kill_ccr) += 1
											cdata(CDATA_AP_TOTAL, locvar_check_kill_ccr) += 1
											if ( locvar_check_kill_ccr != 0 ) {
												cdata(CDATA_AP_CURRENT, locvar_check_kill_ccr) += 1
												cdata(CDATA_AP_TOTAL, locvar_check_kill_ccr) += 1
											}
										}
										if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd * 4 ) {
											cdata(CDATA_AP_CURRENT, locvar_check_kill_ccr) += 1
											cdata(CDATA_AP_TOTAL, locvar_check_kill_ccr) += 1
											if ( locvar_check_kill_ccr != 0 ) {
												cdata(CDATA_AP_CURRENT, locvar_check_kill_ccr) += 1
												cdata(CDATA_AP_TOTAL, locvar_check_kill_ccr) += 1
											}
										}
										if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd * 3 ) {
											cdata(CDATA_AP_CURRENT, locvar_check_kill_ccr) += 1
											cdata(CDATA_AP_TOTAL, locvar_check_kill_ccr) += 1
											if ( locvar_check_kill_ccr != 0 ) {
												cdata(CDATA_AP_CURRENT, locvar_check_kill_ccr) += 1
												cdata(CDATA_AP_TOTAL, locvar_check_kill_ccr) += 1
											}
										}
										if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd * 2 ) {
											cdata(CDATA_AP_CURRENT, locvar_check_kill_ccr) += 1
											cdata(CDATA_AP_TOTAL, locvar_check_kill_ccr) += 1
											if ( locvar_check_kill_ccr != 0 ) {
												cdata(CDATA_AP_CURRENT, locvar_check_kill_ccr) += 1
												cdata(CDATA_AP_TOTAL, locvar_check_kill_ccr) += 1
											}
										}
										if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd ) {
											cdata(CDATA_AP_CURRENT, locvar_check_kill_ccr)++
											cdata(CDATA_AP_TOTAL, locvar_check_kill_ccr)++
											snd SOUNDLIST_ENC
											animeload 36, locvar_check_kill_ccr
											if ( locvar_check_kill_ccr != 0 ) {
												cdata(CDATA_AP_CURRENT, locvar_check_kill_ccr)++
												cdata(CDATA_AP_TOTAL, locvar_check_kill_ccr)++
											}
										}
										if ( cdata(CDATA_AP_CURRENT, locvar_check_kill_ccr) > 2000 ) {
											cdata(CDATA_AP_TOTAL, locvar_check_kill_ccr) -= cdata(CDATA_AP_CURRENT, locvar_check_kill_ccr) - 2000
											cdata(CDATA_AP_CURRENT, locvar_check_kill_ccr) = 2000
										}
										if ( cdata(CDATA_AP_TOTAL, locvar_check_kill_ccr) < 0 ) {
											cdata(CDATA_AP_TOTAL, locvar_check_kill_ccr) = 2000
										}
									}
								}
							}
						}
						if ( cdata(CDATA_IN_TAGTEAM, check_kill_arg1) != 0 ) {
							locvar_check_kill_cct = cdata(CDATA_TAGTEAM_PARTNER, check_kill_arg1)
							if ( gdata(GDATA_AREA) != AREA_VOID ) {
								if ( sorg(SKILL_ATTR_SPD, check_kill_arg2) > sorg(SKILL_ATTR_SPD, locvar_check_kill_cct) ) {
									skillexp SKILL_ATTR_SPD, locvar_check_kill_cct, limit(sorg(SKILL_ATTR_SPD, check_kill_arg2), 10, 2000) / 5
								}
							}
							if ( cdata(CDATA_AP_CURRENT, locvar_check_kill_cct) < 2000 ) {
								locvar_check_kill_aspd = cdata(CDATA_INIT_SPEED, locvar_check_kill_cct)
								if ( gdata(GDATA_RIDER) != 0 ) {
									if ( locvar_check_kill_cct == 0 | locvar_check_kill_cct == gdata(GDATA_RIDER) ) {
										if ( cdata(CDATA_INIT_SPEED, CHARA_PLAYER) > cdata(CDATA_INIT_SPEED, gdata(GDATA_RIDER)) ) {
											locvar_check_kill_aspd = cdata(CDATA_INIT_SPEED, CHARA_PLAYER)
										}
										else {
											locvar_check_kill_aspd = cdata(CDATA_INIT_SPEED, gdata(GDATA_RIDER))
										}
									}
								}
								if ( cdata(CDATA_INIT_ATTR, check_kill_arg2) + cdata(CDATA_INIT_LIFEMANA, check_kill_arg2) >= 1000 ) {
									if ( cdata(CDATA_INIT_ATTR, check_kill_arg2) + cdata(CDATA_INIT_SPEED, check_kill_arg2) > cdata(CDATA_INIT_ATTR, locvar_check_kill_cct) + cdata(CDATA_INIT_LIFEMANA, locvar_check_kill_cct) + locvar_check_kill_aspd + (cdata(CDATA_AP_TOTAL, locvar_check_kill_cct) + 1) / 5 ) {
										if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd * 5 ) {
											cdata(CDATA_AP_CURRENT, locvar_check_kill_cct) += 1
											cdata(CDATA_AP_TOTAL, locvar_check_kill_cct) += 1
											if ( check_kill_arg1 != 0 ) {
												cdata(CDATA_AP_CURRENT, locvar_check_kill_cct) += 1
												cdata(CDATA_AP_TOTAL, locvar_check_kill_cct) += 1
											}
										}
										if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd * 4 ) {
											cdata(CDATA_AP_CURRENT, locvar_check_kill_cct) += 1
											cdata(CDATA_AP_TOTAL, locvar_check_kill_cct) += 1
											if ( check_kill_arg1 != 0 ) {
												cdata(CDATA_AP_CURRENT, locvar_check_kill_cct) += 1
												cdata(CDATA_AP_TOTAL, locvar_check_kill_cct) += 1
											}
										}
										if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd * 3 ) {
											cdata(CDATA_AP_CURRENT, locvar_check_kill_cct) += 1
											cdata(CDATA_AP_TOTAL, locvar_check_kill_cct) += 1
											if ( check_kill_arg1 != 0 ) {
												cdata(CDATA_AP_CURRENT, locvar_check_kill_cct) += 1
												cdata(CDATA_AP_TOTAL, locvar_check_kill_cct) += 1
											}
										}
										if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd * 2 ) {
											cdata(CDATA_AP_CURRENT, locvar_check_kill_cct) += 1
											cdata(CDATA_AP_TOTAL, locvar_check_kill_cct) += 1
											if ( check_kill_arg1 != 0 ) {
												cdata(CDATA_AP_CURRENT, locvar_check_kill_cct) += 1
												cdata(CDATA_AP_TOTAL, locvar_check_kill_cct) += 1
											}
										}
										if ( cdata(CDATA_INIT_SPEED, check_kill_arg2) > locvar_check_kill_aspd ) {
											cdata(CDATA_AP_CURRENT, locvar_check_kill_cct)++
											cdata(CDATA_AP_TOTAL, locvar_check_kill_cct)++
											snd SOUNDLIST_ENC
											animeload ANIMATION_GAMEWIN3, locvar_check_kill_cct
											if ( locvar_check_kill_cct != 0 ) {
												cdata(CDATA_AP_CURRENT, locvar_check_kill_cct)++
												cdata(CDATA_AP_TOTAL, locvar_check_kill_cct)++
											}
										}
										if ( cdata(CDATA_AP_CURRENT, locvar_check_kill_cct) > 2000 ) {
											cdata(CDATA_AP_CURRENT, locvar_check_kill_cct) = 2000
										}
									}
								}
							}
						}
					}
				}
			}
		}
		if ( cdata(CDATA_RELATION, check_kill_arg1) >= 10 ) {
			if ( check_kill_arg1 != 0 ) {
				if ( cdata(CDATA_IMPRESSION, check_kill_arg1) < 200 ) {
					if ( rnd(2) ) {
						modimp check_kill_arg1, 1
						cdata(CDATA_EMO_ICON, check_kill_arg1) = 17 + 100 * 3
					}
				}
				else {
					if ( rnd(10) == 0 ) {
						modimp check_kill_arg1, 1
						cdata(CDATA_EMO_ICON, check_kill_arg1) = 17 + 100 * 3
					}
				}
			}
		}
	}
	if ( locvar_check_kill_p != 0 ) {
		modkarma CHARA_PLAYER, locvar_check_kill_p
	}
	return

#deffunc item_acid int item_acid_arg1, int item_acid_arg2
	if ( item_acid_arg2 != (-1) ) {
		locvar_item_acid_ci = item_acid_arg2
	}
	else {
		locvar_item_acid_ci = -1
		repeat MAX_EQUIP_SLOT_TOTAL, CDATA_STARTING_EQUIP_SLOTS
			locvar_item_acid_body = cdata(cnt, item_acid_arg1) / EXT_EQUIP_SLOTS
			if ( locvar_item_acid_body == 0 ) {
				break
			}
			locvar_item_acid_p = cdata(cnt, item_acid_arg1) \ EXT_EQUIP_SLOTS - 1
			if ( locvar_item_acid_p == (-1) ) {
				continue
			}
			if ( rnd(limit(30, 1, 30)) == 0 ) {
				if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_ABNORMAL ) {
					locvar_item_acid_ci = locvar_item_acid_p
					break
				}
			}
			if ( rnd(limit(30, 1, 30)) == 0 ) {
				if ( inv(INV_ITEM_LEVEL, locvar_item_acid_p) > (-4) ) {
					locvar_item_acid_ci = locvar_item_acid_p
					break
				}
			}
		loop
	}
	if ( locvar_item_acid_ci == (-1) ) {
		return
	}
	if ( refitem(inv(INV_ITEM_ID, locvar_item_acid_ci), DBSPEC_TYPE) >= FILTER_ITEM_MIN ) {
		return
	}
	txtmore
	if ( ibit(ITEM_BIT_ACIDPROOF, locvar_item_acid_ci) == 0 ) {
		txtef COLOR_PURPLE
		txt lang(name(item_acid_arg1) + "の" + itemname(locvar_item_acid_ci) + "は酸で傷ついた。", name(item_acid_arg1) + your(item_acid_arg1) + " " + itemname(locvar_item_acid_ci, , 1) + " is damaged by acid.")
		inv(INV_ITEM_LEVEL, locvar_item_acid_ci)--
		snd SOUNDLIST_CRACK
		if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_ABNORMAL ) {
			if ( inv(INV_ITEM_LEVEL, locvar_item_acid_ci) == (-10) ) {
				snd SOUNDLIST_CRACK2
				animeload 64, item_acid_arg1
			}
		}
		if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_ABNORMAL ) {
			if ( inv(INV_ITEM_LEVEL, locvar_item_acid_ci) < (-10) ) {
				snd SOUNDLIST_ATK_POISON
				txtef COLOR_RED
				txt lang(name(item_acid_arg1) + "の" + itemname(locvar_item_acid_ci) + "は酸でドロドロに溶けてしまった。", name(item_acid_arg1) + your(item_acid_arg1) + " " + itemname(locvar_item_acid_ci, , 1) + " is melted by acid.")
				inv(INV_ITEM_NUM, locvar_item_acid_ci)--
				cdata(inv(INV_ITEM_EQUIP, locvar_item_acid_ci), item_acid_arg1) = cdata(inv(INV_ITEM_EQUIP, locvar_item_acid_ci), item_acid_arg1) / 10000 * 10000
				inv(INV_ITEM_EQUIP, locvar_item_acid_ci) = 0
				r1 = item_acid_arg1
				gosub *charaRefresh
			}
		}
	}
	else {
		txt lang(name(item_acid_arg1) + "の" + itemname(locvar_item_acid_ci) + "は酸では傷つかない。", name(item_acid_arg1) + your(item_acid_arg1) + " " + itemname(locvar_item_acid_ci, , 1) + " is immune to acid.")
	}
	return

#deffunc item_fire int item_fire_arg1, int item_fire_arg2
	locvar_item_fire_max = 0
	locvar_item_fire_ti = -1
	if ( item_fire_arg2 != (-1) ) {
		locvar_item_fire_list(0) = item_fire_arg2
		locvar_item_fire_max++
	}
	if ( item_fire_arg1 != (-1) ) {
		if ( sdata(SKILL_RES_FIRE, item_fire_arg1) / 50 >= 6 | (cdata(CDATA_QUALITY, item_fire_arg1) >= FIX_QUALITY_MIRACLE & cdata(CDATA_ALLIED, item_fire_arg1) == 0) ) {
			return 0
		}
		inv_getheader item_fire_arg1
		repeat invrange, invhead
			if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
				continue
			}
			if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_FIREPROOF_BLANKET ) {
				if ( locvar_item_fire_ti == (-1) ) {
					locvar_item_fire_ti = cnt
					item_separate locvar_item_fire_ti
				}
				continue
			}
			if ( item_fire_arg2 == (-1) ) {
				locvar_item_fire_list(locvar_item_fire_max) = cnt
				locvar_item_fire_max++
			}
		loop
	}
	if ( locvar_item_fire_max == 0 ) {
		return 0
	}
	locvar_item_fire_f = 0
	repeat 3
		locvar_item_acid_ci = locvar_item_fire_list(rnd(locvar_item_fire_max))
		if ( inv(INV_ITEM_NUM, locvar_item_acid_ci) <= 0 ) {
			continue
		}
		rowact_item locvar_item_acid_ci
		if ( ibit(ITEM_BIT_FIREPROOF, locvar_item_acid_ci) == 0 ) {
			if ( ibit(ITEM_BIT_PRECIOUS, locvar_item_acid_ci) == 0 ) {
				locvar_item_fire_a = refitem(inv(INV_ITEM_ID, locvar_item_acid_ci), DBSPEC_TYPE)
				if ( locvar_item_fire_a == FILTER_ITEM_FOOD ) {
					if ( inv(INV_ITEM_PARAM2, locvar_item_acid_ci) == 0 ) {
						if ( item_fire_arg1 == (-1) ) {
							if ( synccheck(inv(INV_ITEM_X, locvar_item_acid_ci), inv(INV_ITEM_Y, locvar_item_acid_ci)) ) {
								txtef COLOR_ORANGE
								txt lang("地面の" + itemname(locvar_item_acid_ci, inv(INV_ITEM_NUM, locvar_item_acid_ci)) + "はこんがりと焼き上がった。", itemname(locvar_item_acid_ci, inv(INV_ITEM_NUM, locvar_item_acid_ci)) + " on the ground get" + _s2(inv(INV_ITEM_NUM, locvar_item_acid_ci)) + " perfectly broiled.")
							}
						}
						if ( item_fire_arg1 != (-1) ) {
							if ( synccheck(item_fire_arg1, -1) ) {
								txtef COLOR_ORANGE
								txt lang(name(item_fire_arg1) + "の" + itemname(locvar_item_acid_ci, inv(INV_ITEM_NUM, locvar_item_acid_ci)) + "はこんがりと焼き上がった。", name(item_fire_arg1) + your(item_fire_arg1) + " " + itemname(locvar_item_acid_ci, inv(INV_ITEM_NUM, locvar_item_acid_ci), 1) + " get" + _s2(inv(INV_ITEM_NUM, locvar_item_acid_ci)) + " perfectly broiled.")
							}
						}
						make_dish locvar_item_acid_ci, rnd(5) + 1
						locvar_item_fire_f = 1
						continue
					}
				}
				if ( locvar_item_fire_a == FILTER_CONTAINER | locvar_item_fire_a == FILTER_ITEM_TOOL | locvar_item_fire_a == FILTER_GOLD | inv(INV_ITEM_QUALITY, locvar_item_acid_ci) >= FIX_QUALITY_MIRACLE ) {
					continue
				}
				if ( inv(INV_ITEM_ID, locvar_item_acid_ci) == ITEM_ID_BOMB_BARREL ) {
					if ( gdata(STARTING_GDATA_FLAG + 381) >= 3 ) {
						continue
					}
				}
				if ( inv(INV_ITEM_EQUIP, locvar_item_acid_ci) != 0 ) {
					if ( rnd(2) ) {
						continue
					}
				}
				if ( locvar_item_fire_a != FILTER_ITEM_ROD & locvar_item_fire_a != FILTER_ENVIRONMENT & locvar_item_fire_a != FILTER_ITEM_BOOK & locvar_item_fire_a != FILTER_ITEM_SCROLL & locvar_item_fire_a != FILTER_ITEM_SPELLBOOK ) {
					if ( rnd(4) ) {
						continue
					}
					if ( item_fire_arg1 != (-1) ) {
						if ( rnd(4) ) {
							continue
						}
					}
				}
				if ( locvar_item_fire_ti != (-1) ) {
					if ( inv(INV_ITEM_NUM, locvar_item_fire_ti) > 0 ) {
						if ( synccheck(item_fire_arg1, -1) ) {
							txt lang(itemname(locvar_item_fire_ti, 1) + "が" + name(item_fire_arg1) + "の持ち物を炎から守った。", itemname(locvar_item_fire_ti, 1) + " protects " + name(item_fire_arg1) + your(item_fire_arg1) + " stuff from fire.")
						}
						if ( inv(INV_ITEM_CHARGE, locvar_item_fire_ti) > 0 ) {
							inv(INV_ITEM_CHARGE, locvar_item_fire_ti)--
						}
						else {
							inv(INV_ITEM_NUM, locvar_item_fire_ti)--
							if ( synccheck(item_fire_arg1, -1) ) {
								txt lang(itemname(locvar_item_fire_ti, 1) + "は灰と化した。", itemname(locvar_item_fire_ti, 1) + " turns to dust.")
								break
							}
						}
						continue
					}
				}
				locvar_item_acid_p = rnd(inv(INV_ITEM_NUM, locvar_item_acid_ci)) / 2 + 1
				if ( gdata(GDATA_FLAG_BOMB_BARRELS_EXPLODED) < 5 ) {
					if ( inv(INV_ITEM_ID, locvar_item_acid_ci) == ITEM_ID_BOMB_BARREL ) {
						locvar_item_acid_p = 1
						gdata(GDATA_FLAG_BOMB_BARRELS_EXPLODED)++
						txtef COLOR_RED
						txt lang("引火した" + itemname(locvar_item_acid_ci, locvar_item_acid_p) + "が爆発した。", itemname(locvar_item_acid_ci, locvar_item_acid_p) + " exploded.")
						locvar_item_fire_range = 2
						aniref = locvar_item_fire_range
						animeid = ANIMATION_BALL_NUKE
						anix = inv(INV_ITEM_X, locvar_item_acid_ci)
						aniy = inv(INV_ITEM_Y, locvar_item_acid_ci)
						gosub *anime
						snd SOUNDLIST_BOM06
						tarudmg = 1
						locvar_item_fire_tuex = inv(INV_ITEM_X, locvar_item_acid_ci)
						locvar_item_fire_tuey = inv(INV_ITEM_Y, locvar_item_acid_ci)
						repeat locvar_item_fire_range * 2 + 1
							locvar_item_fire_dy = locvar_item_fire_tuey - locvar_item_fire_range + cnt
							if ( locvar_item_fire_dy < 0 | locvar_item_fire_dy >= mdata(MDATA_HEIGHT) ) {
								continue
							}
							repeat locvar_item_fire_range * 2 + 1
								locvar_item_fire_dx = locvar_item_fire_tuex - locvar_item_fire_range + cnt
								if ( locvar_item_fire_dx < 0 | locvar_item_fire_dx >= mdata(MDATA_WIDTH) ) {
									continue
								}
								if ( dist(locvar_item_fire_tuex, locvar_item_fire_tuey, locvar_item_fire_dx, locvar_item_fire_dy) > locvar_item_fire_range ) {
									continue
								}
								if ( map(locvar_item_fire_dx, locvar_item_fire_dy, MAP_CHARA_INDEX_PLUS_ONE) != 0 ) {
									locvar_item_fire_tcb = map(locvar_item_fire_dx, locvar_item_fire_dy, MAP_CHARA_INDEX_PLUS_ONE) - 1
									if ( cdata(CDATA_IN_TAGTEAM, locvar_item_fire_tcb) != 0 ) {
										if ( locvar_item_fire_tcb != 0 ) {
											if ( rnd(cdata(CDATA_HP, locvar_item_fire_tcb) + 1) < rnd(cdata(CDATA_HP, cdata(CDATA_TAGTEAM_PARTNER, locvar_item_fire_tcb)) + 1) ) {
												locvar_item_fire_tcb = cdata(CDATA_TAGTEAM_PARTNER, locvar_item_fire_tcb)
											}
											txt lang(name(locvar_item_fire_tcb) + "は" + name(cdata(CDATA_TAGTEAM_PARTNER, locvar_item_fire_tcb)) + "をかばった！", name(locvar_item_fire_tcb) + " guarded " + name(cdata(CDATA_TAGTEAM_PARTNER, locvar_item_fire_tcb)) + ".")
										}
									}
									if ( cdata(CDATA_CONDITION_SLEEP, locvar_item_fire_tcb) > 0 ) {
										cdata(CDATA_CONDITION_SLEEP, locvar_item_fire_tcb) = 0
									}
									cdata(CDATA_CONDITION_SLEEP, locvar_item_fire_tcb) -= ((sdata(SKILL_NORMAL_DISARM_TRAP, CHARA_PLAYER) + 1) / 2 + 5) * ((sdata(SKILL_NORMAL_GENE_ENGINEER, CHARA_PLAYER) + 1) / 2 + 2) * 2 + rnd(sdata(SKILL_NORMAL_GENE_ENGINEER, CHARA_PLAYER) + 2)
								}
							loop
						loop
					}
				}
				if ( item_fire_arg1 != (-1) ) {
					if ( inv(INV_ITEM_EQUIP, locvar_item_acid_ci) != 0 ) {
						if ( synccheck(item_fire_arg1, -1) ) {
							txtef COLOR_PURPLE
							txt lang(name(item_fire_arg1) + "の装備している" + itemname(locvar_item_acid_ci, locvar_item_acid_p) + "は灰と化した。", itemname(locvar_item_acid_ci, locvar_item_acid_p) + " " + name(item_fire_arg1) + " equip" + _s(item_fire_arg1) + " turn" + _s2(locvar_item_acid_p) + " to dust.")
						}
						cdata(inv(INV_ITEM_EQUIP, locvar_item_acid_ci), item_fire_arg1) = cdata(inv(INV_ITEM_EQUIP, locvar_item_acid_ci), item_fire_arg1) / 10000 * 10000
						inv(INV_ITEM_EQUIP, locvar_item_acid_ci) = 0
						r1 = item_fire_arg1
						gosub *charaRefresh
					}
					else {
						if ( synccheck(item_fire_arg1, -1) ) {
							txtef COLOR_PURPLE
							txt lang(name(item_fire_arg1) + "の" + itemname(locvar_item_acid_ci, locvar_item_acid_p) + "は灰と化した。", name(item_fire_arg1) + your(item_fire_arg1) + " " + itemname(locvar_item_acid_ci, locvar_item_acid_p, 1) + " turn" + _s2(locvar_item_acid_p) + " to dust.")
						}
					}
				}
				else {
					if ( synccheck(inv(INV_ITEM_X, locvar_item_acid_ci), inv(INV_ITEM_Y, locvar_item_acid_ci)) ) {
						txtef COLOR_PURPLE
						txt lang("地面の" + itemname(locvar_item_acid_ci, locvar_item_acid_p) + "は灰と化した。", itemname(locvar_item_acid_ci, locvar_item_acid_p) + " on the ground turn" + _s(locvar_item_acid_p) + " to dust.")
					}
				}
				inv(INV_ITEM_NUM, locvar_item_acid_ci) -= locvar_item_acid_p
				cell_refresh inv(INV_ITEM_X, locvar_item_acid_ci), inv(INV_ITEM_Y, locvar_item_acid_ci)
				locvar_item_fire_f = 1
			}
		}
	loop
	gosub *calcBurdenPc
	return locvar_item_fire_f

#deffunc mapitem_fire int mapitem_fire_arg1, int mapitem_fire_arg2
	if ( map(mapitem_fire_arg1, mapitem_fire_arg2, 4) == 0 ) {
		return
	}
	inv_getheader -1
	locvar_item_acid_ci = -1
	repeat invrange, invhead
		if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
			continue
		}
		if ( inv(INV_ITEM_X, cnt) == mapitem_fire_arg1 ) {
			if ( inv(INV_ITEM_Y, cnt) == mapitem_fire_arg2 ) {
				locvar_item_acid_ci = cnt
				break
			}
		}
	loop
	if ( locvar_item_acid_ci != (-1) ) {
		item_fire -1, locvar_item_acid_ci
		if ( stat == 1 ) {
			if ( map(mapitem_fire_arg1, mapitem_fire_arg2, 8) == 0 ) {
				addmef mapitem_fire_arg1, mapitem_fire_arg2, 5, 24, rnd(10) + 5, 100, cc
			}
		}
		cell_refresh mapitem_fire_arg1, mapitem_fire_arg2
	}
	return

#deffunc item_cold int item_cold_arg1, int item_cold_arg2
	locvar_item_fire_max = 0
	locvar_item_fire_ti = -1
	if ( item_cold_arg2 != (-1) ) {
		locvar_item_fire_list(0) = item_cold_arg2
		locvar_item_fire_max++
	}
	if ( item_cold_arg1 != (-1) ) {
		if ( sdata(SKILL_RES_COLD, item_cold_arg1) / 50 >= 6 | (cdata(CDATA_QUALITY, item_cold_arg1) >= FIX_QUALITY_MIRACLE & cdata(CDATA_ALLIED, item_cold_arg1) == 0) ) {
			return 0
		}
		inv_getheader item_cold_arg1
		repeat invrange, invhead
			if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
				continue
			}
			if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_COLDPROOF_BLANKET ) {
				if ( locvar_item_fire_ti == (-1) ) {
					locvar_item_fire_ti = cnt
					item_separate locvar_item_fire_ti
				}
				continue
			}
			if ( item_cold_arg2 == (-1) ) {
				locvar_item_fire_list(locvar_item_fire_max) = cnt
				locvar_item_fire_max++
			}
		loop
	}
	if ( locvar_item_fire_max == 0 ) {
		return 0
	}
	locvar_item_fire_f = 0
	repeat 2
		locvar_item_acid_ci = locvar_item_fire_list(rnd(locvar_item_fire_max))
		if ( inv(INV_ITEM_NUM, locvar_item_acid_ci) <= 0 ) {
			continue
		}
		rowact_item locvar_item_acid_ci
		txtmore
		if ( ibit(ITEM_BIT_COLDPROOF, locvar_item_acid_ci) == FALSE ) {
			if ( ibit(ITEM_BIT_PRECIOUS, locvar_item_acid_ci) == 0 ) {
				locvar_item_fire_a = refitem(inv(INV_ITEM_ID, locvar_item_acid_ci), DBSPEC_TYPE)
				if ( item_cold_arg1 == (-1) ) {
					locvar_item_cold_s = ""
				}
				else {
					locvar_item_cold_s = name(item_cold_arg1) + lang("の", your(item_cold_arg1))
				}
				if ( locvar_item_fire_a == FILTER_CONTAINER | locvar_item_fire_a == FILTER_ITEM_TOOL | locvar_item_fire_a == FILTER_GOLD ) {
					continue
				}
				if ( inv(INV_ITEM_QUALITY, locvar_item_acid_ci) >= FIX_QUALITY_MIRACLE | inv(INV_ITEM_EQUIP, locvar_item_acid_ci) != 0 ) {
					continue
				}
				if ( locvar_item_fire_a != FILTER_ITEM_POTION ) {
					if ( rnd(30) ) {
						continue
					}
				}
				if ( locvar_item_fire_ti != (-1) ) {
					if ( inv(INV_ITEM_NUM, locvar_item_fire_ti) > 0 ) {
						txt lang(itemname(locvar_item_fire_ti, 1) + "が" + name(item_cold_arg1) + "の持ち物を冷気から守った。", itemname(locvar_item_fire_ti, 1) + " protects " + name(item_cold_arg1) + your(item_cold_arg1) + " stuff from cold.")
						if ( inv(INV_ITEM_CHARGE, locvar_item_fire_ti) > 0 ) {
							inv(INV_ITEM_CHARGE, locvar_item_fire_ti)--
						}
						else {
							txt lang(itemname(locvar_item_fire_ti, 1) + "は粉々に砕けた。", itemname(locvar_item_fire_ti, 1) + " is broken to pieces.")
							inv(INV_ITEM_NUM, locvar_item_fire_ti)--
							break
						}
						continue
					}
				}
				locvar_item_acid_p = rnd(inv(INV_ITEM_NUM, locvar_item_acid_ci)) / 2 + 1
				txtef COLOR_PURPLE
				txt lang(locvar_item_cold_s + itemname(locvar_item_acid_ci, locvar_item_acid_p) + "は粉々に砕けた。", locvar_item_cold_s + itemname(locvar_item_acid_ci, locvar_item_acid_p) + " break" + _s2(locvar_item_acid_p) + " to pieces.")
				inv(INV_ITEM_NUM, locvar_item_acid_ci) -= locvar_item_acid_p
				locvar_item_fire_f = 1
			}
		}
	loop
	gosub *calcBurdenPc
	return locvar_item_fire_f

#deffunc mapitem_cold int mapitem_cold_arg1, int mapitem_cold_arg2
	if ( map(mapitem_cold_arg1, mapitem_cold_arg2, 4) == 0 ) {
		return
	}
	inv_getheader -1
	locvar_item_acid_ci = -1
	repeat invrange, invhead
		if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
			continue
		}
		if ( inv(INV_ITEM_X, cnt) == mapitem_cold_arg1 ) {
			if ( inv(INV_ITEM_Y, cnt) == mapitem_cold_arg2 ) {
				locvar_item_acid_ci = cnt
				break
			}
		}
	loop
	if ( locvar_item_acid_ci != (-1) ) {
		item_cold -1, locvar_item_acid_ci
		cell_refresh mapitem_cold_arg1, mapitem_cold_arg2
	}
	return

#deffunc copy_chara int copy_chara_arg1
	procid = (procid + 1) \ 4
	proclist(procid) = "copy_chara:Begin" + " ct:" + ct
	locvar_copy_chara_c = 0
	repeat MAX_CHARA_TOTAL - MAX_CHARA_SAVE, MAX_CHARA_SAVE
		if ( cdata(CDATA_EXIST, cnt) == CHAR_STATE_DEAD ) {
			locvar_copy_chara_c = cnt
			break
		}
	loop
	if ( locvar_copy_chara_c == 0 ) {
		return 0
	}
	locvar_copy_chara_f = 0
	repeat 8
		locvar_copy_chara_y = cdata(CDATA_Y, copy_chara_arg1) - rnd(cnt / 4 + 1) + rnd(cnt / 4 + 1)
		if ( locvar_copy_chara_y < 0 | locvar_copy_chara_y >= mdata(MDATA_HEIGHT) ) {
			continue
		}
		locvar_copy_chara_x = cdata(CDATA_X, copy_chara_arg1) - rnd(cnt / 4 + 1) + rnd(cnt / 4 + 1)
		if ( locvar_copy_chara_x < 0 | locvar_copy_chara_x >= mdata(MDATA_WIDTH) ) {
			continue
		}
		if ( map(locvar_copy_chara_x, locvar_copy_chara_y, 1) == 0 ) {
			if ( (chipm(CHIPM_ATTRIB, map(locvar_copy_chara_x, locvar_copy_chara_y, 0)) & CHIPM_ATTRIB_CANT_PASS) == 0 ) {
				locvar_copy_chara_f = 1
				break
			}
		}
	loop
	if ( locvar_copy_chara_f == 0 ) {
		return 0
	}
	procid = (procid + 1) \ 4
	proclist(procid) = "copy_chara:Proc" + " ct:" + ct
	del_chara locvar_copy_chara_c
	memcpy sdata(SKILL_NONE, locvar_copy_chara_c), sdata(SKILL_NONE, copy_chara_arg1), MAX_SKILL_RANGE * 4 * 2
	memcpy cdata(CDATA_EXIST, locvar_copy_chara_c), cdata(CDATA_EXIST, copy_chara_arg1), MAX_CHARA_DATA * 4
	repeat 10
		cdatan(cnt, locvar_copy_chara_c) = cdatan(cnt, copy_chara_arg1)
	loop
	map(locvar_copy_chara_x, locvar_copy_chara_y, 1) = locvar_copy_chara_c + 1
	cdata(CDATA_X, locvar_copy_chara_c) = locvar_copy_chara_x
	cdata(CDATA_Y, locvar_copy_chara_c) = locvar_copy_chara_y
	cdata(CDATA_IMPRESSION, locvar_copy_chara_c) = 0
	cdata(CDATA_GOLD, locvar_copy_chara_c) = 0
	repeat MAX_EQUIP_SLOT_TOTAL, CDATA_STARTING_EQUIP_SLOTS
		cdata(cnt, locvar_copy_chara_c) = cdata(cnt, locvar_copy_chara_c) / EXT_EQUIP_SLOTS * EXT_EQUIP_SLOTS
	loop
	cdata(CDATA_RELATION_ORG, locvar_copy_chara_c) = -3
	cbitmod CHARA_BIT_PCC, locvar_copy_chara_c, 0
	cbitmod CHARA_BIT_LIVESTOCK, locvar_copy_chara_c, 0
	cbitmod CHARA_BIT_MARRIED, locvar_copy_chara_c, 0
	cbitmod CHARA_BIT_RIDE, locvar_copy_chara_c, 0
	cbitmod CHARA_BIT_REFRESH, locvar_copy_chara_c, 1
	cbitmod CHARA_BIT_SANDBAG, locvar_copy_chara_c, 0
	cbitmod CHARA_BIT_SUMMONED, locvar_copy_chara_c, 1
	procid = (procid + 1) \ 4
	proclist(procid) = "copy_chara:end" + " ct:" + ct
	return 1

#deffunc txteledmg int txteledmg_arg1, int txteledmg_arg2, int txteledmg_arg3, int txteledmg_ele
	if ( txteledmg_ele == SKILL_RES_FIRE ) {
		if ( txteledmg_arg1 == 0 ) {
			if ( synccheck(txteledmg_arg3, -1) ) {
				txt lang(name(txteledmg_arg3) + "は燃え上がった。", name(txteledmg_arg3) + " " + is(txteledmg_arg3) + " burnt.")
			}
		}
		if ( txteledmg_arg1 == 1 ) {
			txt lang("燃やし尽くした。", "burn" + _s(txteledmg_arg2) + " " + him(txteledmg_arg3) + " to death.")
		}
		if ( txteledmg_arg1 == 2 ) {
			txt lang(name(txteledmg_arg3) + "は燃え尽きて灰になった。", name(txteledmg_arg3) + " " + is(txteledmg_arg3) + " burnt to ashes.")
		}
		return
	}
	if ( txteledmg_ele == SKILL_RES_COLD ) {
		if ( txteledmg_arg1 == 0 ) {
			if ( synccheck(txteledmg_arg3, -1) ) {
				txt lang(name(txteledmg_arg3) + "は凍えた。", name(txteledmg_arg3) + " " + is(txteledmg_arg3) + " frozen.")
			}
		}
		if ( txteledmg_arg1 == 1 ) {
			txt lang("氷の塊に変えた。", "transform" + _s(txteledmg_arg2) + " " + him(txteledmg_arg3) + " to an ice sculpture.")
		}
		if ( txteledmg_arg1 == 2 ) {
			txt lang(name(txteledmg_arg3) + "は氷の彫像になった。", name(txteledmg_arg3) + " " + is(txteledmg_arg3) + " frozen and turn" + _s(txteledmg_arg3) + " into an ice sculpture.")
		}
		return
	}
	if ( txteledmg_ele == SKILL_RES_LIGHTNING ) {
		if ( txteledmg_arg1 == 0 ) {
			if ( synccheck(txteledmg_arg3, -1) ) {
				txt lang(name(txteledmg_arg3) + "に電流が走った。", name(txteledmg_arg3) + " " + is(txteledmg_arg3) + " shocked.")
			}
		}
		if ( txteledmg_arg1 == 1 ) {
			txt lang("焦げカスにした。", "electrocute" + _s(txteledmg_arg2) + " " + him(txteledmg_arg3) + " to death.")
		}
		if ( txteledmg_arg1 == 2 ) {
			txt lang(name(txteledmg_arg3) + "は雷に打たれ死んだ。", name(txteledmg_arg3) + " " + is(txteledmg_arg3) + " struck by lightning and die" + _s(txteledmg_arg3) + ".")
		}
		return
	}
	if ( txteledmg_ele == SKILL_RES_DARKNESS ) {
		if ( txteledmg_arg1 == 0 ) {
			if ( synccheck(txteledmg_arg3, -1) ) {
				txt lang(name(txteledmg_arg3) + "は闇の力で傷ついた。", name(txteledmg_arg3) + " " + is(txteledmg_arg3) + " struck by dark force.")
			}
		}
		if ( txteledmg_arg1 == 1 ) {
			txt lang("闇に飲み込んだ。", "let" + _s(txteledmg_arg2) + " the depths swallow " + him(txteledmg_arg3) + ".")
		}
		if ( txteledmg_arg1 == 2 ) {
			txt lang(name(txteledmg_arg3) + "は闇に蝕まれて死んだ。", name(txteledmg_arg3) + " " + is(txteledmg_arg3) + " consumed by darkness.")
		}
		return
	}
	if ( txteledmg_ele == SKILL_RES_NERVE ) {
		if ( txteledmg_arg1 == 0 ) {
			if ( synccheck(txteledmg_arg3, -1) ) {
				txt lang(name(txteledmg_arg3) + "の神経は傷ついた。", name(txteledmg_arg3) + your(txteledmg_arg3) + " nerves are hurt.")
			}
		}
		if ( txteledmg_arg1 == 1 ) {
			txt lang("神経を破壊した。", "destroy" + _s(txteledmg_arg2) + " " + his(txteledmg_arg3) + " nerves.")
		}
		if ( txteledmg_arg1 == 2 ) {
			txt lang(name(txteledmg_arg3) + "は神経を蝕まれて死んだ。", name(txteledmg_arg3) + " die" + _s(txteledmg_arg3) + " from neurofibroma.")
		}
		return
	}
	if ( txteledmg_ele == SKILL_RES_MIND ) {
		if ( txteledmg_arg1 == 0 ) {
			if ( synccheck(txteledmg_arg3, -1) ) {
				txt lang(name(txteledmg_arg3) + "は狂気に襲われた。", name(txteledmg_arg3) + " suffer" + _s(txteledmg_arg3) + " a splitting headache.")
			}
		}
		if ( txteledmg_arg1 == 1 ) {
			txt lang("再起不能にした。", "completely disable" + _s(txteledmg_arg2) + " " + him(txteledmg_arg3) + ".")
		}
		if ( txteledmg_arg1 == 2 ) {
			txt lang(name(txteledmg_arg3) + "は発狂して死んだ。", name(txteledmg_arg3) + " lose" + _s(txteledmg_arg3) + " " + his(txteledmg_arg3) + " mind and commit" + _s(txteledmg_arg3) + " suicide.")
		}
		return
	}
	if ( txteledmg_ele == SKILL_RES_CHAOS ) {
		if ( txteledmg_arg1 == 0 ) {
			if ( synccheck(txteledmg_arg3, -1) ) {
				txt lang(name(txteledmg_arg3) + "は混沌の渦で傷ついた。", name(txteledmg_arg3) + " " + is(txteledmg_arg3) + " hurt by chaotic force.")
			}
		}
		if ( txteledmg_arg1 == 1 ) {
			txt lang("混沌の渦に吸い込んだ。", "let" + _s(txteledmg_arg2) + " the chaos consume " + him(txteledmg_arg3) + ".")
		}
		if ( txteledmg_arg1 == 2 ) {
			txt lang(name(txteledmg_arg3) + "は混沌の渦に吸収された。", name(txteledmg_arg3) + " " + is(txteledmg_arg3) + " drawn into a chaotic vortex.")
		}
		return
	}
	if ( txteledmg_ele == SKILL_RES_NETHER ) {
		if ( txteledmg_arg1 == 0 ) {
			if ( synccheck(txteledmg_arg3, -1) ) {
				txt lang(name(txteledmg_arg3) + "は冥界の冷気で傷ついた。", name(txteledmg_arg3) + " " + is(txteledmg_arg3) + " chilled by infernal squall.")
			}
		}
		if ( txteledmg_arg1 == 1 ) {
			txt lang("冥界に墜とした。", "entrap" + _s(txteledmg_arg2) + " " + him(txteledmg_arg3) + " into the inferno.")
		}
		if ( txteledmg_arg1 == 2 ) {
			txt lang(name(txteledmg_arg3) + "は冥界に墜ちた。", name(txteledmg_arg3) + " go" + _s(txteledmg_arg3, 1) + " to hell.")
		}
		return
	}
	if ( txteledmg_ele == SKILL_RES_POISON ) {
		if ( txteledmg_arg1 == 0 ) {
			if ( synccheck(txteledmg_arg3, -1) ) {
				txt lang(name(txteledmg_arg3) + "は吐き気を催した。", name(txteledmg_arg3) + " suffer" + _s(txteledmg_arg3) + " from venom.")
			}
		}
		if ( txteledmg_arg1 == 1 ) {
			txt lang("毒殺した。", "kill" + _s(txteledmg_arg2) + " " + him(txteledmg_arg3) + " with poison.")
		}
		if ( txteledmg_arg1 == 2 ) {
			txt lang(name(txteledmg_arg3) + "は毒に蝕まれて死んだ。", name(txteledmg_arg3) + " " + is(txteledmg_arg3) + " poisoned to death.")
		}
		return
	}
	if ( txteledmg_ele == SKILL_RES_SOUND ) {
		if ( txteledmg_arg1 == 0 ) {
			if ( synccheck(txteledmg_arg3, -1) ) {
				txt lang(name(txteledmg_arg3) + "は轟音の衝撃を受けた。", name(txteledmg_arg3) + " " + is(txteledmg_arg3) + " shocked by a shrill sound")
			}
		}
		if ( txteledmg_arg1 == 1 ) {
			txt lang("聴覚を破壊し殺した。", "shatter" + _s(txteledmg_arg2) + " " + him(txteledmg_arg3) + " to atoms.")
		}
		if ( txteledmg_arg1 == 2 ) {
			txt lang(name(txteledmg_arg3) + "は朦朧となって死んだ。", name(txteledmg_arg3) + " resonate" + _s(txteledmg_arg3) + " and break up.")
		}
		return
	}
	if ( txteledmg_ele == SKILL_RESDMG_ACID ) {
		if ( txteledmg_arg1 == 0 ) {
			if ( synccheck(txteledmg_arg3, -1) ) {
				txt lang(name(txteledmg_arg3) + "は酸に焼かれた。", name(txteledmg_arg3) + " " + is(txteledmg_arg3) + " burnt by acid.")
			}
		}
		if ( txteledmg_arg1 == 1 ) {
			txt lang("ドロドロに溶かした。", "melt" + _s(txteledmg_arg2) + " " + him(txteledmg_arg3) + " away.")
		}
		if ( txteledmg_arg1 == 2 ) {
			txt lang(name(txteledmg_arg3) + "は酸に焼かれ溶けた。", name(txteledmg_arg3) + " melt" + _s(txteledmg_arg3) + ".")
		}
		return
	}
	if ( txteledmg_ele == SKILL_RESDMG_CUT ) {
		if ( txteledmg_arg1 == 0 ) {
			if ( synccheck(txteledmg_arg3, -1) ) {
				txt lang(name(txteledmg_arg3) + "は切り傷を負った。", name(txteledmg_arg3) + " get" + _s(txteledmg_arg3) + " a cut.")
			}
		}
		if ( txteledmg_arg1 == 1 ) {
			txt lang("千切りにした。", "cut" + _s(txteledmg_arg2) + " " + him(txteledmg_arg3) + " into thin strips.")
		}
		if ( txteledmg_arg1 == 2 ) {
			txt lang(name(txteledmg_arg3) + "は千切りになった。", name(txteledmg_arg3) + " " + is(txteledmg_arg3) + " cut into thin strips.")
		}
		return
	}
	if ( txteledmg_ele == SKILL_RESDMG_CHESTNUT ) {
		if ( txteledmg_arg1 == 0 ) {
			if ( synccheck(txteledmg_arg3, -1) ) {
				txt lang(name(txteledmg_arg3) + "は栗で抉られた。", name(txteledmg_arg3) + " was beaten with chestnuts.")
			}
		}
		if ( txteledmg_arg1 == 1 ) {
			txt lang("栗で抉り殺した。", name(txteledmg_arg3) + " " + is(txteledmg_arg3) + " gouged to death with chestnuts.")
		}
		if ( txteledmg_arg1 == 2 ) {
			txt lang(name(txteledmg_arg3) + "は栗に体を抉られて死んだ。", name(txteledmg_arg3) + " " + was(txteledmg_arg3) + " gouged by chestnuts and died.")
		}
		return
	}
	if ( txteledmg_ele == SKILL_RESDMG_BRAIN ) {
		if ( txteledmg_arg1 == 0 ) {
			if ( synccheck(txteledmg_arg3, -1) ) {
				txt lang(name(txteledmg_arg3) + "は脳を揺さぶられた。", name(txteledmg_arg3) + " received a shock to the brain.")
			}
		}
		if ( txteledmg_arg1 == 1 ) {
			txt lang("脳破裂させた。", name(txteledmg_arg2) + " burst " + his(txteledmg_arg3) + " brain.")
		}
		if ( txteledmg_arg1 == 2 ) {
			txt lang(name(txteledmg_arg3) + "は脳が破裂して死んだ。", name(txteledmg_arg3) + " die" + _s(txteledmg_arg3) + " from brain rupture.")
		}
		return
	}
	if ( txteledmg_ele == SKILL_RESDMG_TOFU ) {
		if ( txteledmg_arg1 == 0 ) {
			if ( synccheck(txteledmg_arg3, -1) ) {
				txt lang(name(txteledmg_arg3) + "の頭に豆腐のかどがぶつかった。", name(txteledmg_arg3) + your(txteledmg_arg3) + " head was hit with tofu.")
			}
		}
		if ( txteledmg_arg1 == 1 ) {
			txt lang("豆腐のかどで粉砕した。", name(txteledmg_arg2) + " crush" + _s(txteledmg_arg2, 1) + " " + name(txteledmg_arg3) + your(txteledmg_arg3) + " head with tofu.")
		}
		if ( txteledmg_arg1 == 2 ) {
			txt lang(name(txteledmg_arg3) + "は豆腐のかどが頭にぶつかって死んだ。", name(txteledmg_arg3) + " die" + _s(txteledmg_arg3) + " from being hit in the head with tofu.")
		}
		return
	}
	if ( txteledmg_arg1 == 0 ) {
		if ( synccheck(txteledmg_arg3, -1) ) {
			txt lang(name(txteledmg_arg3) + "は傷ついた。", name(txteledmg_arg3) + " " + is(txteledmg_arg3) + " wounded.")
		}
	}
	if ( txteledmg_arg1 == 1 ) {
		txt lang("殺した。", "kill" + _s(txteledmg_arg2) + " " + him(txteledmg_arg3) + ".")
	}
	if ( txteledmg_arg1 == 2 ) {
		txt lang(name(txteledmg_arg3) + "は死んだ。", name(txteledmg_arg3) + " " + is(txteledmg_arg3) + " killed.")
	}
	return

#deffunc dmghp int dmghp_charid, int dmghp_origin, int dmghp_source, int dmghp_element, int dmghp_element_power
	locvar_dmghp_ele = dmghp_element
	if ( txt3rd == 0 ) {
		locvar_dmghp_c3 = dmghp_source
	}
	else {
		locvar_dmghp_c3 = -1
	}
	if ( cdata(CDATA_EXIST, dmghp_charid) != CHAR_STATE_ALIVE ) {
		gosub *exit_death
		return 0
	}
	locvar_dmghp_dmg = dmghp_origin * (1 + (cdata(CDATA_CONDITION_ANGRY, dmghp_charid) > 0))
	if ( cdata(CDATA_FRIENDSHIP, CHARA_PLAYER) == 5 ) {
		if ( locvar_dmghp_dmg >= 200 ) {
			locvar_dmghp_dmg = locvar_dmghp_dmg / 200 * (200 - limit(cdata(CDATA_SANITY, dmghp_charid), 0, 100))
		}
	}
	if ( dmghp_source >= DAMAGE_FROM_CHARA ) {
		if ( cdata(CDATA_CONDITION_ATROPHY, dmghp_source) > 0 ) {
			locvar_dmghp_dmg = locvar_dmghp_dmg / 2
		}
	}
	if ( locvar_dmghp_ele == SKILL_NONE | locvar_dmghp_ele >= MAX_SKILL_RESIST ) {
		if ( locvar_dmghp_ele == SKILL_RESDMG_CRUSH ) {
			locvar_dmghp_hoseidv = cdata(CDATA_DV, dmghp_charid) * cdata(CDATA_DV_FIX, dmghp_charid) / 100 + cdata(CDATA_DV_FIX, dmghp_charid) - 100
			locvar_dmghp_hoseipv = (cdata(CDATA_PV, dmghp_charid) + cdata(CDATA_PV_FIX, dmghp_charid) / 25) * cdata(CDATA_PV_FIX, dmghp_charid) / 100
			locvar_dmghp_r = locvar_dmghp_hoseidv + locvar_dmghp_hoseipv
			if ( locvar_dmghp_r > 0 ) {
				if ( cdata(CDATA_DRAIN_HP, dmghp_charid) >= 100 ) {
					locvar_dmghp_r = 0
				}
			}
			if ( locvar_dmghp_r > 0 ) {
				locvar_dmghp_r = locvar_dmghp_r * 2 / 3
			}
			locvar_dmghp_dmg = locvar_dmghp_dmg * 100 / limit(locvar_dmghp_r + 110, 50, 3000)
		}
	}
	else {
		locvar_dmghp_r = sdata(locvar_dmghp_ele, dmghp_charid) / 50
		if ( locvar_dmghp_r < 3 ) {
			locvar_dmghp_dmg = locvar_dmghp_dmg * 150 / limit(locvar_dmghp_r * 50 + 50, 40, 150)
		}
		else {
			locvar_dmghp_dmg = locvar_dmghp_dmg * 100 / (locvar_dmghp_r * 50 + 50)
		}
		if ( locvar_dmghp_ele == SKILL_RES_MAGIC ) {
			if ( cdata(CDATA_EQUIP_WEIGHT, dmghp_charid) < 35000 & cdata(CDATA_EQUIP_WEIGHT, dmghp_charid) >= 15000 ) {
				if ( findbuff(dmghp_charid, BUFF_MAGIC_EQUIP) != (-1) ) {
					locvar_dmghp_dmg = locvar_dmghp_dmg * 4 / 5
				}
			}
		}
		locvar_dmghp_dmg = locvar_dmghp_dmg * 100 / (sdata(SKILL_RES_MAGIC, dmghp_charid) / 2 + 50)
	}
	if ( dmghp_source == DAMAGE_FROM_CHARA ) {
		if ( gdata(GDATA_TEMPORARY_FLAGS2) < 1000 ) {
			if ( critical ) {
				snd SOUNDLIST_ATK2
			}
			else {
				snd SOUNDLIST_ATK1
			}
		}
	}
	else {
		if ( dmghp_source >= DAMAGE_FROM_CHARA ) {
			if ( dist(cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)) <= sdataref(SKILL_DATAREF_TG_RANGE, SKILL_SPACT_CHEER) \ EXT_SDATAREF + 1 ) {
				if ( gdata(GDATA_TEMPORARY_FLAGS2) < 1000 ) {
					if ( critical ) {
						snd SOUNDLIST_ATK2
					}
					if ( dmghp_source < MAX_CHARA_FOLLOWER & cfg_attackanime == 2 | cfg_attackanime == 3 ) {
						if ( critical == 0 ) {
							snd SOUNDLIST_ATK1
						}
					}
				}
			}
		}
	}
	if ( cdata(CDATA_CONDITION_WET, dmghp_charid) > 0 ) {
		if ( locvar_dmghp_ele == SKILL_RES_FIRE | dmghp_source == DAMAGE_FROM_FIRE ) {
			locvar_dmghp_dmg = locvar_dmghp_dmg / 2
		}
		if ( locvar_dmghp_ele == SKILL_RES_LIGHTNING ) {
			locvar_dmghp_dmg = locvar_dmghp_dmg * 3 / 2
		}
		if ( locvar_dmghp_ele == SKILL_RES_COLD ) {
			locvar_dmghp_dmg = locvar_dmghp_dmg * 7 / 4
		}
	}
	if ( cdata(CDATA_CONDITION_OIL, dmghp_charid) > 0 ) {
		if ( locvar_dmghp_ele == SKILL_RES_FIRE | dmghp_source == DAMAGE_FROM_FIRE ) {
			locvar_dmghp_dmg = locvar_dmghp_dmg * 7 / 4
		}
	}
	if ( cdata(CDATA_CONDITION_WINCE, dmghp_charid) != 0 ) {
		locvar_dmghp_dmg = locvar_dmghp_dmg * 12 / 10
	}
	if ( dmghp_source >= DAMAGE_FROM_CHARA ) {
		if ( cdata(CDATA_CONDITION_CHILLS, dmghp_source) != 0 ) {
			locvar_dmghp_dmg = locvar_dmghp_dmg * 8 / 10
		}
	}
	if ( dmghp_source >= DAMAGE_FROM_CHARA ) {
		if ( cdata(CDATA_ID, dmghp_source) == CREATURE_ID_SPIPHA_THE_DRAGON_HUNTER ) {
			locvar_dmghp_s = refchara(cdata(CDATA_ID, dmghp_charid), DBSPEC_CHARA_FILTER, 1)
			if ( instr(locvar_dmghp_s, 0, "/dragon/") != (-1) ) {
				locvar_dmghp_dmg = locvar_dmghp_dmg * 11 / 10 + 100
			}
		}
	}
	if ( locvar_dmghp_ele ) {
		if ( locvar_dmghp_ele == SKILL_RES_SOUND ) {
			if ( cdatan(CDATAN_CLASS, dmghp_charid) == "pianist" ) {
				if ( rnd(4) == 0 ) {
					locvar_dmghp_dmg = 0
				}
			}
		}
	}
	if ( gdata(GDATA_FLAG_MAIN) == 900 ) {
		if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_JALDABAOTH_THE_CHAOS_CHILD & cdata(CDATA_ALLIED, dmghp_charid) == 0 ) {
			if ( gdata(GDATA_FLAG_COLLECTED_WISHES) > 0 ) {
				if ( dmghp_source == CHARA_PLAYER ) {
					if ( cdata(CDATA_GAUGE_COOLDOWN2, dmghp_charid) == 0 ) {
						repeat 2
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 100 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 100
								break
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 200 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 200
								break
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 300 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 300
								break
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 400 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 400
								break
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 500 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 500
								break
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 600 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 600
								break
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 700 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 700
								break
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2000 ) {
								if ( gdata(GDATA_FLAG_SUB_SLIME) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 2000
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2100 ) {
								if ( gdata(GDATA_FLAG_SUB_ROGUE) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 2100
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2200 ) {
								if ( gdata(GDATA_FLAG_SUB_NIGHTMARE) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 2200
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2300 ) {
								if ( gdata(GDATA_FLAG_SUB_MOTHER) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 2300
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2400 ) {
								if ( gdata(GDATA_FLAG_SUB_WIFE) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 2400
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2500 ) {
								if ( gdata(GDATA_FLAG_SUB_DOG) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 2500
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2600 ) {
								if ( gdata(GDATA_FLAG_SUB_CAT) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 2600
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2700 ) {
								if ( gdata(GDATA_FLAG_SUB_WAR) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 2700
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2800 ) {
								if ( gdata(GDATA_FLAG_SUB_YEEK) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 2800
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2900 ) {
								if ( gdata(GDATA_FLAG_SUB_KAMIKAZE) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 2900
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3000 ) {
								if ( gdata(GDATA_FLAG_SUB_MIAS_DREAM) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 3000
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3100 ) {
								if ( gdata(GDATA_FLAG_SUB_VEIN) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 3100
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3200 ) {
								if ( gdata(GDATA_FLAG_SUB_PYRAMID) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 3200
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3300 ) {
								if ( gdata(GDATA_FLAG_SUB_NUKE) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 3300
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3400 ) {
								if ( gdata(GDATA_FLAG_SUB_BIOLOGIST) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 3400
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3500 ) {
								if ( gdata(GDATA_FLAG_SUB_SEWER) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 3500
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3600 ) {
								if ( gdata(GDATA_FLAG_SUB_GUILD_WARS1) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 3600
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3700 ) {
								if ( gdata(GDATA_FLAG_SUB_GUILD_WARS3) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 3700
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3800 ) {
								if ( gdata(GDATA_FLAG_SUB_GUILD_WARS2) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 3800
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 4200 ) {
								if ( gdata(GDATA_FLAG_SUB_MINOTAUR) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 4200
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 4300 ) {
								if ( gdata(GDATA_FLAG_SUB_DADDY) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 4300
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 4500 ) {
								if ( gdata(GDATA_FLAG_SUB_LOST_KITTY) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 4500
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 4600 ) {
								if ( gdata(GDATA_FLAG_SUB_DIVERSIONARY_TACTICS) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 4600
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 4700 ) {
								if ( gdata(GDATA_FLAG_SUB_JUERES_IMPERTINENCE) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 4700
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 4800 ) {
								if ( gdata(GDATA_FLAG_SUB_PIRATE_HUNTING) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 4800
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 4900 ) {
								if ( gdata(GDATA_FLAG_SUB_FALLEN_PRINCESS) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 4900
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 5000 ) {
								if ( gdata(GDATA_FLAG_SUB_UNPAID_COMPENSATION) >= 1 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 5000
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 5100 ) {
								if ( gdata(GDATA_FLAG_SUB_MANSION_FOR_SALE) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 5100
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 5200 ) {
								if ( gdata(GDATA_FLAG_SUB_THE_RESULT_OF_REVENGE) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 5200
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 5300 ) {
								if ( gdata(GDATA_FLAG_SUB_STRUGGLE_AGAINST_INSANITY) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 5300
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 5400 ) {
								if ( gdata(GDATA_FLAG_SUB_H_SISTER) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 5400
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 6400 ) {
								if ( gdata(GDATA_FLAG_SUB_LAW_OF_NINJAS) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 6400
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 6600 ) {
								if ( gdata(GDATA_FLAG_SUB_MONOCHROME_DELIVERY_SERVICE_LETTER) >= 1 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 6600
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 7100 ) {
								if ( gdata(GDATA_FLAG_SUB_DOGS_TAIL) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 7100
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 7300 ) {
								if ( gdata(GDATA_FLAG_DIALOG_NAZUNA) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 7300
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 7600 ) {
								if ( gdata(GDATA_FLAG_SUB_THE_TRUE_APPEARANCE) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 7600
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 7700 ) {
								if ( gdata(GDATA_FLAG_SUB_THE_ABYSS_OF_MAGIC) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 7700
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 7900 ) {
								if ( gdata(GDATA_FLAG_SUB_THE_DISTANT_SEA_OF_STARS) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 7900
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 8000 ) {
								if ( gdata(GDATA_FLAG_SUB_BEYOND_THE_GENERATIONS) >= 9 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 8000
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 8100 ) {
								if ( gdata(GDATA_FLAG_SUB_WHEN_THE_FLAME_BURNS_OUT) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 8100
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 8400 ) {
								if ( gdata(GDATA_FLAG_SUB_NINE_HEAD_DRAGON) >= 3 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 8400
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 9100 ) {
								if ( gdata(GDATA_FLAG_SUB_REGULUS_ZANAN) >= 1003 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 9100
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 9200 ) {
								if ( gdata(GDATA_FLAG_SUB_REGULUS_EULDERNA) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 9200
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 9300 ) {
								if ( gdata(GDATA_FLAG_SUB_REGULUS_KIKKASU) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 9300
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 9400 ) {
								if ( gdata(GDATA_FLAG_SUB_REGULUS_MAYROON) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 9400
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 10500 ) {
								if ( gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) >= 2 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 10500
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 10900 ) {
								if ( gdata(GDATA_FLAG_SUB_BELPHAT_THE_COSMIC_SWORD) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 10900
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 11500 ) {
								if ( gdata(GDATA_FLAG_MAIN_CHAOS_CRADLE_34) >= 100 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 11500
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 12600 ) {
								if ( gdata(GDATA_FLAG_TRAINING_COURSE_COMBAT_4) >= 1000 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 12600
									break
								}
							}
							if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 13500 ) {
								if ( gdata(GDATA_FLAG_SUB_KARURA) >= 1 ) {
									gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 13500
									break
								}
							}
						loop
						gdata(GDATA_FLAG_COLLECTED_WISHES)--
						if ( gdata(GDATA_FLAG_COLLECTED_WISHES) < 0 ) {
							gdata(GDATA_FLAG_COLLECTED_WISHES) = 0
						}
						locvar_dmghp_dmg += cdata(CDATA_MAX_HP, dmghp_charid) / 20
					}
				}
			}
		}
	}
	if ( dmghp_source != DAMAGE_FROM_UNSEEN & dmghp_source != DAMAGE_FROM_BLEED & dmghp_source != DAMAGE_FROM_POISON ) {
		if ( locvar_dmghp_ele ) {
			if ( locvar_dmghp_ele != SKILL_SPACT_DANCE_OF_BLOW & locvar_dmghp_ele != SKILL_SPACT_FLASH_OF_SWIFTNESS & locvar_dmghp_ele != SKILL_RESDMG_CRUSH ) {
				if ( cbit(CHARA_BIT_RES_ELEMENTAL, dmghp_charid) ) {
					if ( locvar_dmghp_dmg > 0 ) {
						locvar_dmghp_dmg = locvar_dmghp_dmg / 50
					}
				}
			}
		}
		if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_GARZIEM ) {
			if ( locvar_dmghp_ele != SKILL_SPACT_FLASH_OF_SWIFTNESS ) {
				locvar_dmghp_dmg = locvar_dmghp_dmg * 2 / 3
			}
		}
	}
	if ( gdata(GDATA_TEMPORARY_FLAGS2) == 100 ) {
		locvar_dmghp_dmg = locvar_dmghp_dmg * 3 / 5
	}
	if ( gdata(GDATA_TEMPORARY_FLAGS2) == 888 ) {
		locvar_dmghp_dmg = locvar_dmghp_dmg / 3 + 1
	}
	if ( gdata(GDATA_TEMPORARY_FLAGS2) == 1200 ) {
		locvar_dmghp_dmg = locvar_dmghp_dmg * 1 / 6 + 1
	}
	if ( TweakData(TWEAK_GAMEPLAY_CG_DISABLE_CHAIN_ATTACKS, TWEAK_CATEGORY_GAMEPLAY) == FALSE ) {
		if ( cdata(CDATA_CHAIN_ATTACK_COUNT, dmghp_charid) >= 50 ) {
			locvar_dmghp_dmg = locvar_dmghp_dmg / 10 * (10 - cdata(CDATA_CHAIN_ATTACK_COUNT, dmghp_charid) / 20)
			if ( cdata(CDATA_CHAIN_ATTACK_COUNT, dmghp_charid) >= 200 ) {
				locvar_dmghp_dmg = 1
			}
		}
		if ( gdata(GDATA_TEMPORARY_FLAGS2) == 0 ) {
			cdata(CDATA_CHAIN_ATTACK_COUNT, dmghp_charid)++
		}
	}
	if ( dmghp_source >= DAMAGE_FROM_CHARA ) {
		if ( locvar_dmghp_dmg > 0 ) {
			if ( cdata(CDATA_QUALITY, dmghp_charid) >= FIX_QUALITY_MIRACLE ) {
				locvar_dmghp_dmg = locvar_dmghp_dmg * 10 / limit(sdata(SKILL_ATTR_SPD, dmghp_source) * 10 / sdata(SKILL_ATTR_SPD, dmghp_charid), 10, 50)
			}
			if ( locvar_dmghp_ele ) {
				if ( locvar_dmghp_ele != SKILL_SPACT_DANCE_OF_BLOW & locvar_dmghp_ele != SKILL_SPACT_FLASH_OF_SWIFTNESS & locvar_dmghp_ele != SKILL_RESDMG_CRUSH ) {
					if ( cbit(CHARA_BIT_RES_ELEMENTAL, dmghp_source) ) {
						if ( locvar_dmghp_dmg > 0 ) {
							locvar_dmghp_dmg = locvar_dmghp_dmg / 50
						}
					}
				}
			}
		}
	}

	if ( cbit(CHARA_BIT_CONTINGENCY, dmghp_charid) ) {
		if ( cdata(CDATA_HP, dmghp_charid) - locvar_dmghp_dmg <= 0 ) {
			if ( limit(25 + cdata(STARTING_CDATA_BUFF + findbuff(dmghp_charid, BUFF_CONTINGENCY) * ARRAY_CDATA_BUFF + 1, dmghp_charid) / 17, 25, 80) >= rnd(100) ) {
				if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_DEATH_HAMSTER ) {
					locvar_dmghp_dmg *= -1
				}
				else {
					locvar_dmghp_dmg = 0
				}
				repeat MAX_BLESSINGS + MAX_HEXES
					locvar_dmghp_i = MAX_BLESSINGS + MAX_HEXES - cnt - 1
					if ( cdata(STARTING_CDATA_BUFF + locvar_dmghp_i * ARRAY_CDATA_BUFF, dmghp_charid) != BUFF_CONTINGENCY ) {
						continue
					}
					if ( cdata(STARTING_CDATA_BUFF + locvar_dmghp_i * ARRAY_CDATA_BUFF, dmghp_charid) == 0 ) {
						continue
					}
					delbuff dmghp_charid, locvar_dmghp_i
					continue cnt
				loop
				txtef COLOR_PURPLE
				txt lang(name(dmghp_charid) + "の契約が切れた。", name(dmghp_charid) + " lost the effect of contingency.")
			}
		}
	}
	if ( cdata(CDATA_IMMUNE_DAMAGE, dmghp_charid) > 0 ) {
		if ( limit(cdata(CDATA_IMMUNE_DAMAGE, dmghp_charid) / 2, 1, 50) > rnd(100) ) {
			locvar_dmghp_dmg = 0
		}
	}
	if ( gdata(GDATA_FLAG_INVULNERABLE_TURNS) > 0 & dmghp_charid == CHARA_PLAYER ) {
		locvar_dmghp_dmg = 0
	}
	if ( gdata(GDATA_TEMPORARY_FLAGS2) == 888 ) {
		if ( locvar_dmghp_dmg > cdata(CDATA_HP, dmghp_charid) ) {
			locvar_dmghp_dmg = 0
			cdata(CDATA_HP, dmghp_charid) = 0
		}
	}
 	if ( locvar_dmghp_dmg > cdata(CDATA_HP, dmghp_charid) ) {
		if ( gdata(GDATA_FLAG_MAIN) >= 875 & gdata(GDATA_FLAG_MAIN) < 1000 ) {
			if ( dmghp_charid == CHARA_PLAYER ) {
				if ( gdata(GDATA_FLAG_COLLECTED_WISHES) > 0 ) {
					repeat 2
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 100 ) {
							gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 100
							break
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 200 ) {
							gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 200
							break
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 300 ) {
							gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 300
							break
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 400 ) {
							gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 400
							break
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 500 ) {
							gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 500
							break
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 600 ) {
							gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 600
							break
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 700 ) {
							gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 700
							break
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2000 ) {
							if ( gdata(GDATA_FLAG_SUB_SLIME) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 2000
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2100 ) {
							if ( gdata(GDATA_FLAG_SUB_ROGUE) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 2100
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2200 ) {
							if ( gdata(GDATA_FLAG_SUB_NIGHTMARE) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 2200
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2300 ) {
							if ( gdata(GDATA_FLAG_SUB_MOTHER) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 2300
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2400 ) {
							if ( gdata(GDATA_FLAG_SUB_WIFE) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 2400
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2500 ) {
							if ( gdata(GDATA_FLAG_SUB_DOG) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 2500
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2600 ) {
							if ( gdata(GDATA_FLAG_SUB_CAT) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 2600
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2700 ) {
							if ( gdata(GDATA_FLAG_SUB_WAR) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 2700
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2800 ) {
							if ( gdata(GDATA_FLAG_SUB_YEEK) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 2800
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 2900 ) {
							if ( gdata(GDATA_FLAG_SUB_KAMIKAZE) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 2900
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3000 ) {
							if ( gdata(GDATA_FLAG_SUB_MIAS_DREAM) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 3000
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3100 ) {
							if ( gdata(GDATA_FLAG_SUB_VEIN) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 3100
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3200 ) {
							if ( gdata(GDATA_FLAG_SUB_PYRAMID) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 3200
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3300 ) {
							if ( gdata(GDATA_FLAG_SUB_NUKE) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 3300
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3400 ) {
							if ( gdata(GDATA_FLAG_SUB_BIOLOGIST) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 3400
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3500 ) {
							if ( gdata(GDATA_FLAG_SUB_SEWER) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 3500
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3600 ) {
							if ( gdata(GDATA_FLAG_SUB_GUILD_WARS1) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 3600
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3700 ) {
							if ( gdata(GDATA_FLAG_SUB_GUILD_WARS3) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 3700
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 3800 ) {
							if ( gdata(GDATA_FLAG_SUB_GUILD_WARS2) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 3800
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 4200 ) {
							if ( gdata(GDATA_FLAG_SUB_MINOTAUR) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 4200
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 4300 ) {
							if ( gdata(GDATA_FLAG_SUB_DADDY) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 4300
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 4500 ) {
							if ( gdata(GDATA_FLAG_SUB_LOST_KITTY) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 4500
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 4600 ) {
							if ( gdata(GDATA_FLAG_SUB_DIVERSIONARY_TACTICS) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 4600
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 4700 ) {
							if ( gdata(GDATA_FLAG_SUB_JUERES_IMPERTINENCE) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 4700
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 4800 ) {
							if ( gdata(GDATA_FLAG_SUB_PIRATE_HUNTING) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 4800
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 4900 ) {
							if ( gdata(GDATA_FLAG_SUB_FALLEN_PRINCESS) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 4900
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 5000 ) {
							if ( gdata(GDATA_FLAG_SUB_UNPAID_COMPENSATION) >= 1 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 5000
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 5100 ) {
							if ( gdata(GDATA_FLAG_SUB_MANSION_FOR_SALE) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 5100
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 5200 ) {
							if ( gdata(GDATA_FLAG_SUB_THE_RESULT_OF_REVENGE) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 5200
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 5300 ) {
							if ( gdata(GDATA_FLAG_SUB_STRUGGLE_AGAINST_INSANITY) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 5300
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 5400 ) {
							if ( gdata(GDATA_FLAG_SUB_H_SISTER) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 5400
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 6400 ) {
							if ( gdata(GDATA_FLAG_SUB_LAW_OF_NINJAS) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 6400
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 6600 ) {
							if ( gdata(GDATA_FLAG_SUB_MONOCHROME_DELIVERY_SERVICE_LETTER) >= 1 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 6600
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 7100 ) {
							if ( gdata(GDATA_FLAG_SUB_DOGS_TAIL) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 7100
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 7300 ) {
							if ( gdata(GDATA_FLAG_DIALOG_NAZUNA) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 7300
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 7600 ) {
							if ( gdata(GDATA_FLAG_SUB_THE_TRUE_APPEARANCE) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 7600
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 7700 ) {
							if ( gdata(GDATA_FLAG_SUB_THE_ABYSS_OF_MAGIC) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 7700
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 7900 ) {
							if ( gdata(GDATA_FLAG_SUB_THE_DISTANT_SEA_OF_STARS) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 7900
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 8000 ) {
							if ( gdata(GDATA_FLAG_SUB_BEYOND_THE_GENERATIONS) >= 9 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 8000
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 8100 ) {
							if ( gdata(GDATA_FLAG_SUB_WHEN_THE_FLAME_BURNS_OUT) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 8100
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 8400 ) {
							if ( gdata(GDATA_FLAG_SUB_NINE_HEAD_DRAGON) >= 3 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 8400
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 9100 ) {
							if ( gdata(GDATA_FLAG_SUB_REGULUS_ZANAN) >= 1003 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 9100
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 9200 ) {
							if ( gdata(GDATA_FLAG_SUB_REGULUS_EULDERNA) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 9200
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 9300 ) {
							if ( gdata(GDATA_FLAG_SUB_REGULUS_KIKKASU) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 9300
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 9400 ) {
							if ( gdata(GDATA_FLAG_SUB_REGULUS_MAYROON) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 9400
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 10500 ) {
							if ( gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) >= 2 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 10500
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 10900 ) {
							if ( gdata(GDATA_FLAG_SUB_BELPHAT_THE_COSMIC_SWORD) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 10900
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 11500 ) {
							if ( gdata(GDATA_FLAG_MAIN_CHAOS_CRADLE_34) >= 100 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 11500
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 12600 ) {
							if ( gdata(GDATA_FLAG_TRAINING_COURSE_COMBAT_4) >= 1000 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 12600
								break
							}
						}
						if ( gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) < 13500 ) {
							if ( gdata(GDATA_FLAG_SUB_KARURA) >= 1 ) {
								gdata(GDATA_FLAG_CUT_IN_MESSAGE_2) = 13500
								break
							}
						}
					loop
					locvar_dmghp_dmg = 0
					gdata(GDATA_FLAG_COLLECTED_WISHES)--
					cdata(CDATA_HP, CHARA_PLAYER) = gdata(GDATA_FLAG_COLLECTED_WISHES)
				}
			}
		}
	}
	if ( locvar_dmghp_dmg > cdata(CDATA_HP, dmghp_charid) ) {
		repeat MAX_CHARA_TOTAL
			if ( dmghp_charid == cnt ) {
				continue
			}
			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
				continue
			}
			if ( dmghp_charid < MAX_CHARA_FOLLOWER | dmghp_charid == CHARA_PLAYER ) {
				if ( cnt > MAX_CHARA_FOLLOWER ) {
					continue
				}
			}
			if ( dmghp_charid > MAX_CHARA_FOLLOWER ) {
				if ( cdata(CDATA_RELATION, dmghp_charid) != cdata(CDATA_RELATION, cnt) ) {
					continue
				}
			}
			if ( cdata(CDATA_HP, cnt) < 0 ) {
				continue
			}
			if ( findbuff(cnt, BUFF_AUTO_GUARD) != (-1) ) {
				locvar_dmghp_dmgpro = locvar_dmghp_dmg / 2 + 1
				locvar_dmghp_dmg = 0
				snd SOUNDLIST_AMMO
				txt lang("＊絶対防衛＊", "*Absolute protect*")
				cdata(CDATA_HP, cnt) -= locvar_dmghp_dmgpro
				break
			}
		loop
	}
	if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_BADGER ) {
		if ( cdata(CDATA_PIC, dmghp_charid) < xy2pic(1, 21) | cdata(CDATA_PIC, dmghp_charid) > xy2pic(31, 21) ) {
			cdata(CDATA_PIC, dmghp_charid) = xy2pic(9, 19)
		}
	}
	if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_METAMORPHOSE ) {
		if ( cdata(CDATA_PIC, dmghp_charid) < xy2pic(1, 21) | cdata(CDATA_PIC, dmghp_charid) > xy2pic(31, 21) ) {
			cdata(CDATA_PIC, dmghp_charid) = xy2pic(26, 7) + COLOR_PURPLE * COLOR_TINT_MULT
		}
	}
	if ( dmghp_source != DAMAGE_FROM_SUICIDE & locvar_dmghp_ele != SKILL_SPACT_DECAPITATION & gdata(GDATA_FLAG_MAIN) != 900 ) {
		if ( dmghp_charid > MAX_CHARA_FOLLOWER ) {
			if ( dmghp_source >= DAMAGE_FROM_TRAP ) {
				if ( dmghp_source <= MAX_CHARA_FOLLOWER ) {
					if ( locvar_dmghp_dmg > gdata(GDATA_FLAG_HIGHEST_NORMAL_DAMAGE) ) {
						gdata(GDATA_FLAG_HIGHEST_NORMAL_DAMAGE) = locvar_dmghp_dmg
					}
				}
			}
		}
	}
	if ( dmghp_source >= DAMAGE_FROM_CHARA ) {
		if ( locvar_dmghp_dmg >= 10 ) {
			if ( cbit(CHARA_BIT_AWAKE_NEAR_DEATH_DAMAGE, dmghp_source) ) {
				if ( cdata(CDATA_HP, dmghp_source) < cdata(CDATA_MAX_HP, dmghp_source) / 2 & cdata(CDATA_HP, dmghp_source) >= 0 ) {
					locvar_dmghp_dmg = locvar_dmghp_dmg / 10 * limit(10 + cdata(CDATA_MAX_HP, dmghp_source) / (cdata(CDATA_HP, dmghp_source) + 1), 10, 30)
				}
			}
		}
	}
	if ( locvar_dmghp_ele == SKILL_SPACT_DECAPITATION ) {
		locvar_dmghp_dmg = dmghp_origin
	}
	if ( dmghp_charid == CHARA_PLAYER | cdata(CDATA_ALLIED, dmghp_charid) == 100 ) {
		if ( locvar_dmghp_ele == SKILL_SPACT_FLASH_OF_SWIFTNESS | gdata(GDATA_TEMPORARY_FLAGS3) == 1500 | gdata(GDATA_TEMPORARY_FLAGS) == 100 ) {
			if ( dmghp_source != DAMAGE_FROM_BRAIN ) {
				if ( locvar_dmghp_dmg > cdata(CDATA_MAX_HP, dmghp_charid) / 2 ) {
					if ( cdata(CDATA_HP, dmghp_charid) > cdata(CDATA_MAX_HP, dmghp_charid) / 2 ) {
						locvar_dmghp_dmg = cdata(CDATA_MAX_HP, dmghp_charid) / 2 + 1
					}
				}
			}
		}
		if ( locvar_dmghp_ele == SKILL_SPACT_DANCE_OF_BLOW ) {
			if ( locvar_dmghp_dmg > cdata(CDATA_MAX_HP, dmghp_charid) / 34 ) {
				if ( cdata(CDATA_HP, dmghp_charid) > cdata(CDATA_MAX_HP, dmghp_charid) / 2 ) {
					locvar_dmghp_dmg = cdata(CDATA_MAX_HP, dmghp_charid) / 34 + 1
				}
			}
		}
	}
	if ( dmghp_source >= DAMAGE_FROM_CHARA ) {
		if ( cdata(CDATA_CONDITION_ANGRY, dmghp_source) > 0 ) {
			locvar_dmghp_dmg *= 2
		}
	}
		if ( cdata(CDATA_FRIENDSHIP, CHARA_PLAYER) == 5 ) {
			if ( locvar_dmghp_dmg >= 100 ) {
				locvar_dmghp_dmg = locvar_dmghp_dmg / 100 * (100 + limit(cdata(CDATA_SANITY, dmghp_source), 0, 100))
			}
		}
	if ( cdata(CDATA_DIRECTIVE_MODE, dmghp_charid) == DIRECTIVE_MODE_DEFENSIVE ) {
		locvar_dmghp_dmg = locvar_dmghp_dmg / 3
	}
	if ( cdata(CDATA_CONDITION_METAL, dmghp_charid) != 0 ) {
		locvar_dmghp_dmg = locvar_dmghp_dmg / 10
		snd SOUNDLIST_AMMO
		cdata(CDATA_CONDITION_METAL, dmghp_charid) = 0
	}
	if ( cbit(CHARA_BIT_AWAKE_MP_BARRIER, dmghp_charid) ) {
		if ( dmghp_source >= DAMAGE_FROM_CHARA ) {
			if ( locvar_dmghp_dmg > 0 ) {
				if ( cdata(CDATA_MP, dmghp_charid) >= cdata(CDATA_MAX_MP, dmghp_charid) / 3 ) {
					locvar_dmghp_manabar = locvar_dmghp_dmg
					cdata(CDATA_MP, dmghp_charid) -= locvar_dmghp_manabar
					locvar_dmghp_dmg = 0
				}
			}
		}
	}
	rtdmg = locvar_dmghp_dmg
	if ( dmghp_charid == CHARA_PLAYER ) {
		if ( dmghp_source != DAMAGE_FROM_JALDABAOTH ) {
			if ( cdata(CDATA_GOD, CHARA_PLAYER) == GOD_OPATOS ) {
				locvar_dmghp_dmg = locvar_dmghp_dmg * 9 / 10
			}
		}
	}
	cdata(CDATA_HP, dmghp_charid) -= locvar_dmghp_dmg
	if ( cfg_dhyouji == 1 ) {
		if ( dmghp_source != DAMAGE_FROM_PERSUASION_HIGH & dmghp_source != DAMAGE_FROM_PERSUASION_LOW ) {
			if ( cdata(CDATA_RELATION, dmghp_charid) == (-3) ) {
				txtmore
				txtef COLOR_YELLOW
				txt "(" + locvar_dmghp_dmg + ")"
			}
		}
	}

    /********** RUIN0X11 CUSTOM - BEGINNING **********/

    if ( cfg_dmgpopups == 1 & synccheck(dmghp_charid, -1) ) {
        if ( locvar_dmghp_ele == 0 ) {
            DamagePopupAdd "" + locvar_dmghp_dmg, dmghp_charid, DMGPOPUP_NORMAL_DAMAGE, 0
        }
        else {
            DamagePopupAdd "" + locvar_dmghp_dmg, dmghp_charid, DMGPOPUP_ELEM_DAMAGE, locvar_dmghp_ele
        }
    }

    /********** RUIN0X11 CUSTOM - ENDING **********/

	if ( locvar_dmghp_ele == SKILL_RES_NETHER ) {
		if ( dmghp_source >= DAMAGE_FROM_CHARA ) {
			if ( locvar_dmghp_dmg > 0 ) {
				if ( cdata(CDATA_HP, dmghp_charid) > 0 ) {
					locvar_dmghp_healn = limit(rnd(locvar_dmghp_dmg * (150 + dmghp_element_power * 2) / 1000 + 10), 1, cdata(CDATA_HP, dmghp_source) / 15 + rnd(5))
					healhp dmghp_source, locvar_dmghp_healn
					locvar_dmghp_healn = 0
				}
			}
		}
	}
	if ( dmghp_charid == CHARA_PLAYER ) {
		if ( dmghp_source == DAMAGE_FROM_CHARA ) {
			lasttc = dmghp_charid
		}
        if ( dbg_hpAlwaysFull ) {
            cdata(CDATA_HP, dmghp_charid) = cdata(CDATA_MAX_HP, dmghp_charid)
        }
		gdata(GDATA_RUN) = 0
		if ( cdata(CDATA_HP, dmghp_charid) < 0 ) {
			if ( evid() != (-1) ) {
				if ( evid() != EVENT_NUKE ) {
					cdata(CDATA_HP, dmghp_charid) = 1
				}
			}
			if ( gdata(GDATA_AREA) == AREA_PET_ARENA ) {
				cdata(CDATA_HP, dmghp_charid) = 1
			}
		}
	}
	if ( sutemi == 100 ) {
		if ( dmghp_source >= DAMAGE_FROM_CHARA ) {
			if ( locvar_dmghp_dmg > 0 ) {
				cdata(CDATA_HP, dmghp_source) -= locvar_dmghp_dmg / 2
			}
		}
	}
	sutemi = 0
	if ( dmghp_source >= DAMAGE_FROM_CHARA ) {
		if ( cdata(CDATA_GAUGE_COOLDOWN2, dmghp_charid) == 0 ) {
			if ( cdata(CDATA_DRAIN_HP, dmghp_charid) < 100 ) {
				cdata(CDATA_DRAIN_HP, dmghp_charid) += 2
				if ( locvar_dmghp_ele == 64 ) {
					cdata(CDATA_DRAIN_HP, dmghp_charid) += 8
				}
				if ( cdata(CDATA_DRAIN_HP, dmghp_charid) >= 100 ) {
					cdata(CDATA_DRAIN_HP, dmghp_charid) = 120
					locvar_dmghp_waitbk = cfg_animewait
					if ( cfg_animewait < 50 ) {
						cfg_animewait = 50
					}
					animeload 87, dmghp_charid
					snd SOUNDLIST_CRASH14
					cfg_animewait = locvar_dmghp_waitbk
				}
			}
			cdata(CDATA_POWER_GAUGE, dmghp_source) += 2
			if ( cbit(CHARA_BIT_SANDBAG, dmghp_charid) != TRUE ) {
				cdata(CDATA_POWER_GAUGE, dmghp_source) += 2
				if ( cdata(CDATA_ID, dmghp_source) == CREATURE_ID_TALON_SOLDIER ) {
					cdata(CDATA_POWER_GAUGE, dmghp_source) += 2
				}
			}
		}
	}
	if ( dmghp_source >= DAMAGE_FROM_CHARA ) {
		if ( cdata(CDATA_POWER_GAUGE, dmghp_source) > 100 ) {
			if ( cdata(CDATA_POWER_GAUGE, dmghp_source) > 100 ) {
				if ( cdata(CDATA_SHIFT_FORM, dmghp_source) <= SHIFT_FORM_NONE & (cdata(CDATA_EVOLUTION_STAGE, dmghp_source) <= 0 | dmghp_source == DAMAGE_FROM_CHARA) & (cdata(CDATA_QUALITY, dmghp_source) < FIX_QUALITY_MIRACLE | dmghp_source <= MAX_CHARA_FOLLOWER) ) {
					cdata(CDATA_POWER_GAUGE, dmghp_source) = 100
				}
			}
		}
		if ( cdata(CDATA_POWER_GAUGE, dmghp_source) > 200 ) {
			cdata(CDATA_POWER_GAUGE, dmghp_source) = 200
		}
	}
	if ( locvar_dmghp_dmg <= 0 ) {
		locvar_dmghp_dmglevel = -1
	}
	else {
		locvar_dmghp_dmglevel = locvar_dmghp_dmg * 6 / cdata(CDATA_MAX_HP, dmghp_charid)
	}
	if ( cdata(CDATA_POWER_GAUGE, dmghp_charid) < 96 ) {
		if ( locvar_dmghp_dmg > 0 ) {
			if ( cdata(CDATA_GAUGE_COOLDOWN2, dmghp_charid) == 0 ) {
				cdata(CDATA_GAUGE_COOLDOWN2, dmghp_charid) = 1
				cdata(CDATA_POWER_GAUGE, dmghp_charid) += locvar_dmghp_dmg * 150 / cdata(CDATA_MAX_HP, dmghp_charid) + 2
				if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_TALON_SOLDIER ) {
					if ( cdata(CDATA_EVOLUTION_STAGE, dmghp_charid) != 0 ) {
						locvar_dmghp_pgauge(dmghp_charid) += 2
					}
				}
				if ( cdata(CDATA_ALLIED, dmghp_charid) == 100 | dmghp_charid == CHARA_PLAYER ) {
					if ( cdata(CDATA_ROLE_RESTOCK, dmghp_charid) > 0 ) {
						cdata(CDATA_POWER_GAUGE, dmghp_charid) += 1
					}
				}
				if ( cdata(CDATA_POWER_GAUGE, dmghp_charid) >= 96 ) {
					cdata(CDATA_POWER_GAUGE, dmghp_charid) = 96
				}
			}
		}
	}
	if ( cdata(CDATA_POWER_GAUGE, dmghp_charid) < 196 & cdata(CDATA_POWER_GAUGE, dmghp_charid) > 100 ) {
		if ( locvar_dmghp_dmg > 0 ) {
			if ( cdata(CDATA_GAUGE_COOLDOWN2, dmghp_charid) == 0 ) {
				cdata(CDATA_GAUGE_COOLDOWN2, dmghp_charid) = 1
				cdata(CDATA_POWER_GAUGE, dmghp_charid) += locvar_dmghp_dmg * 150 / cdata(CDATA_MAX_HP, dmghp_charid) + 2
				if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_TALON_SOLDIER ) {
					if ( cdata(CDATA_EVOLUTION_STAGE, dmghp_charid) != 0 ) {
						locvar_dmghp_pgauge(dmghp_charid) += 2
					}
				}
				if ( cdata(CDATA_ALLIED, dmghp_charid) == 100 | dmghp_charid == CHARA_PLAYER ) {
					if ( cdata(CDATA_ROLE_RESTOCK, dmghp_charid) > 0 ) {
						cdata(CDATA_POWER_GAUGE, dmghp_charid) += 1
					}
				}
				if ( cdata(CDATA_POWER_GAUGE, dmghp_charid) >= 196 ) {
					cdata(CDATA_POWER_GAUGE, dmghp_charid) = 196
				}
			}
		}
	}
	if ( locvar_dmghp_dmg > 0 ) {
		if ( cdata(CDATA_GAUGE_COOLDOWN2, dmghp_charid) == 0 ) {
			cdata(CDATA_GAUGE_COOLDOWN2, dmghp_charid) = 1
		}
	}
	if ( cdata(CDATA_HP, dmghp_charid) < 0 ) {
		locvar_dmghp_bakuretu = 0
	}
	if ( cdata(CDATA_HP, dmghp_charid) < 0 ) {
		if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_THE_CHAOS_CHILD ) {
			if ( cdata(CDATA_ALLIED, dmghp_charid) == 0 & gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
				txt lang(name(dmghp_charid) + "は再生した。", name(dmghp_charid) + " " + is(dmghp_charid) + " healed.")
				cdata(CDATA_HP, dmghp_charid) = cdata(CDATA_MAX_HP, dmghp_charid) / 4
			}
		}
		if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_JALDABAOTH_THE_CHAOS_CHILD ) {
			if ( cdata(CDATA_ALLIED, dmghp_charid) == 0 & gdata(GDATA_AREA) == AREA_CHAOS_CRADLE & gdata(GDATA_FLAG_MAIN) < 900 ) {
				txt lang(name(dmghp_charid) + "は再生した。", name(dmghp_charid) + " " + have(dmghp_charid) + " regenerated.")
				cdata(CDATA_HP, dmghp_charid) = cdata(CDATA_MAX_HP, dmghp_charid) / 4
			}
		}
		repeat MAX_CHARA_TOTAL
			if ( cbit(CHARA_BIT_SANDBAG, dmghp_charid) ) {
				cdata(CDATA_HP, dmghp_charid) = 1
				break
			}
			if ( dmghp_charid == cnt ) {
				continue
			}
			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
				continue
			}
			if ( dmghp_charid < MAX_CHARA_FOLLOWER | dmghp_charid == CHARA_PLAYER ) {
				if ( cnt > MAX_CHARA_FOLLOWER ) {
					continue
				}
			}
			if ( dmghp_charid > MAX_CHARA_FOLLOWER ) {
				if ( cdata(CDATA_RELATION, dmghp_charid) != cdata(CDATA_RELATION, cnt) ) {
					continue
				}
			}
			if ( cdata(CDATA_ALLIED, dmghp_charid) != cdata(CDATA_ALLIED, cnt) & dmghp_charid != CHARA_PLAYER ) {
				continue
			}
			if ( cbit(CHARA_BIT_LAY_HANDS, cnt) == 0 ) {
				continue
			}
			if ( cbit(CHARA_BIT_EXCLUSIVE_SKILL_CHARGE, cnt) == 0 ) {
				continue
			}
			cbitmod CHARA_BIT_EXCLUSIVE_SKILL_CHARGE, cnt, 0
			txtef COLOR_SKY_BLUE
			txt lang(name(cnt) + "は叫んだ。「この者にジュアの加護を。レイハンド！」", name(cnt) + " shout" + _s(cnt) + ", " + cnvtalk("Lay hand!"))
			txtmore
			txt lang(name(dmghp_charid) + "は回復した。", name(dmghp_charid) + " " + is(dmghp_charid) + " healed.")
			cdata(CDATA_HP, dmghp_charid) = cdata(CDATA_MAX_HP, dmghp_charid) / 2
			animeid = ANIMATION_HOLY
			animode = 100 + dmghp_charid
			gosub *anime
			snd SOUNDLIST_PRAY2
			break
		loop
		if ( dmghp_charid == CHARA_PLAYER ) {
			if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_PURGE & gdata(GDATA_FLAG_REMAINING_LIVES) > 0 ) {
				txtef COLOR_PURPLE
				txt lang("<コンティニュー> ", "<Continue> ")
				snd SOUNDLIST_PRAY2
				cdata(CDATA_CONDITION_MPOISON, dmghp_charid) = 0
				cdata(CDATA_CONDITION_POISON, dmghp_charid) = 0
				cdata(CDATA_CONDITION_SLEEP, dmghp_charid) = 0
				cdata(CDATA_CONDITION_CONFUSE, dmghp_charid) = 0
				cdata(CDATA_CONDITION_BLIND, dmghp_charid) = 0
				cdata(CDATA_CONDITION_PARALYZE, dmghp_charid) = 0
				cdata(CDATA_CONDITION_SUFFOCATION, dmghp_charid) = 0
				cdata(CDATA_CONDITION_DIM, dmghp_charid) = 0
				cdata(CDATA_CONDITION_FEAR, dmghp_charid) = 0
				cdata(CDATA_CONDITION_DRUNK, dmghp_charid) = 0
				cdata(CDATA_CONDITION_BLEED, dmghp_charid) = 0
				cdata(CDATA_CONDITION_ATROPHY, dmghp_charid) = 0
				cdata(CDATA_CONDITION_BIND, dmghp_charid) = 0
				cdata(CDATA_CONDITION_OIL, dmghp_charid) = 0
				if ( cdata(CDATA_CONDITION_BRAINWASH, dmghp_charid) > 1 ) {
					cdata(CDATA_CONDITION_BRAINWASH, dmghp_charid) = 1
				}
				cdata(CDATA_HP, dmghp_charid) = cdata(CDATA_MAX_HP, dmghp_charid)
				cdata(CDATA_MP, dmghp_charid) = cdata(CDATA_MAX_MP, dmghp_charid)
				cdata(CDATA_SP, dmghp_charid) = cdata(CDATA_MAX_SP, dmghp_charid)
				gdata(GDATA_FLAG_INVULNERABLE_TURNS) = 3
				gdata(GDATA_FLAG_REMAINING_LIVES)--
			}
		}
	}
	if ( cdata(CDATA_HP, dmghp_charid) >= 0 ) {
		if ( gdata(GDATA_PIERCING_BONUS) != 0 ) {
			if ( cdata(CDATA_PROT_PENALTY, dmghp_charid) < gdata(GDATA_PIERCING_BONUS) ) {
				cdata(CDATA_PROT_PENALTY, dmghp_charid) = gdata(GDATA_PIERCING_BONUS)
			}
			gdata(GDATA_PIERCING_BONUS) = 0
		}
		if ( locvar_dmghp_dmglevel > 1 ) {
			spillblood cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid), 1 + rnd(2)
		}
		if ( gdata(GDATA_DMG_TYPE) == 1 ) {
			txteledmg 0, locvar_dmghp_c3, dmghp_charid, locvar_dmghp_ele
			goto *skipDmgTxt
		}
		if ( locvar_dmghp_dmglevel > 0 ) {
			if ( cdata(CDATA_MAX_HP, dmghp_charid) / 2 > cdata(CDATA_HP, dmghp_charid) ) {
				locvar_dmghp_dmglevel++
				if ( cdata(CDATA_MAX_HP, dmghp_charid) / 4 > cdata(CDATA_HP, dmghp_charid) ) {
					locvar_dmghp_dmglevel++
					if ( cdata(CDATA_MAX_HP, dmghp_charid) / 10 > cdata(CDATA_HP, dmghp_charid) ) {
						locvar_dmghp_dmglevel++
					}
				}
			}
		}
		if ( gdata(GDATA_DMG_TYPE) == 2 ) {
			txtcontinue
			if ( locvar_dmghp_dmglevel == (-1) ) {
				txt lang("かすり傷をつけた。", "make" + _s(locvar_dmghp_c3) + " a scratch.")
			}
			if ( locvar_dmghp_dmglevel == 0 ) {
				txtef COLOR_YELLOW
				txt lang("軽い傷を負わせた。", "slightly wound" + _s(locvar_dmghp_c3) + " " + him(dmghp_charid) + ".")
			}
			if ( locvar_dmghp_dmglevel == 1 ) {
				txtef COLOR_ORANGE
				txt lang("傷つけた。", "moderately wound" + _s(locvar_dmghp_c3) + " " + him(dmghp_charid) + ".")
			}
			if ( locvar_dmghp_dmglevel == 2 ) {
				txtef COLOR_PINK
				txt lang("深い傷を負わせた。", "severely wound" + _s(locvar_dmghp_c3) + " " + him(dmghp_charid) + ".")
			}
			if ( locvar_dmghp_dmglevel >= 3 ) {
				txtef COLOR_RED
				txt lang("致命傷を与えた。", "critically wound" + _s(locvar_dmghp_c3) + " " + him(dmghp_charid) + "!")
			}
			rowact_check dmghp_charid
			goto *skipDmgTxt
		}
		if ( locvar_dmghp_dmglevel == 1 ) {
			if ( synccheck(dmghp_charid, -1) ) {
				txtmore
				txtef COLOR_ORANGE
				txt lang(name(dmghp_charid) + "は痛手を負った。", name(dmghp_charid) + " scream" + _s(dmghp_charid) + ".")
			}
		}
		if ( locvar_dmghp_dmglevel == 2 ) {
			if ( synccheck(dmghp_charid, -1) ) {
				txtmore
				txtef COLOR_PINK
				txt lang(name(dmghp_charid) + "は苦痛にもだえた。", name(dmghp_charid) + " writhe" + _s(dmghp_charid) + " in pain.")
			}
		}
		if ( locvar_dmghp_dmglevel >= 3 ) {
			if ( synccheck(dmghp_charid, -1) ) {
				txtmore
				txtef COLOR_RED
				txt lang(name(dmghp_charid) + "は悲痛な叫び声をあげた。", name(dmghp_charid) + " " + is(dmghp_charid) + " severely hurt!")
			}
		}
		if ( locvar_dmghp_dmg < 0 ) {
			if ( cdata(CDATA_HP, dmghp_charid) > cdata(CDATA_MAX_HP, dmghp_charid) ) {
				cdata(CDATA_HP, dmghp_charid) = cdata(CDATA_MAX_HP, dmghp_charid)
			}
			if ( synccheck(dmghp_charid, -1) ) {
				txtef COLOR_BLUE
				txt lang(name(dmghp_charid) + "は回復した。", name(dmghp_charid) + " " + is(dmghp_charid) + " healed.")
			}
		}
*skipDmgTxt
		if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_ABNORMAL ) {
			if ( dmghp_source >= DAMAGE_FROM_CHARA ) {
				if ( locvar_dmghp_dmg >= cdata(CDATA_MAX_HP, dmghp_charid) / 5 ) {
					locvar_dmghp_ci = -1
					repeat MAX_EQUIP_SLOT_TOTAL, CDATA_STARTING_EQUIP_SLOTS
						locvar_dmghp_body = cdata(cnt, dmghp_charid) / EXT_EQUIP_SLOTS
						if ( locvar_dmghp_body == 0 ) {
							break
						}
						locvar_dmghp_p = cdata(cnt, dmghp_charid) \ EXT_EQUIP_SLOTS - 1
						if ( locvar_dmghp_p == (-1) ) {
							continue
						}
						if ( rnd(limit(30, 1, 30)) == 0 ) {
							locvar_dmghp_ci = locvar_dmghp_p
							break
						}
					loop
					if ( locvar_dmghp_ci != (-1) ) {
						txtmore
						txtef COLOR_PURPLE
						txt lang(name(dmghp_charid) + "の" + itemname(locvar_dmghp_ci) + "はダメージで傷ついた。", name(dmghp_charid) + your(dmghp_charid) + " " + itemname(locvar_dmghp_ci, , 1) + " is damaged.")
						inv(INV_ITEM_LEVEL, locvar_dmghp_ci)--
						snd SOUNDLIST_CRACK
						if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_ABNORMAL ) {
							if ( inv(INV_ITEM_LEVEL, locvar_dmghp_ci) == (-10) ) {
								snd SOUNDLIST_CRACK2
								animeload 64, dmghp_charid
							}
						}
						if ( inv(INV_ITEM_LEVEL, locvar_dmghp_ci) < (-10) ) {
							snd SOUNDLIST_PUNISH1
							txtef COLOR_RED
							txt lang(name(dmghp_charid) + "の" + itemname(locvar_dmghp_ci) + "はボロボロに崩れ散った。", name(dmghp_charid) + your(dmghp_charid) + " " + itemname(locvar_dmghp_ci, , 1) + " is melted by acid.")
							inv(INV_ITEM_NUM, locvar_dmghp_ci)--
							cdata(inv(INV_ITEM_EQUIP, locvar_dmghp_ci), dmghp_charid) = cdata(inv(INV_ITEM_EQUIP, locvar_dmghp_ci), dmghp_charid) / 10000 * 10000
							inv(INV_ITEM_EQUIP, locvar_dmghp_ci) = 0
							r1 = dmghp_charid
							gosub *charaRefresh
						}
					}
				}
			}
		}
		rowact_check dmghp_charid
		if ( cdata(CDATA_HP, dmghp_charid) < cdata(CDATA_MAX_HP, dmghp_charid) / 5 ) {
			if ( dmghp_charid != CHARA_PLAYER ) {
				if ( cdata(CDATA_CONDITION_FEAR, dmghp_charid) == 0 ) {
					if ( cbit(CHARA_BIT_RES_FEAR, dmghp_charid) == 0 ) {
						if ( locvar_dmghp_dmg * 100 / cdata(CDATA_MAX_HP, dmghp_charid) + 10 > rnd(200) ) {
							locvar_dmghp_f = 1
						}
						else {
							locvar_dmghp_f = 0
						}
						if ( dmghp_source == DAMAGE_FROM_CHARA | dmghp_source < MAX_CHARA_FOLLOWER ) {
							if ( trait(TRAIT_NORMAL_OTHER_GENTLE_FACE) ) {
								locvar_dmghp_f = 0
							}
						}
						if ( locvar_dmghp_f ) {
							cdata(CDATA_CONDITION_FEAR, dmghp_charid) = rnd(20) + 5
							if ( synccheck(dmghp_charid, -1) ) {
								txtmore
								txtef COLOR_BLUE
								txt lang(name(dmghp_charid) + "は恐怖して逃げ出した。", name(dmghp_charid) + " run" + _s(dmghp_charid) + " away in terror.")
								if ( TweakData(TWEAK_GAMEPLAY_CG_DISABLE_THIRST, TWEAK_CATEGORY_GAMEPLAY) == FALSE ) {
									if ( cdata(CDATA_THIRST, dmghp_charid) > 12000 ) {
										if ( synccheck(dmghp_charid, -1) ) {
											snd SOUNDLIST_WATERM
											txt lang(name(dmghp_charid) + "は漏らした。", name(dmghp_charid) + " is incontinent.")
											if ( dmghp_charid != CHARA_PLAYER ) {
												txt lang("「…スッキリ！」", cnvtalk("Do not look at me!"))
											}
										}
										if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
											if ( cfg_dust_select == 0 ) {
												flt
												itemcreate -1, ITEM_ID_URINE, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid), 0
												if ( stat != 0 ) {
													if ( dmghp_charid != CHARA_PLAYER ) {
														inv(INV_ITEM_SUB_NAME, ci) = cdata(CDATA_ID, dmghp_charid)
														item_stack -1, ci
													}
												}
											}
										}
										cdata(CDATA_THIRST, dmghp_charid) = 5000
									}
								}
							}
						}
					}
				}
			}
		}
		if ( locvar_dmghp_ele ) {
			if ( locvar_dmghp_ele == SKILL_RES_CHAOS ) {
				dmgcon dmghp_charid, CONDITION_WINCE, rnd(dmghp_element_power / 7 + 1)
				dmgcon dmghp_charid, CONDITION_CHILLS, rnd(dmghp_element_power / 7 + 1)
				dmgcon dmghp_charid, CONDITION_BLIND, rnd(dmghp_element_power / 7 + 1)
				dmgcon dmghp_charid, CONDITION_PARALYZE, rnd(dmghp_element_power / 7 + 1)
				dmgcon dmghp_charid, CONDITION_CONFUSE, rnd(dmghp_element_power / 7 + 1)
				dmgcon dmghp_charid, CONDITION_DIM, rnd(dmghp_element_power / 7 + 1)
				dmgcon dmghp_charid, CONDITION_POISON, rnd(dmghp_element_power / 7 + 1)
			}
			if ( locvar_dmghp_ele == SKILL_RES_LIGHTNING ) {
				if ( rnd(10 + (cdata(CDATA_QUALITY, dmghp_charid) >= FIX_QUALITY_MIRACLE) * 10) == 0 ) {
					if ( cdata(CDATA_CONDITION_PARALYZE, dmghp_charid) == 0 ) {
						cdata(CDATA_CONDITION_PARALYZE, dmghp_charid)++
					}
				}
				if ( cdata(CDATA_FRIENDSHIP, CHARA_PLAYER) == 1 ) {
					if ( dmghp_charid == CHARA_PLAYER ) {
						if ( cdata(CDATA_SP, dmghp_charid) >= (-100) ) {
							cdata(CDATA_SP, dmghp_charid) -= 5
						}
					}
					if ( dmghp_charid != CHARA_PLAYER ) {
						if ( cdata(CDATA_SP, dmghp_charid) >= (-50) ) {
							cdata(CDATA_SP, dmghp_charid) -= 5
						}
					}
				}
			}
			if ( locvar_dmghp_ele == SKILL_RES_FIRE | dmghp_source == DAMAGE_FROM_FIRE ) {
				inv_find ITEM_ID_MAGATAMA, dmghp_source
				if ( stat == (-1) ) {
					item_fire dmghp_charid, -1
					locvar_dmghp_maga = 0
				}
			}
			if ( locvar_dmghp_ele == SKILL_RES_COLD ) {
				inv_find ITEM_ID_MAGAICE, dmghp_source
				if ( stat == (-1) ) {
					item_cold dmghp_charid, -1
 				}
			}
			if ( locvar_dmghp_ele == SKILL_RES_FIRE ) {
				dmgcon dmghp_charid, CONDITION_WINCE, rnd(dmghp_element_power + 1)
			}
			if ( locvar_dmghp_ele == SKILL_RES_COLD ) {
				dmgcon dmghp_charid, CONDITION_CHILLS, rnd(dmghp_element_power + 1)
			}
			if ( locvar_dmghp_ele == SKILL_RES_DARKNESS ) {
				dmgcon dmghp_charid, CONDITION_BLIND, rnd(dmghp_element_power + 1)
			}
			if ( locvar_dmghp_ele == SKILL_RES_NERVE ) {
				dmgcon dmghp_charid, CONDITION_PARALYZE, rnd(dmghp_element_power + 1)
			}
			if ( locvar_dmghp_ele == SKILL_RES_MIND ) {
				dmgcon dmghp_charid, CONDITION_CONFUSE, rnd(dmghp_element_power + 1)
			}
			if ( locvar_dmghp_ele == SKILL_RES_SOUND ) {
				dmgcon dmghp_charid, CONDITION_DIM, rnd(dmghp_element_power + 1)
			}
			if ( locvar_dmghp_ele == SKILL_RES_POISON ) {
				dmgcon dmghp_charid, CONDITION_POISON, rnd(dmghp_element_power + 1)
			}
			if ( locvar_dmghp_ele == SKILL_RESDMG_CUT ) {
				dmgcon dmghp_charid, CONDITION_BLEED, rnd(dmghp_element_power + 1)
			}
			if ( locvar_dmghp_ele == SKILL_RESDMG_ETHER ) {
				if ( dmghp_charid == CHARA_PLAYER ) {
					modcorrupt rnd(dmghp_element_power + 1)
				}
			}
			if ( locvar_dmghp_ele == SKILL_RESDMG_ACID ) {
				if ( dmghp_charid == CHARA_PLAYER | rnd(3) == 0 ) {
					item_acid dmghp_charid, -1
				}
			}
		}
		if ( cdata(CDATA_CONDITION_SLEEP, dmghp_charid) > 0 ) {
			if ( locvar_dmghp_ele != SKILL_RES_MIND & locvar_dmghp_ele != SKILL_RES_NERVE & locvar_dmghp_ele != SKILL_RES_CHAOS ) {
				cdata(CDATA_CONDITION_SLEEP, dmghp_charid) = 0
				txtmore
				txt lang(name(dmghp_charid) + "は眠りを妨げられた。", name(dmghp_charid) + your(dmghp_charid) + " sleep " + is(dmghp_charid) + " disturbed.")
			}
		}
		if ( dmghp_source == DAMAGE_FROM_CHARA ) {
			locvar_dmghp_pcnoise = 100
			hostileaction CHARA_PLAYER, dmghp_charid
			gdata(GDATA_SCOPE) = dmghp_charid
		}
		if ( dmghp_charid == CHARA_PLAYER ) {
			if ( cdata(CDATA_MAX_HP, dmghp_charid) / 4 > cdata(CDATA_HP, dmghp_charid) ) {
				if ( cfg_sound == 1 ) {
					if ( cfg_heart == 1 ) {
						CHECKPLAY 32
						if ( stat == 0 ) {
							snd SOUNDLIST_HEART1
						}
					}
				}
			}
		}
		if ( cbit(CHARA_BIT_SUICIDE, dmghp_charid) ) {
			if ( rnd(3) == 0 ) {
				cbitmod CHARA_BIT_SUICIDE_SWITCH, dmghp_charid, 1
				txtef COLOR_SKY_BLUE
				txtmore
				txt lang(" *カチッ* ", " *click* ")
			}
		}
		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, dmghp_charid) ) {
			if ( cdata(CDATA_ROLE, dmghp_charid) != ROLE_SPECIAL ) {
				if ( cdata(CDATA_ALLIED, dmghp_charid) == 0 ) {
					if ( gdata(GDATA_DMG_TYPE) != 1 ) {
						if ( locvar_dmghp_dmg > cdata(CDATA_MAX_HP, dmghp_charid) / 10 ) {
							if ( cdata(CDATA_HP, dmghp_charid) > cdata(CDATA_MAX_HP, dmghp_charid) / 3 ) {
								if ( cdata(CDATA_QUALITY, dmghp_charid) < FIX_QUALITY_MIRACLE | locvar_dmghp_dmg > cdata(CDATA_MAX_HP, dmghp_charid) / 6 ) {
									if ( gdata(GDATA_TEMPORARY_FLAGS2) == 0 ) {
										if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
											copy_chara dmghp_charid
											if ( stat == 1 ) {
												locvar_dmghp_s = refchara(cdata(CDATA_ID, dmghp_charid), DBSPEC_CHARA_FILTER, 1)
												if ( instr(locvar_dmghp_s, 0, "/man/") != (-1) | cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_DRAGONS_PET_HARPY | cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_RED_NINJA ) {
													txt lang(name(dmghp_charid) + "は分身した！", name(dmghp_charid) + " split" + _s(dmghp_charid) + "!")
												}
												else {
													txt lang(name(dmghp_charid) + "は分裂した！", name(dmghp_charid) + " split" + _s(dmghp_charid) + "!")
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		if ( cbit(CHARA_BIT_SPLIT_NO_EFFECT, dmghp_charid) ) {
			if ( cdata(CDATA_ROLE, dmghp_charid) != ROLE_SPECIAL ) {
				if ( cdata(CDATA_ALLIED, dmghp_charid) == 0 ) {
					if ( gdata(GDATA_DMG_TYPE) != 1 ) {
						if ( rnd(3) == 0 ) {
							if ( cdata(CDATA_CONDITION_CONFUSE, dmghp_charid) == 0 & cdata(CDATA_CONDITION_DIM, dmghp_charid) == 0 & cdata(CDATA_CONDITION_POISON, dmghp_charid) == 0 & cdata(CDATA_CONDITION_PARALYZE, dmghp_charid) == 0 & cdata(CDATA_CONDITION_BLIND, dmghp_charid) == 0 ) {
								if ( locvar_dmghp_dmg > cdata(CDATA_MAX_HP, dmghp_charid) / 10 ) {
									if ( cdata(CDATA_HP, dmghp_charid) > cdata(CDATA_MAX_HP, dmghp_charid) / 3 ) {
										if ( cdata(CDATA_QUALITY, dmghp_charid) < FIX_QUALITY_MIRACLE | locvar_dmghp_dmg > cdata(CDATA_MAX_HP, dmghp_charid) / 6 ) {
											if ( gdata(GDATA_TEMPORARY_FLAGS2) == 0 ) {
												if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
													copy_chara dmghp_charid
													if ( stat == 1 ) {
														locvar_dmghp_s = refchara(cdata(CDATA_ID, dmghp_charid), DBSPEC_CHARA_FILTER, 1)
														if ( instr(locvar_dmghp_s, 0, "/man/") != (-1) | cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_DRAGONS_PET_HARPY | cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_RED_NINJA ) {
															txt lang(name(dmghp_charid) + "は分身した！", name(dmghp_charid) + " split" + _s(dmghp_charid) + "!")
														}
														else {
															txt lang(name(dmghp_charid) + "は分裂した！", name(dmghp_charid) + " split" + _s(dmghp_charid) + "!")
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		if ( cbit(CHARA_BIT_TEMPER, dmghp_charid) ) {
			if ( gdata(GDATA_DMG_TYPE) != 1 ) {
				if ( cdata(CDATA_CONDITION_ANGRY, dmghp_charid) == 0 ) {
					if ( rnd(20) == 0 ) {
						if ( synccheck(dmghp_charid, -1) ) {
							txtef COLOR_BLUE
							txt lang(name(dmghp_charid) + "は怒りに体を奮わせた！", name(dmghp_charid) + " " + is(dmghp_charid) + " engulfed in fury!")
						}
						cdata(CDATA_CONDITION_ANGRY, dmghp_charid) += rnd(30) + 15
					}
				}
			}
		}
		if ( dmghp_source >= DAMAGE_FROM_CHARA ) {
			locvar_dmghp_f = 0
			if ( cdata(CDATA_RELATION, dmghp_charid) <= (-3) ) {
				if ( cdata(CDATA_RELATION_ORG, dmghp_source) > (-3) ) {
					if ( cdata(CDATA_AI_AGGRO, dmghp_charid) == 0 | rnd(4) == 0 ) {
						locvar_dmghp_f = 1
					}
				}
			}
			else {
				if ( cdata(CDATA_RELATION_ORG, dmghp_source) <= (-3) ) {
					if ( cdata(CDATA_AI_AGGRO, dmghp_charid) == 0 | rnd(4) == 0 ) {
						locvar_dmghp_f = 1
					}
				}
			}
			if ( dmghp_source != DAMAGE_FROM_CHARA ) {
				if ( cdata(CDATA_TARGET, dmghp_source) == dmghp_charid ) {
					if ( rnd(3) == 0 ) {
						locvar_dmghp_f = 1
					}
				}
			}
			if ( dmghp_charid != CHARA_PLAYER ) {
				if ( cdata(CDATA_KARMA, dmghp_charid) > 0 ) {
					if ( cdata(CDATA_EXIST, cdata(CDATA_TARGET, dmghp_charid)) == CHAR_STATE_ALIVE ) {
						locvar_dmghp_f = 0
					}
				}
			}
			if ( locvar_dmghp_f ) {
				if ( dmghp_charid != CHARA_PLAYER ) {
					cdata(CDATA_TARGET, dmghp_charid) = dmghp_source
					if ( cdata(CDATA_AI_AGGRO, dmghp_charid) == 0 ) {
						cdata(CDATA_EMO_ICON, dmghp_charid) = 18 + 100 * 2
						cdata(CDATA_AI_AGGRO, dmghp_charid) = 20
					}
					else {
						cdata(CDATA_AI_AGGRO, dmghp_charid) += 2
					}
				}
			}
		}
	}
	if ( gdata(GDATA_TEMPORARY_FLAGS2) == 888 ) {
		if ( cdata(CDATA_HP, dmghp_charid) <= cdata(CDATA_MAX_HP, dmghp_charid) / 20 | cdata(CDATA_HP, dmghp_charid) == 0 ) {
			if ( cdata(CDATA_CONDITION_DIM, dmghp_charid) < 100 ) {
				cdata(CDATA_CONDITION_DIM, dmghp_charid) = 100
				txtef COLOR_YELLOW
				txt lang("＊ノックアウト＊", "*Knockout*")
				snd SOUNDLIST_GONG
			}
		}
	}
	if ( cdata(CDATA_HP, dmghp_charid) < 0 ) {
		locvar_dmghp_se = eleinfo(locvar_dmghp_ele, 1)
		if ( locvar_dmghp_se ) {
			snd locvar_dmghp_se, 0, 1
		}
		txtmore
		txtef COLOR_RED
		if ( dmghp_source >= DAMAGE_FROM_CHARA ) {
			repeat MAX_CHARA_TOTAL
				if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
					continue
				}
				if ( dmghp_source < MAX_CHARA_FOLLOWER | dmghp_source == DAMAGE_FROM_CHARA ) {
					if ( cnt > MAX_CHARA_FOLLOWER ) {
						continue
					}
				}
				if ( dmghp_source > MAX_CHARA_FOLLOWER ) {
					if ( cdata(CDATA_RELATION, dmghp_source) != cdata(CDATA_RELATION, cnt) ) {
						continue
					}
				}
				if ( dist(cdata(CDATA_X, dmghp_source), cdata(CDATA_Y, dmghp_source), cdata(CDATA_X, cnt), cdata(CDATA_Y, cnt)) > sdataref(SKILL_DATAREF_TG_RANGE, SKILL_SPACT_CHEER) \ EXT_SDATAREF + 1 ) {
					continue
				}
				if ( fov_los(cdata(CDATA_X, dmghp_source), cdata(CDATA_Y, dmghp_source), cdata(CDATA_X, cnt), cdata(CDATA_Y, cnt)) == 0 ) {
					continue
				}
				if ( cdata(CDATA_RELATION, dmghp_source) == cdata(CDATA_RELATION, dmghp_charid) ) {
					continue
				}
				if ( dmghp_source < MAX_CHARA_FOLLOWER | dmghp_source == DAMAGE_FROM_CHARA ) {
					if ( cdata(CDATA_RELATION, dmghp_charid) != (-3) ) {
						continue
					}
				}
				if ( cdata(CDATA_POWER_GAUGE, cnt) <= 195 ) {
					if ( charaIsSummoned(dmghp_charid) == FALSE ) {
						cdata(CDATA_POWER_GAUGE, cnt) += 5
					}
				}
				if ( cdata(CDATA_POWER_GAUGE, cnt) > 100 ) {
					if ( cdata(CDATA_SHIFT_FORM, cnt) <= SHIFT_FORM_NONE & (cdata(CDATA_EVOLUTION_STAGE, cnt) <= 0 | cnt == CHARA_PLAYER) & (cdata(CDATA_QUALITY, cnt) < FIX_QUALITY_MIRACLE | cnt <= 16) ) {
						cdata(CDATA_POWER_GAUGE, cnt) = 100
					}
				}
			loop
			if ( locvar_dmghp_ele ) {
				if ( dmghp_charid >= MAX_CHARA_FOLLOWER & gdata(GDATA_DMG_TYPE) == 2 ) {
					txtcontinue
					txteledmg 1, locvar_dmghp_c3, dmghp_charid, locvar_dmghp_ele
				}
				else {
					txteledmg 2, locvar_dmghp_c3, dmghp_charid, locvar_dmghp_ele
				}
			}
			else {
				locvar_dmghp_p = rnd(4)
				if ( locvar_dmghp_p == 0 ) {
					if ( dmghp_charid >= MAX_CHARA_FOLLOWER & gdata(GDATA_DMG_TYPE) == 2 ) {
						txtcontinue
						txt lang("粉々の肉片に変えた。", "transform" + _s(locvar_dmghp_c3) + " " + him(dmghp_charid) + " into several pieces of meat.")
					}
					else {
						txt lang(name(dmghp_charid) + "は粉々の肉片に変えられた。", name(dmghp_charid) + " " + is(dmghp_charid) + " transformed into several pieces of meat.")
					}
				}
				if ( locvar_dmghp_p == 1 ) {
					if ( dmghp_charid >= MAX_CHARA_FOLLOWER & gdata(GDATA_DMG_TYPE) == 2 ) {
						txtcontinue
						txt lang("破壊した。", "destroy" + _s(locvar_dmghp_c3) + " " + him(dmghp_charid) + ".")
					}
					else {
						txt lang(name(dmghp_charid) + "は破壊された。", name(dmghp_charid) + " " + is(dmghp_charid) + " killed.")
					}
				}
				if ( locvar_dmghp_p == 2 ) {
					if ( dmghp_charid >= MAX_CHARA_FOLLOWER & gdata(GDATA_DMG_TYPE) == 2 ) {
						txtcontinue
						txt lang("ミンチにした。", "mince" + _s(locvar_dmghp_c3) + " " + him(dmghp_charid) + ".")
					}
					else {
						txt lang(name(dmghp_charid) + "はミンチにされた。", name(dmghp_charid) + " " + is(dmghp_charid) + " minced.")
					}
				}
				if ( locvar_dmghp_p == 3 ) {
					if ( dmghp_charid >= MAX_CHARA_FOLLOWER & gdata(GDATA_DMG_TYPE) == 2 ) {
						txtcontinue
						txt lang("殺した。", "kill" + _s(locvar_dmghp_c3) + " " + him(dmghp_charid) + ".")
					}
					else {
						txt lang(name(dmghp_charid) + "は殺された。", name(dmghp_charid) + " " + is(dmghp_charid) + " slain.")
					}
				}
			}
			ndeathcause = lang(cdatan(CDATAN_NAME, cc) + "に殺された。", "was killed by " + cdatan(CDATAN_NAME, cc))
		}
		else {
			if ( dmghp_source == DAMAGE_FROM_WEREWOLF ) {
				txt lang(name(dmghp_charid) + "は神化した！", name(dmghp_charid) + " revealed the true appearance!!")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("見えざる手に葬られた。", "got assassinated by the unseen hand")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_UNSEEN ) {
				txt lang(name(dmghp_charid) + "は見えざる手に葬られた。", name(dmghp_charid) + " " + is(dmghp_charid) + " assassinated by the unseen hand.")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("見えざる手に葬られた。", "got assassinated by the unseen hand")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_TRAP ) {
				txt lang(name(dmghp_charid) + "は罠にかかって死んだ。", name(dmghp_charid) + " " + is(dmghp_charid) + " caught in a trap and die" + _s(dmghp_charid) + ".")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("罠にかかって死んだ。", "got caught in a trap and died")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_JALDABAOTH_SHIELDED ) {
				txt lang(cdatan(CDATAN_NAME, dmghp_charid) + "はあなたを庇って灰になった。", cdatan(CDATAN_NAME, dmghp_charid) + " shielded you and turned to ashes.")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("灰になって崩れ落ちた。", "crumbled to ashes")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_JALDABAOTH ) {
				txt lang(name(dmghp_charid) + "は灰になって崩れ落ちた。", name(dmghp_charid) + " turned to ashes and collapsed.")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("灰になって崩れ落ちた。", "crumbled to ashes")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_OVERCAST ) {
				txt lang(name(dmghp_charid) + "はマナの反動で死んだ。", name(dmghp_charid) + " die" + _s(dmghp_charid) + " from over-casting.")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("マナの反動で消滅した。", "was completely wiped by magic reaction")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_HUNGER ) {
				txt lang(name(dmghp_charid) + "は餓死した。", name(dmghp_charid) + " " + is(dmghp_charid) + " starved to death.")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("飢え死にした。", "was starved to death")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_POISON ) {
				txt lang(name(dmghp_charid) + "は毒に蝕まれ死んだ。", name(dmghp_charid) + " " + is(dmghp_charid) + " killed with poison.")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("毒にもがき苦しみながら死んだ。", "miserably died from poison")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_BLEED ) {
				txt lang(name(dmghp_charid) + "は出血多量で死んだ。", name(dmghp_charid) + " die" + _s(dmghp_charid) + " from loss of blood.")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("血を流しすぎて死んだ。", "died from loss of blood")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_DESERT ) {
				txt lang(name(dmghp_charid) + "は干からびて死んだ。", name(dmghp_charid) + " dried up in the desert and die" + _s(dmghp_charid) + ".")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("干からびて死んだ。", "dried up in the desert")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_CHOCO ) {
				txt lang(name(dmghp_charid) + "は熱したチョコレートで火傷して死んだ。", name(dmghp_charid) + " melt" + _s(dmghp_charid) + " down.")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("熱したチョコレートで火傷して死んだ。", "melted down")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_CURSE ) {
				txt lang(name(dmghp_charid) + "は呪いの力で死んだ。", name(dmghp_charid) + " die" + _s(dmghp_charid) + " from a curse.")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("呪い殺された。", "died from a curse")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_TUMBLE ) {
				txt lang(name(dmghp_charid) + "は階段から転げ落ちて死んだ。", name(dmghp_charid) + " tumble" + _s(dmghp_charid) + " down the stairs and die" + _s(dmghp_charid) + ".")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("階段から転げ落ちて亡くなった。", "tumbled down the stairs and died")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_PERFORM ) {
				txt lang(name(dmghp_charid) + "は聴衆に殺された。", name(dmghp_charid) + " " + is(dmghp_charid) + " killed by an audience.")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("演奏中に激怒した聴衆に殺された。", "was killed by an audience")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_FIRE ) {
				txt lang(name(dmghp_charid) + "は焼け死んだ。", name(dmghp_charid) + " " + is(dmghp_charid) + " burnt and turned into ash.")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("焼けて消滅した。", "was burnt and turned into ash")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_BAD_FOOD ) {
				txt lang(name(dmghp_charid) + "は食中毒で死んだ。", name(dmghp_charid) + " " + is(dmghp_charid) + " killed by food poisoning.")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("食中毒で倒れた。", "got killed by food poisoning")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_CORRUPT ) {
				txt lang(name(dmghp_charid) + "はエーテルに侵食され死んだ。", name(dmghp_charid) + " die" + _s(dmghp_charid) + " of Ether Disease.")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("エーテルの病に倒れた。", "died of Ether Disease")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_ACID ) {
				txt lang(name(dmghp_charid) + "は溶けて液体になった。", name(dmghp_charid) + " melt" + _s(dmghp_charid) + " down.")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("溶けて液体になった。", "melted down")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_SUICIDE ) {
				txt lang(name(dmghp_charid) + "はバラバラになった。", name(dmghp_charid) + " shatter" + _s(dmghp_charid) + ".")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("自殺した。", "committed suicide")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_NUKE ) {
				txt lang(name(dmghp_charid) + "は核爆発に巻き込まれて塵となった。", name(dmghp_charid) + " " + is(dmghp_charid) + " turned into atoms.")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("核爆発に巻き込まれて死んだ。", "was killed by an atomic bomb")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_MAIDEN ) {
				txt lang(name(dmghp_charid) + "はアイアンメイデンの中で串刺しになって果てた。", name(dmghp_charid) + " step" + _s(dmghp_charid) + " in an iron maiden and die" + _s(dmghp_charid) + ".")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("アイアンメイデンにはさまれて死んだ。", "stepped in an iron maiden and died")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_GUILLOTINE ) {
				txt lang(name(dmghp_charid) + "はギロチンで首をちょんぎられて死んだ。", name(dmghp_charid) + " " + is(dmghp_charid) + " guillotined and die" + _s(dmghp_charid) + ".")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("ギロチンで首を落とされて死んだ。", "was guillotined")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_EXECUTION ) {
				txt lang(name(dmghp_charid) + "は公正な投票の結果処刑された。", name(dmghp_charid) + " was executed by result of fair vote.")
			}
			if ( dmghp_source == DAMAGE_FROM_SCALP ) {
				txt lang(name(dmghp_charid) + "は衰弱して死んだ。", name(dmghp_charid) + " weakened and died.")
			}
			if ( dmghp_source == DAMAGE_FROM_HANGING ) {
				txt lang(name(dmghp_charid) + "は首を吊った。", name(dmghp_charid) + " hang" + _s(dmghp_charid) + " " + his(dmghp_charid) + "self.")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("首を吊った。", "committed suicide by hanging")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_SUFFOCATION ) {
				txt lang(name(dmghp_charid) + "は窒息して死んだ", name(dmghp_charid) + " choke" + _s(dmghp_charid) + " to death.")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang("窒息して死んだ", "choked to death")
				}
			}
			if ( dmghp_source == DAMAGE_FROM_BURDEN ) {
				inv_getheader 0
				locvar_dmghp_p = -1, 0
				repeat invrange, invhead
					if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
						continue
					}
					if ( inv(INV_ITEM_WEIGHT, cnt) > locvar_dmghp_p(1) ) {
						locvar_dmghp_p = cnt, inv(INV_ITEM_WEIGHT, cnt)
					}
				loop
				if ( locvar_dmghp_p == (-1) ) {
					rtvaln = lang("荷物", "backpack")
				}
				else {
					rtvaln = itemname(locvar_dmghp_p)
				}
				txt lang(name(dmghp_charid) + "は" + rtvaln + "の重さに耐え切れず死んだ。", name(dmghp_charid) + " " + is(dmghp_charid) + " squashed by " + rtvaln + ".")
				if ( dmghp_charid == CHARA_PLAYER ) {
					ndeathcause = lang(rtvaln + "の重さに耐え切れず潰れた。", "was squashed by " + rtvaln)
				}
			}
		}
		if ( locvar_dmghp_ele == SKILL_RES_NETHER ) {
			if ( dmghp_source >= DAMAGE_FROM_CHARA ) {
				if ( locvar_dmghp_dmg > 0 ) {
					locvar_dmghp_healn = limit(rnd(locvar_dmghp_dmg * (150 + dmghp_element_power * 2) / 1000 + 10), 1, cdata(CDATA_MAX_HP, dmghp_source) / 10 + rnd(5))
					if ( locvar_dmghp_healn > cdata(CDATA_MAX_HP, dmghp_charid) / 10 + 1 ) {
						locvar_dmghp_healn = cdata(CDATA_MAX_HP, dmghp_charid) / 10 + 1
					}
					healhp cc, locvar_dmghp_healn
					locvar_dmghp_healn = 0
				}
			}
		}
		if ( gdata(GDATA_RIDER) != dmghp_charid | dmghp_charid == CHARA_PLAYER ) {
			cell_removechara cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
		}
		if ( dmghp_source != DAMAGE_FROM_PERSUASION_LOW ) {
			if ( cbit(CHARA_BIT_STONE_BLOOD, dmghp_charid) ) {
				if ( synccheck(dmghp_charid, -1) ) {
					x = cdata(CDATA_X, dmghp_charid)
					y = cdata(CDATA_Y, dmghp_charid)
					snd SOUNDLIST_CRUSH1, 0, 1
					animeblood dmghp_charid, 1, locvar_dmghp_ele
				}
				spillfrag cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid), 3
			}
			else {
				snd SOUNDLIST_KILL1 + rnd(2), 0, 1
				animeblood dmghp_charid, 0, locvar_dmghp_ele
				spillblood cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid), 4
			}
		}
		if ( dmghp_source >= DAMAGE_FROM_CHARA ) {
			if ( dmghp_source != DAMAGE_FROM_CHARA ) {
				if ( sdata(SKILL_ACTIVE_PICKPOCKET, dmghp_source) != 0 ) {
					if ( charaIsSummoned(dmghp_charid) == FALSE & cbit(CHARA_BIT_LIVESTOCK, dmghp_charid) != 1 ) {
						locvar_dmghp_goudatu = limit(sdata(SKILL_ACTIVE_PICKPOCKET, dmghp_source) * 5 + 100, 50, 2000)
						if ( locvar_dmghp_goudatu > cdata(CDATA_GOLD, dmghp_charid) ) {
							locvar_dmghp_goudatu = cdata(CDATA_GOLD, dmghp_charid)
						}
						cdata(CDATA_GOLD, dmghp_source) += locvar_dmghp_goudatu
						cdata(CDATA_GOLD, dmghp_charid) -= locvar_dmghp_goudatu
						skillexp SKILL_ACTIVE_PICKPOCKET, dmghp_source, 80
					}
				}
			}
		}
		if ( cdata(CDATA_ROLE, dmghp_charid) == ROLE_NONE ) {
			cdata(CDATA_EXIST, dmghp_charid) = CHAR_STATE_DEAD
		}
		else {
			if ( cdata(CDATA_ROLE, dmghp_charid) == ROLE_ADVENTURER ) {
				cdata(CDATA_EXIST, dmghp_charid) = CHAR_STATE_ADV_HOSPITAL
				cdata(CDATA_RESPAWN, dmghp_charid) = gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 + 24 + rnd(24 / 2)
			}
			else {
				cdata(CDATA_EXIST, dmghp_charid) = CHAR_STATE_SPIRIT
				cdata(CDATA_RESPAWN, dmghp_charid) = gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 + 48
			}
		}
		if ( dmghp_charid != CHARA_PLAYER ) {
			if ( dmghp_charid < MAX_CHARA_FOLLOWER ) {
				modimp dmghp_charid, -10
				cdata(CDATA_EXIST, dmghp_charid) = CHAR_STATE_ALLY_DEAD
				cdata(CDATA_AREA, dmghp_charid) = AREA_NONE
				if ( cbit(CHARA_BIT_BODYGUARD, dmghp_charid) == 1 ) {
					evadd EVENT_CLIENT_DEAD, cdata(CDATA_ID, dmghp_charid)
					cdata(CDATA_EXIST, dmghp_charid) = CHAR_STATE_DEAD
				}
				if ( cbit(CHARA_BIT_GUARD_TEMP, dmghp_charid) == 1 ) {
					cdata(CDATA_EXIST, dmghp_charid) = CHAR_STATE_DEAD
				}
			}
		}
		if ( cbit(CHARA_BIT_BODYGUARD, dmghp_charid) == 1 ) {
			if ( dmghp_charid >= MAX_CHARA_FOLLOWER ) {
				if ( gdata(GDATA_FLAG_SUB_KARAVIKA_OF_SONG_AND_DANCE) \ 3 == 2 ) {
					if ( gdata(GDATA_AREA) == AREA_OL_DRAN & gdata(GDATA_LEVEL) == 5 ) {
						gdata(GDATA_FLAG_SUB_KARAVIKA_OF_SONG_AND_DANCE)--
						evadd EVENT_KARAVIKA_SETUP_MAP, 0
					}
				}
			}
		}
		if ( dmghp_charid == CHARA_PLAYER | (cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_STRAY_SOUL & cdata(CDATA_QUALITY, dmghp_charid) == FIX_QUALITY_UNIQUE) ) {
			if ( gdata(GDATA_AREA) == AREA_AMUR_CAGE & gdata(GDATA_LEVEL) >= 10 ) {
				soullimit = 0
				if ( dmghp_charid == CHARA_PLAYER ) {
					if ( soulstage >= 2 ) {
						soulstage = 0
						chara_vanquish findallyguard(CREATURE_ID_STRAY_SOUL)
					}
				}
				gdata(GDATA_FLAG_SUB_AMURDAD) += 9
				txt lang("ネヘルタード「もう駄目…残念…」", "Amurdad: " + cnvtalk("It's no use... Alas..."))
				msg_halt
				evadd EVENT_AMURDEAD_SUB_CREATE_STAIRS, 0
			}
		}
		if ( dmghp_charid == CHARA_PLAYER ) {
			gdata(GDATA_DEATH)++
		}
		if ( dmghp_charid == gdata(GDATA_SCOPE) ) {
			gdata(GDATA_SCOPE) = 0
		}
		if ( dmghp_source >= DAMAGE_FROM_CHARA ) {
			cdata(CDATA_TARGET, dmghp_source) = 0
			customtalk dmghp_source, DBMODE_FLAVOR_KILL
			gosub *convert_word
			locvar_dmghp_exp = limit(cdata(CDATA_LEVEL, dmghp_charid), 1, 400) * limit(cdata(CDATA_LEVEL, dmghp_charid) + 1, 1, 400) * limit(cdata(CDATA_LEVEL, dmghp_charid) + 2, 1, 400) / 10 + 10
			if ( dmghp_source == DAMAGE_FROM_CHARA ) {
				if ( cdata(CDATA_LEVEL, dmghp_charid) < cdata(CDATA_LEVEL, dmghp_source) ) {
					locvar_dmghp_exp = locvar_dmghp_exp / 100 + 5
				}
			}
			if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, dmghp_charid) | cbit(CHARA_BIT_SPLIT_NO_EFFECT, dmghp_charid) ) {
				locvar_dmghp_exp = 0
			}
			if ( cdata(CDATA_RELATION, dmghp_source) == RELATION_ALLY | dmghp_source == CHARA_PLAYER ) {
				if ( gdata(GDATA_SLEEP_EXP) > 1000000000 ) {
					gdata(GDATA_SLEEP_EXP) = 1000000000
				}
				gdata(GDATA_SLEEP_EXP) += locvar_dmghp_exp
				if ( gdata(GDATA_SLEEP_EXP) > 1000000000 ) {
					gdata(GDATA_SLEEP_EXP) = 1000000000
				}
			}
			if ( dmghp_source == CHARA_PLAYER ) {
				if ( cdata(CDATA_LEVEL, dmghp_charid) > cdata(CDATA_LEVEL, dmghp_source) ) {
					locvar_dmghp_exp = locvar_dmghp_exp * limit(cdata(CDATA_LEVEL, dmghp_charid) * 20 / cdata(CDATA_LEVEL, dmghp_source), 10, 100) / 10
				}
			}
			cdata(CDATA_EXP, dmghp_source) += locvar_dmghp_exp
			cdata(CDATA_AI_AGGRO, dmghp_source) = 0
		}
		if ( dmghp_source >= DAMAGE_FROM_CHARA ) {
			if ( charaIsSummoned(dmghp_charid) == FALSE ) {
				if ( dmghp_source < MAX_CHARA_FOLLOWER ) {
					if ( dmghp_source != DAMAGE_FROM_CHARA ) {
						if ( cdata(CDATA_IMPRESSION, dmghp_source) >= 100 ) {
							if ( sdata(SKILL_NORMAL_MINING, dmghp_source) > 0 ) {
								cdata(CDATA_MATERIAL1_COUNTER, dmghp_source) += limit(sdata(SKILL_NORMAL_MINING, dmghp_source) / 5, 1, 10)
								skillexp SKILL_NORMAL_MINING, dmghp_source, 5
							}
							if ( sdata(SKILL_NORMAL_FISHING, dmghp_source) > 0 ) {
								cdata(CDATA_MATERIAL2_COUNTER, dmghp_source) += limit(sdata(SKILL_NORMAL_FISHING, dmghp_source) / 5, 1, 10)
								skillexp SKILL_NORMAL_FISHING, dmghp_source, 5
							}
							if ( sdata(SKILL_NORMAL_GARDENING, dmghp_source) > 0 ) {
								cdata(CDATA_MATERIAL3_COUNTER, dmghp_source) += limit(sdata(SKILL_NORMAL_GARDENING, dmghp_source) / 5, 1, 10)
								skillexp SKILL_NORMAL_GARDENING, dmghp_source, 5
							}
							if ( sdata(SKILL_NORMAL_GENE_ENGINEER, dmghp_source) > 0 ) {
								cdata(CDATA_MATERIAL4_COUNTER, dmghp_source) += limit(sdata(SKILL_NORMAL_GENE_ENGINEER, dmghp_source) / 5, 1, 10)
								skillexp SKILL_NORMAL_GENE_ENGINEER, dmghp_source, 5
							}
							if ( sdata(SKILL_NORMAL_DETECTION, dmghp_source) > 0 ) {
								cdata(CDATA_MATERIAL5_COUNTER, dmghp_source) += limit(sdata(SKILL_NORMAL_DETECTION, dmghp_source) / 5, 1, 10)
								skillexp SKILL_NORMAL_DETECTION, dmghp_source, 5
							}
						}
					}
				}
			}
		}
		if ( dmghp_charid != CHARA_PLAYER ) {
			if ( gdata(GDATA_AREA) != AREA_SHOW_HOUSE ) {
				if ( cbit(CHARA_BIT_LIVESTOCK, dmghp_charid) != 1 ) {
					if ( dmghp_charid >= MAX_CHARA_FOLLOWER ) {
						if ( cdata(CDATA_ALLIED, dmghp_charid) == 0 ) {
							if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_LULWY ) {
								evadd EVENT_GOD_INSIDE_LULWY, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
							}
							if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_EHEKATL ) {
								evadd EVENT_GOD_INSIDE_EHEKATL, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
							}
							if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_OPATOS ) {
								evadd EVENT_GOD_INSIDE_OPATOS, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
							}
							if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_KUMIROMI ) {
								evadd EVENT_GOD_INSIDE_KUMIROMI, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
							}
							if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_MANI ) {
								evadd EVENT_GOD_INSIDE_MANI, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
							}
							if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_JURE ) {
								evadd EVENT_GOD_INSIDE_JURE, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
							}
							if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_YACATECT ) {
								evadd EVENT_GOD_INSIDE_YACATECT, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
							}
							if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_ITZPALT ) {
								evadd EVENT_GOD_INSIDE_ITZPALT, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
							}
							if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_IMARITUKA_THE_ZASIKI_WARAI ) {
								skillmod SKILL_ATTR_LUC, CHARA_PLAYER, (-1000) * 51
							}
							if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_TEZCATLIPOCA ) {
								if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
									if ( gdata(GDATA_LEVEL) == 178 ) {
										if ( gdata(GDATA_FLAG_MAIN) == 675 ) {
											gdata(GDATA_FLAG_MAIN) = 680
											evadd EVENT_TEZCATLIPOCA2, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
											snd SOUNDLIST_COMPLETE1
											gdata(GDATA_FLAG_BOSS_MUSIC) = 5
											evadd EVENT_BOSS_MUSIC
										}
									}
								}
							}
							if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_ENTHUMESIS ) {
								if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
									if ( gdata(GDATA_LEVEL) == 179 ) {
										if ( gdata(GDATA_FLAG_MAIN) == 710 ) {
											gdata(GDATA_FLAG_MAIN) = 715
											evadd EVENT_ENTHUMESIS2, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
											snd SOUNDLIST_COMPLETE1
											gdata(GDATA_FLAG_BOSS_MUSIC) = 5
											evadd EVENT_BOSS_MUSIC
										}
									}
								}
							}
							if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_THE_ELEMENT | cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_HYPER_YACATECT | cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_BLESSED_JURE | cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_DEVASTATE_LULWY | cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_BUILDUP_OPATOS | cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_INSANE_KUMIROMI | cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_DEUS_EX_MANINA | cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_GOD_INSIDE_EHEKATL ) {
								txtef COLOR_GREEN
								txt lang("あなたは今や神殺しだ。", "You are the godslayer!")
							}
						}
					}
				}
			}
		}
		if ( gdata(GDATA_FLAG_DUEL_TARGET) > 0 ) {
			if ( dmghp_charid == gdata(GDATA_FLAG_DUEL_TARGET) | dmghp_charid == CHARA_PLAYER ) {
				txtef COLOR_GREEN
				txt lang("＊決闘終了＊", "*Duel-Over!*")
				snd SOUNDLIST_GONG
				gdata(GDATA_FLAG_DUEL_TARGET) = -3
			}
		}
		if ( dmghp_charid != CHARA_PLAYER ) {
			if ( gdata(GDATA_AREA) != AREA_SHOW_HOUSE & gdata(GDATA_AREA) != AREA_AMUR_CAGE & gdata(GDATA_AREA) != AREA_VOID & gdata(GDATA_AREA) != AREA_PET_ARENA ) {
				if ( cbit(CHARA_BIT_LIVESTOCK, dmghp_charid) != 1 ) {
					if ( dmghp_charid >= MAX_CHARA_FOLLOWER ) {
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_ZEOME_THE_FALSE_PROPHET ) {
							evadd EVENT_WIN_LESIMAS
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_ORPHE_THE_CHAOS_CHILD ) {
							locvar_dmghp_flagorphe++
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_ISSIZZLE_THE_DARK_ABOMINATION ) {
							txtef COLOR_GREEN
							txt lang("[愚者の魔石]を手に入れた！", "You obtain the [Fool's Magic Stone]!")
							snd SOUNDLIST_COMPLETE1
							gdata(GDATA_FLAG_MAIN_FOOL) = 1
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_WYNAN_THE_LORD_OF_THE_ANCIENT_CASTLE ) {
							txtef COLOR_GREEN
							txt lang("[覇者の魔石]を手に入れた！", "You obtain the [King's Magic Stone]!")
							snd SOUNDLIST_COMPLETE1
							gdata(GDATA_FLAG_MAIN_KING) = 1
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_QURUIZA_THE_RED_EYED_DECEIVER ) {
							txtef COLOR_GREEN
							txt lang("[賢者の魔石]を手に入れた！", "You obtain the [Sage's Magic Stone]!")
							snd SOUNDLIST_COMPLETE1
							gdata(GDATA_FLAG_MAIN_SAGE) = 1
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_REVLUS_THE_MAGE_GUILDMASTER ) {
							if ( gdata(GDATA_FLAG_SUB_GUILD_WARS3) == 1 ) {
								gdata(GDATA_FLAG_SUB_GUILD_WARS3) = 2
								txt_questupdate
							}
							if ( gdata(GDATA_FLAG_SUB_GUILD_WARS2) == 1 ) {
								gdata(GDATA_FLAG_SUB_GUILD_WARS2) = 2
								txt_questupdate
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_FRAY_THE_FIGHTER_GUILDMASTER ) {
							if ( gdata(GDATA_FLAG_SUB_GUILD_WARS1) == 1 ) {
								gdata(GDATA_FLAG_SUB_GUILD_WARS1) = 2
								txt_questupdate
							}
							if ( gdata(GDATA_FLAG_SUB_GUILD_WARS2) == 1 ) {
								gdata(GDATA_FLAG_SUB_GUILD_WARS2) = 2
								txt_questupdate
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_SIN_THE_THIEF_GUILDMASTER ) {
							if ( gdata(GDATA_FLAG_SUB_GUILD_WARS3) == 1 ) {
								gdata(GDATA_FLAG_SUB_GUILD_WARS3) = 2
								txt_questupdate
							}
							if ( gdata(GDATA_FLAG_SUB_GUILD_WARS1) == 1 ) {
								gdata(GDATA_FLAG_SUB_GUILD_WARS1) = 2
								txt_questupdate
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_RODLOB_THE_YEEK_CHIEF ) {
							if ( gdata(GDATA_FLAG_SUB_YEEK) < 1000 ) {
								gdata(GDATA_FLAG_SUB_YEEK) = 2
								txt_questupdate
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_TUWEN_THE_MASTER_OF_THE_PYRAMID ) {
							if ( gdata(GDATA_FLAG_SUB_PYRAMID) < 1000 ) {
								gdata(GDATA_FLAG_SUB_PYRAMID) = 1000
								txt_questupdate
								txt_questcompleted
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_UNGAGA_THE_MINOTAUR_KING ) {
							if ( gdata(GDATA_FLAG_SUB_MINOTAUR) < 1000 ) {
								gdata(GDATA_FLAG_SUB_MINOTAUR) = 2
								txt_questupdate
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_VANSESDA_THE_ANCIENT_FIRE ) {
							if ( gdata(GDATA_FLAG_SUB_WHEN_THE_FLAME_BURNS_OUT) < 1000 ) {
								gdata(GDATA_FLAG_SUB_WHEN_THE_FLAME_BURNS_OUT) = 2
								txt_questupdate
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_BIG_DADDY & dmghp_source >= DAMAGE_FROM_CHARA ) {
							if ( dmghp_source == DAMAGE_FROM_CHARA | dmghp_source < MAX_CHARA_FOLLOWER | cbit(CHARA_BIT_NECRO, dmghp_source) == TRUE | dmghp_source == DAMAGE_FROM_PERSUASION_LOW | dmghp_source == DAMAGE_FROM_PERSUASION_HIGH ) {
								evadd EVENT_LITTLE_SISTER, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
							}
							else {
								txt lang("ビッグダディは既にリトルシスターを何処かへ逃がしていた。", "The Big Daddy had already evacuated the Little Sister somewhere.")
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_LITTLE_SISTER ) {
							if ( dmghp_charid > MAX_CHARA_FOLLOWER ) {
								gdata(GDATA_SISTER_KILLED)++
								txtef COLOR_RED
								txt lang("リトルシスター殺害" + gdata(GDATA_SISTER_KILLED) + "回、救出" + gdata(GDATA_SISTER_SAVED) + "回。", "You have saved Little Sisters " + gdata(GDATA_SISTER_SAVED) + " times and killed them " + gdata(GDATA_SISTER_KILLED) + " times.")
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_H_SISTER ) {
							if ( gdata(GDATA_FLAG_SUB_H_SISTER) < 1000 ) {
								gdata(GDATA_FLAG_SUB_H_SISTER) = 2
								txt_questupdate
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_EBARTH_THE_PIRATE_BOSS ) {
							if ( gdata(GDATA_FLAG_SUB_PIRATE_HUNTING) < 1000 ) {
								gdata(GDATA_FLAG_SUB_PIRATE_HUNTING) = 1000
								txt_questupdate
								txt_questcompleted
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_ANUBIS_THE_MASTER_OF_DEATH ) {
							txtef COLOR_GREEN
							txt lang("[太陽のアンク]を手に入れた！", "You obtain the [Ankh of The Sun]!")
							snd SOUNDLIST_COMPLETE1
							gdata(GDATA_FLAG_MAIN_ANKH) = 1
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_METAL_VESDA_THE_FIRE_MACHINE ) {
							txtef COLOR_GREEN
							txt lang("[データチップ]を手に入れた！", "You obtain the [Data Chip]!")
							snd SOUNDLIST_COMPLETE1
							gdata(GDATA_FLAG_MAIN_DATA_CHIP) = 1
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_EXOSSIL_THE_CHAOS_WING ) {
							txtef COLOR_GREEN
							txt lang("[混沌の翼]を手に入れた！", "You obtain the [Chaos Wings]!")
							snd SOUNDLIST_COMPLETE1
							gdata(GDATA_FLAG_MAIN_CHAOS_WINGS) = 1
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_CHAOS_UNICORN_KING_OF_CHAOS ) {
							if ( gdata(GDATA_FLAG_MAIN) < 270 ) {
								gdata(GDATA_FLAG_MAIN) = 270
								snd SOUNDLIST_CHEST1
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_MOBILE_COMMUNICATION_EQUIPMENT ) {
							if ( gdata(GDATA_FLAG_MAIN) < 266 ) {
								txtef COLOR_GREEN
								txt lang("[データレジスタ]を手に入れた！", "You obtain the [Data Register]!")
								snd SOUNDLIST_COMPLETE1
								gdata(GDATA_FLAG_MAIN) = 266
								txt_questupdate
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_MESHERA_PLANT ) {
							evadd EVENT_MESHERA_ALPHA, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_MESHERA_ALPHA_THE_DEFORMED_ANGEL ) {
							evadd EVENT_WIN_REMIDO
						}
						if ( gdata(GDATA_LEVEL) == adata(ADATA_MAX_LEVEL, gdata(GDATA_AREA)) | gdata(GDATA_AREA) == AREA_VOID ) {
							if ( adata(ADATA_BOSS, gdata(GDATA_AREA)) == dmghp_charid ) {
								evadd EVENT_WIN_BOSS_RANDOM
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_GWEN_THE_PITILESS ) {
							gdata(GDATA_GWEN_PITILESS_LVL)++
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_ETHER_GENERATOR ) {
							if ( gdata(GDATA_FLAG_MAIN) >= 300 & gdata(GDATA_FLAG_MAIN) < 310 ) {
								txtef COLOR_GREEN
								txt lang("回収用カプセルに高純度のエーテル塊を入れた。", "You place the lump of purified ether into the recovery capsule.")
								snd SOUNDLIST_COMPLETE1
								gdata(GDATA_FLAG_MAIN) = 310
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_ESTORK_THE_DOGGOD ) {
							if ( gdata(GDATA_FLAG_SUB_DOGS_TAIL) < 3 ) {
								gdata(GDATA_FLAG_SUB_DOGS_TAIL) = 3
								snd SOUNDLIST_COMPLETE1
								txt_questupdate
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_KING_COCKROACH ) {
							if ( gdata(GDATA_FLAG_SUB_MANSION_FOR_SALE) == 1002 ) {
								gdata(GDATA_FLAG_SUB_MANSION_FOR_SALE) = 1003
								txtef COLOR_GREEN
								txt lang("清掃完了！", "Cleaning completed!")
								snd SOUNDLIST_COMPLETE1
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_NINE_HEAD_DRAGON_THE_ABYSS ) {
							if ( gdata(GDATA_FLAG_MAIN) < 400 & gdata(GDATA_FLAG_MAIN) >= 398 ) {
								gdata(GDATA_FLAG_MAIN) = 400
								gdata(STARTING_GDATA_FLAG + 275) = 1
								snd SOUNDLIST_COMPLETE1
								gdata(GDATA_FLAG_BOSS_MUSIC) = 0
								evadd EVENT_BOSS_MUSIC
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_BEILGENA_THE_ARTIFICIAL_DRAGON ) {
							if ( gdata(STARTING_GDATA_FLAG + 371) < 1000 ) {
								gdata(STARTING_GDATA_FLAG + 371) = 1000
								snd SOUNDLIST_COMPLETE1
								gdata(GDATA_FLAG_BOSS_MUSIC) = 0
								evadd EVENT_BOSS_MUSIC
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_GRAVEED_THE_GRAVITY_VALLEY ) {
							if ( gdata(STARTING_GDATA_FLAG + 370) < 1000 ) {
								gdata(STARTING_GDATA_FLAG + 370) = 1000
								snd SOUNDLIST_COMPLETE1
								gdata(GDATA_FLAG_BOSS_MUSIC) = 0
								evadd EVENT_BOSS_MUSIC
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_DOROTHIA_STANDING_IN_THE_WETLAND ) {
							if ( gdata(STARTING_GDATA_FLAG + 369) < 1000 ) {
								gdata(STARTING_GDATA_FLAG + 369) = 1000
								snd SOUNDLIST_COMPLETE1
								gdata(GDATA_FLAG_BOSS_MUSIC) = 0
								evadd EVENT_BOSS_MUSIC
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_INQTUAL_THE_REVENGE ) {
							if ( gdata(GDATA_FLAG_SUB_REGULUS_EULDERNA) < 100 ) {
								gdata(GDATA_FLAG_SUB_REGULUS_EULDERNA) = 100
								txt_questupdate
								snd SOUNDLIST_COMPLETE1
								gdata(GDATA_FLAG_BOSS_MUSIC) = 0
								evadd EVENT_BOSS_MUSIC
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_LAZASYE_THE_DESTROY ) {
							if ( gdata(GDATA_FLAG_SUB_REGULUS_MAYROON) < 100 ) {
								gdata(GDATA_FLAG_SUB_REGULUS_MAYROON) = 100
								txt_questupdate
								snd SOUNDLIST_COMPLETE1
								gdata(GDATA_FLAG_BOSS_MUSIC) = 0
								evadd EVENT_BOSS_MUSIC
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_ROATONIS_THE_INFECTIONS ) {
							if ( gdata(GDATA_FLAG_SUB_REGULUS_KIKKASU) < 100 ) {
								gdata(GDATA_FLAG_SUB_REGULUS_KIKKASU) = 100
								txt_questupdate
								snd SOUNDLIST_COMPLETE1
								gdata(GDATA_FLAG_BOSS_MUSIC) = 0
								evadd EVENT_BOSS_MUSIC
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_EGELVEIL_THE_BIND ) {
							if ( gdata(GDATA_FLAG_MAIN) == 470 ) {
								gdata(GDATA_FLAG_MAIN) = 480
								txt_questupdate
								snd SOUNDLIST_COMPLETE1
								gdata(GDATA_FLAG_BOSS_MUSIC) = 0
								evadd EVENT_BOSS_MUSIC
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_ALSAPIA_THE_MURDERER_MASK ) {
							if ( gdata(STARTING_GDATA_FLAG + 361) == 30 ) {
								gdata(STARTING_GDATA_FLAG + 361) = 35
								snd SOUNDLIST_CHEST1
								gdata(GDATA_FLAG_BOSS_MUSIC) = 6
								evadd EVENT_BOSS_MUSIC
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_GILPHEM_THE_MAGIC_STEEL ) {
							if ( gdata(STARTING_GDATA_FLAG + 361) == 50 ) {
								gdata(STARTING_GDATA_FLAG + 361) = 55
								snd SOUNDLIST_CHEST1
								gdata(GDATA_FLAG_BOSS_MUSIC) = 6
								evadd EVENT_BOSS_MUSIC
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_LANKATA_THE_LIGHTNING_OF_BLUE ) {
							if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
								if ( gdata(GDATA_LEVEL) == 164 ) {
									txtef COLOR_GREEN
									txt lang("[錆びついた鈴]を手に入れた！", "You obtain the [Rusted Bell]!")
									snd SOUNDLIST_COMPLETE1
									gdata(GDATA_FLAG_MAIN_CHAOS_CRADLE_25) = 1000
									snd SOUNDLIST_COMPLETE1
									gdata(GDATA_FLAG_BOSS_MUSIC) = 0
									evadd EVENT_BOSS_MUSIC
								}
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_ALFRED_THE_CANGNAN_WIND ) {
							if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
								if ( gdata(GDATA_LEVEL) == 173 ) {
									chara_vanquish dmghp_charid
									gdata(GDATA_FLAG_MAIN) = 640
									gdata(GDATA_FLAG_MAIN_CHAOS_CRADLE_34) = 1
								}
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_UNITDEAD_KING | cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_UNITDEAD_QUEEN | cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_UNITDEAD_JACK | cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_UNITDEAD_JOKER ) {
							if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
								gdata(GDATA_FLAG_MAIN_CHAOS_CRADLE_30)++
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_ORPHE_THE_CHAOS_DISCPLE ) {
							if ( gdata(GDATA_FLAG_MAIN) == 855 ) {
								if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
									evadd EVENT_CHAOS_CRADLE_CHAT_YAYAUHQUI
								}
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_JALDABAOTH_THE_CHAOS_CHILD ) {
							if ( gdata(GDATA_FLAG_MAIN) == 900 ) {
								if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
									evadd EVENT_CHAOS_CRADLE_SPAWN_JALDABAOTH
								}
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_BELL_OF_EMERGENCY ) {
							txtef COLOR_RED
							txt lang("けたたましい警報が鳴り響いた！", "*beeeeeep!* An alarm sounds loudly!")
							repeat MAX_CHARA_TOTAL
								if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
									continue
								}
								if ( cdata(CDATA_RELATION, cnt) != (-3) ) {
									continue
								}
								cdata(CDATA_TARGET, cnt) = 0
								cdata(CDATA_AI_AGGRO, cnt) = 250
							loop
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_GODA_THE_CAPTAIN_OF_ORC ) {
							if ( dmghp_charid > MAX_CHARA_FOLLOWER ) {
								locvar_dmghp_f = get_freeally()
								if ( locvar_dmghp_f != 0 ) {
									evadd EVENT_JOIN_GODA, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
								}
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_MAD_SCIENTIST ) {
							if ( dmghp_charid > MAX_CHARA_FOLLOWER ) {
								locvar_dmghp_f = get_freeally()
								if ( locvar_dmghp_f != 0 ) {
									evadd EVENT_JOIN_MAD_SCIENTIST, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
								}
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_ISCA_THE_FALLEN_ANGEL ) {
							if ( dmghp_charid > MAX_CHARA_FOLLOWER ) {
								locvar_dmghp_f = get_freeally()
								if ( locvar_dmghp_f != 0 ) {
									evadd EVENT_JOIN_ISCA, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
								}
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_DUNGEON_CLEANER ) {
							if ( cdata(CDATA_ROLE, dmghp_charid) != ROLE_SPECIAL ) {
								if ( dmghp_charid > MAX_CHARA_FOLLOWER ) {
									locvar_dmghp_f = get_freeally()
									if ( locvar_dmghp_f != 0 ) {
										evadd EVENT_JOIN_DUNGEON_CLEANER, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
									}
								}
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_LITYOU ) {
							if ( dmghp_charid > MAX_CHARA_FOLLOWER ) {
								locvar_dmghp_f = get_freeally()
								if ( locvar_dmghp_f != 0 ) {
									evadd EVENT_JOIN_LITYOU, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
								}
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_SUNRISE_THE_ARCHIPELAGO_DRAGON ) {
							if ( dmghp_charid > MAX_CHARA_FOLLOWER ) {
								locvar_dmghp_f = get_freeally()
								if ( locvar_dmghp_f != 0 ) {
									evadd EVENT_JOIN_SUNRISE, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
								}
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_MURDER_KNIGHT ) {
							if ( dmghp_charid > MAX_CHARA_FOLLOWER ) {
								locvar_dmghp_f = get_freeally()
								if ( locvar_dmghp_f != 0 ) {
									evadd EVENT_JOIN_MUDER_KNIGHT, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
								}
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_WING_SNAIL ) {
							if ( dmghp_charid > MAX_CHARA_FOLLOWER ) {
								locvar_dmghp_f = get_freeally()
								if ( locvar_dmghp_f != 0 ) {
									evadd EVENT_JOIN_WING_SNAIL, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
								}
							}
						}
						if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_PASCAL ) {
							if ( dmghp_charid > MAX_CHARA_FOLLOWER ) {
								locvar_dmghp_f = get_freeally()
								if ( locvar_dmghp_f != 0 ) {
									evadd EVENT_JOIN_PASCAL, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
								}
							}
						}
						check_quest
					}
				}
			}
			else {
				if ( gdata(GDATA_AREA) == AREA_VOID ) {
					if ( adata(ADATA_BOSS, gdata(GDATA_AREA)) == dmghp_charid ) {
						evadd EVENT_WIN_BOSS_RANDOM
					}
				}
			}
		}
		if ( cdata(CDATA_HP, dmghp_charid) < 0 ) {
			if ( dmghp_charid == CHARA_PLAYER ) {
				if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_LOSS ) {
					gdata(GDATA_GAMEMODE_PENALTY) = 4
					goto *game_save
				}
			}
		}
		if ( dmghp_charid != CHARA_PLAYER ) {
			if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_LOMIAS_THE_MESSENGER_FROM_VINDALE ) {
				gdata(GDATA_FLAG_LOMIAS_KILLED)++
			}
			if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_GWEN_THE_INNOCENT | cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_GWEN_THE_PITILESS ) {
				gdata(GDATA_FLAG_GWEN_KILLED)++
			}
			if ( gdata(GDATA_AREA) != AREA_PET_ARENA & gdata(GDATA_AREA) != AREA_SHOW_HOUSE & gdata(GDATA_AREA) != AREA_ARENA ) {
				npcmemory(0, cdata(CDATA_ID, dmghp_charid))++
			}
			if ( dmghp_source != DAMAGE_FROM_PERSUASION_HIGH & dmghp_source != DAMAGE_FROM_PERSUASION_LOW ) {
				customtalk dmghp_charid, DBMODE_FLAVOR_DEATH
				gosub *convert_word
			}
			if ( dmghp_charid < MAX_CHARA_FOLLOWER ) {
				txt lang("あなたは悲しくなった。", "You feel sad for a moment.")
			}
		}
		gdata(GDATA_CROWD)--
		if ( cdata(CDATA_IN_TAGTEAM, dmghp_charid) == (-1) ) {
			locvar_dmghp_ttc = cdata(CDATA_TAGTEAM_PARTNER, dmghp_charid)
			cell_setchara locvar_dmghp_ttc, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid)
			tag_end dmghp_charid
		}
		if ( cdata(CDATA_IN_TAGTEAM, dmghp_charid) == 1 ) {
			locvar_dmghp_ttc = cdata(CDATA_TAGTEAM_PARTNER, dmghp_charid)
			tag_end dmghp_charid
			cell_movechara locvar_dmghp_ttc, cdata(CDATA_X, locvar_dmghp_ttc), cdata(CDATA_Y, locvar_dmghp_ttc)
		}
		if ( gdata(GDATA_RIDER) ) {
			if ( dmghp_charid == gdata(GDATA_RIDER) ) {
				if ( cdata(CDATA_RIDING, dmghp_charid) == 0 ) {
					txtmore
					txt lang(name(CHARA_PLAYER) + "は" + name(dmghp_charid) + "の死体から降りた。", name(CHARA_PLAYER) + " get off the corpse of " + name(dmghp_charid) + ".")
					ride_end
				}
			}
		}
		if ( gdata(GDATA_RIDER) ) {
			if ( dmghp_charid == gdata(GDATA_RIDER) ) {
				if ( cdata(CDATA_RIDING, dmghp_charid) == 1 ) {
					txtmore
					txt lang(name(CHARA_PLAYER) + "は" + name(dmghp_charid) + "の死体をそっと降ろした。", name(CHARA_PLAYER) + " took down the corpse of " + name(dmghp_charid) + ".")
					cdata(CDATA_RIDING, dmghp_charid) = 0
					ride_end
				}
			}
		}
		check_kill dmghp_source, dmghp_charid
		catitem = 0
		rollanatomy = 0
		if ( rnd(60) == 0 ) {
			rollanatomy = 1
		}
		if ( dmghp_source >= DAMAGE_FROM_CHARA ) {
			if ( cdata(CDATA_ID, dmghp_source) == CREATURE_ID_BLACK_CAT ) {
				if ( cdata(CDATA_RELATION, dmghp_source) == 10 ) {
					catitem = dmghp_source
				}
			}
			if ( int(sqrt(sdata(SKILL_NORMAL_ANATOMY, dmghp_source))) > rnd(150) ) {
				rollanatomy = 1
			}
			skillexp SKILL_NORMAL_ANATOMY, dmghp_source, 10 + rollanatomy * 4
			if ( cbit(CHARA_BIT_NECRO, dmghp_source) ) {
				skillexp SKILL_NORMAL_ANATOMY, CHARA_PLAYER, 30 + rollanatomy * 8
			}
		}
		if ( dmghp_source == DAMAGE_FROM_PERSUASION_LOW ) {
			gdata(GDATA_FLAG_TALKING_USED) = 100
		}
		rc = dmghp_charid
		gosub *item_loot
		gdata(GDATA_FLAG_TALKING_USED) = 0
		if ( gdata(GDATA_AREA) == AREA_PET_ARENA ) {
			if ( rnd(5) == 0 ) {
				snd SOUNDLIST_CHEER
			}
		}
		if ( cbit(CHARA_BIT_DEATH_MASTER, dmghp_charid) == 1 ) {
			txtmore
			txt lang("死の宣告は無効になった。", "The death word breaks.")
			repeat MAX_CHARA_TOTAL
				if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
					continue
				}
				locvar_dmghp_p = cnt
				repeat MAX_BLESSINGS + MAX_HEXES
					if ( cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, locvar_dmghp_p) == 0 ) {
						break
					}
					if ( cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, locvar_dmghp_p) == BUFF_DEATH_WORD ) {
						delbuff locvar_dmghp_p, cnt
						continue cnt
					}
				loop
			loop
		}
		if ( dmghp_source == DAMAGE_FROM_CHARA ) {
			if ( gdata(GDATA_GOD_TALK) ) {
				if ( rnd(20) == 0 ) {
					txtgod cdata(CDATA_GOD, CHARA_PLAYER), GOD_TEXT_KILL
				}
			}
		}
		gosub *exit_death

		/********** ANNA CUSTOM - BEGINNING **********/ // Pets die permanently in Loss Mode.

		if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_LOSS & dmghp_charid < MAX_CHARA_FOLLOWER & dmghp_charid > CHARA_PLAYER & TweakData(TWEAK_GAMEPLAY_PETS_DIE_LOSSMODE, TWEAK_CATEGORY_GAMEPLAY) == 1 & cdata(CDATA_AREA, CHARA_PLAYER) != AREA_PET_ARENA ) {
			inv_getheader dmghp_charid
			repeat invrange, invhead
				LoopCount = cnt
				if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
					continue
				}
				else {
					itemcreate -1, inv(INV_ITEM_ID, cnt), cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid), 0
					item_copy LoopCount, ci
					inv(INV_ITEM_X, ci) = cdata(CDATA_X, dmghp_charid)
					inv(INV_ITEM_Y, ci) = cdata(CDATA_Y, dmghp_charid)
					inv(INV_ITEM_EQUIP, ci) = 0
				}
			loop
			cell_refresh inv(INV_ITEM_X, ci), inv(INV_ITEM_Y, ci)

			AllyID = dmghp_charid
			gosub *DeleteAIInfo

			del_chara dmghp_charid
		}

		/********** ANNA CUSTOM - ENDING **********/

		return 0
	}
	gosub *exit_death
	return 1

*exit_death
	if ( cbit(CHARA_BIT_SANDBAG, dmghp_charid) ) {
		if ( cfg_dhyouji == 2 ) {
			if ( dmghp_source != DAMAGE_FROM_PERSUASION_HIGH & dmghp_source != DAMAGE_FROM_PERSUASION_LOW ) {
				if ( synccheck(dmghp_charid, -1) ) {
					txt "(" + locvar_dmghp_dmg + ")" + lang(" ", "")
				}
			}
		}
	}
	if ( cbit(CHARA_BIT_SANDBAG, dmghp_charid) ) {
		if ( synccheck(dmghp_charid, -1) ) {
			if ( rnd(20) == 0 ) {
				txt lang("「くっ！」", cnvtalk("Kill me already!")), lang("「まだまだ！」", cnvtalk("No... not yet...!")), lang("「もう限界…」", cnvtalk("I can't take it anymore...")), lang("「うぐぐ」", cnvtalk("Argh!")), lang("「あう」", cnvtalk("Uhhh")), lang("「ああんっ」", cnvtalk("Ugggg"))
			}
		}
	}
	gdata(GDATA_DMG_TYPE) = 0
	txt3rd = 0
	return

#deffunc dmgmp int dmgmp_charid, int dmgmp_arg2
	cdata(CDATA_MP, dmgmp_charid) -= dmgmp_arg2
	if ( cdata(CDATA_MP, dmgmp_charid) < (-99999) ) {
		cdata(CDATA_MP, dmgmp_charid) = -99999
	}
	if ( cdata(CDATA_MP, dmgmp_charid) < 0 ) {
		r1 = dmgmp_charid
		gosub *expMagicCapacity
		locvar_dmgmp_d = -cdata(CDATA_MP, dmgmp_charid) * 400 / (100 + sdata(SKILL_NORMAL_MAGIC_CAPACITY, dmgmp_charid) * 10)
		if ( dmgmp_charid == CHARA_PLAYER ) {
			if ( trait(TRAIT_RACE_MAGIC_REACTION) == 1 ) {
				locvar_dmgmp_d = locvar_dmgmp_d / 2
			}
		}
		else {
			locvar_dmgmp_d = locvar_dmgmp_d / 5
			if ( locvar_dmgmp_d < 10 ) {
				return 1
			}
		}
		txt lang("マナの反動が" + name(dmgmp_charid) + "の精神を蝕んだ！", "Magic reaction hurts " + name(dmgmp_charid) + "!")
		dmghp dmgmp_charid, locvar_dmgmp_d, DAMAGE_FROM_OVERCAST
	}
	return 1

#deffunc dmgsp int dmgsp_charid, int dmgsp_arg2
	if ( dmgsp_charid != CHARA_PLAYER ) {
		return
	}
	if ( cdata(CDATA_SP, dmgsp_charid) >= (-100) ) {
		cdata(CDATA_SP, dmgsp_charid) -= dmgsp_arg2
	}
	return 1

#deffunc dmgspt int dmgspt_charid, int dmgspt_amount
	if ( cdata(CDATA_SP, dmgspt_charid) >= (-50) ) {
		cdata(CDATA_SP, dmgspt_charid) -= dmgspt_amount
	}
	return 1

#deffunc dmgsptalk int dmgsptalk_charid, int dmgsptalk_amount
	if ( cdata(CDATA_SP, dmgsptalk_charid) >= (-100) ) {
		cdata(CDATA_SP, dmgsptalk_charid) -= dmgsptalk_amount
	}
	return 1

#deffunc healsan int healsan_charid, int healsan_arg2
	cdata(CDATA_SANITY, healsan_charid) -= healsan_arg2
	if ( cdata(CDATA_SANITY, healsan_charid) < 0 ) {
		cdata(CDATA_SANITY, healsan_charid) = 0
	}
	return

#deffunc dmgsan int dmgsan_charid, int dmgsan_arg2
	if ( cdata(CDATA_ALLIED, dmgsan_charid) != 100 & cdata(CDATA_QUALITY, dmgsan_charid) >= FIX_QUALITY_MIRACLE ) {
		return 0
	}
	locvar_dmgsan_r = sdata(SKILL_RES_MIND, dmgsan_charid) / 50
	if ( locvar_dmgsan_r <= 0 ) {
		locvar_dmgsan_r = 1
	}
	locvar_dmgsan_dmg = dmgsan_arg2 / locvar_dmgsan_r
	if ( dmgsan_charid < MAX_CHARA_FOLLOWER ) {
		if ( trait(TRAIT_GOD_JURE) ) {
			locvar_dmgsan_dmg = locvar_dmgsan_dmg - rnd(4) - 1
		}
	}
	if ( cdata(CDATA_CONDITION_DRUNK, dmgsan_charid) > 0 ) {
		locvar_dmgsan_dmg--
	}
	if ( locvar_dmgsan_dmg > 0 ) {
		cdata(CDATA_SANITY, dmgsan_charid) += locvar_dmgsan_dmg
	}
	if ( cdata(CDATA_SANITY, dmgsan_charid) > 100 ) {
		cdata(CDATA_SANITY, dmgsan_charid) = 100
	}
	else {
		locvar_dmgsan_dmg = 1
	}
	if ( rnd(10) == 0 | rnd(locvar_dmgsan_dmg + 1) > 5 | rnd(cdata(CDATA_SANITY, dmgsan_charid) + 1) > 50 ) {
		dmgcon dmgsan_charid, CONDITION_INSANE, 100
	}
	return 1

#deffunc actionsp int actionsp_charid, int actionsp_arg2
	if ( actionsp_charid != CHARA_PLAYER ) {
		return 1
	}
	if ( cdata(CDATA_SP, actionsp_charid) < 50 ) {
		if ( cdata(CDATA_SP, actionsp_charid) < rnd(75) ) {
			dmgsp actionsp_charid, actionsp_arg2
			return 0
		}
	}
	dmgsp actionsp_charid, actionsp_arg2
	return 1

#deffunc advfavoriteskill int advfavoriteskill_arg1
	randomize advfavoriteskill_arg1
	rtval = 0
	locvar_advfavoriteskill_i = 0
	repeat
		rtval(locvar_advfavoriteskill_i) = rnd(STARTING_SKILL_SPELL - STARTING_SKILL_WEAPON) + STARTING_SKILL_WEAPON
		if ( sdataref(SKILL_DATAREF_USE, rtval(locvar_advfavoriteskill_i)) == 0 ) {
			continue
		}
		locvar_advfavoriteskill_i++
		if ( locvar_advfavoriteskill_i >= 2 ) {
			break
		}
	loop
	randomize
	return locvar_advfavoriteskill_i

#deffunc advfavoritestat int advfavoritestat_arg1
	randomize advfavoritestat_arg1
	locvar_advfavoriteskill_i = rnd((STARTING_SKILL_ATTR + MAX_SKILL_ATTR_BASIC) - STARTING_SKILL_ATTR) + STARTING_SKILL_ATTR
	randomize
	return locvar_advfavoriteskill_i

#deffunc modweight int modweight_charid, int modweight_arg2, int modweight_arg3
	inv_find ITEM_ID_BIO_BATTERY, modweight_charid
	if ( stat != (-1) ) {
		return
	}
	locvar_modweight_mini = cdata(CDATA_HEIGHT, modweight_charid) * cdata(CDATA_HEIGHT, modweight_charid) * 18 / 25000
	locvar_modweight_max = cdata(CDATA_HEIGHT, modweight_charid) * cdata(CDATA_HEIGHT, modweight_charid) * 24 / 10000
	if ( cdata(CDATA_WEIGHT, modweight_charid) < locvar_modweight_mini ) {
		cdata(CDATA_WEIGHT, modweight_charid) = locvar_modweight_mini
		return
	}
	if ( cdata(CDATA_WEIGHT, modweight_charid) == 0 ) {
		return
	}
	if ( modweight_arg3 == 0 & modweight_arg2 > 0 ) {
		if ( cdata(CDATA_WEIGHT, modweight_charid) > locvar_modweight_max ) {
			return
		}
	}
	cdata(CDATA_WEIGHT, modweight_charid) = cdata(CDATA_WEIGHT, modweight_charid) * (100 + modweight_arg2) / 100 + (modweight_arg2 > 0) - (modweight_arg2 < 0)
	if ( cdata(CDATA_WEIGHT, modweight_charid) <= 0 ) {
		cdata(CDATA_WEIGHT, modweight_charid) = 0
	}
	if ( synccheck(modweight_charid, -1) ) {
		if ( modweight_arg2 > 2 ) {
			txt lang(name(modweight_charid) + "は太った。", name(modweight_charid) + " gain" + _s(modweight_charid) + " weight.")
		}
		if ( modweight_arg2 < (-2) ) {
			txt lang(name(modweight_charid) + "は痩せた。", name(modweight_charid) + " lose" + _s(modweight_charid) + " weight.")
		}
	}
	return

#deffunc modheight int modheight_charid, int modheight_arg2
	inv_find ITEM_ID_BIO_BATTERY, modheight_charid
	if ( stat != (-1) ) {
		return
	}
	cdata(CDATA_HEIGHT, modheight_charid) = cdata(CDATA_HEIGHT, modheight_charid) * (100 + modheight_arg2) / 100 + (modheight_arg2 > 0) - (modheight_arg2 < 0)
	if ( cdata(CDATA_HEIGHT, modheight_charid) <= 1 ) {
		cdata(CDATA_HEIGHT, modheight_charid) = 1
	}
	if ( synccheck(modheight_charid, -1) ) {
		if ( modheight_arg2 > 0 ) {
			txt lang(name(modheight_charid) + "の身長は少し伸びた。", name(modheight_charid) + " grow" + _s(modheight_charid) + " taller.")
		}
		if ( modheight_arg2 < 0 ) {
			txt lang(name(modheight_charid) + "の身長は少し縮んだ。", name(modheight_charid) + " grow" + _s(modheight_charid) + " smaller.")
		}
	}
	return

#deffunc cure_anorexia int cure_anorexia_charid
	if ( cbit(CHARA_BIT_ANOREXIA, cure_anorexia_charid) == 0 ) {
		return
	}
	cbitmod CHARA_BIT_ANOREXIA, cure_anorexia_charid, 0
	if ( synccheck(cure_anorexia_charid, -1) | cure_anorexia_charid < MAX_CHARA_FOLLOWER ) {
		txt lang(name(cure_anorexia_charid) + "の拒食症は治った。", name(cure_anorexia_charid) + " manage" + _s(cure_anorexia_charid) + " to recover from anorexia.")
		snd SOUNDLIST_OFFER1
	}
	return

#deffunc chara_vomit int chara_vomit_charid
	cdata(CDATA_VOMIT, chara_vomit_charid)++
	if ( synccheck(chara_vomit_charid, -1) ) {
		snd SOUNDLIST_VOMIT
		txt lang(name(chara_vomit_charid) + "は吐いた。", name(chara_vomit_charid) + " vomit" + _s(chara_vomit_charid) + ".")
	}
	if ( cbit(CHARA_BIT_PREGNANT, chara_vomit_charid) ) {
		cbitmod CHARA_BIT_PREGNANT, chara_vomit_charid, 0
		if ( synccheck(chara_vomit_charid, -1) ) {
			txt lang(name(chara_vomit_charid) + "は体内の異物を吐き出した！", name(chara_vomit_charid) + " spit" + _s(chara_vomit_charid) + " children from " + his(chara_vomit_charid) + " body!")
		}
		cdata(CDATA_INFANT, chara_vomit_charid) = 0
		if ( chara_vomit_charid == CHARA_PLAYER ) {
			spact(SKILL_SPACT_PREGNANT - STARTING_SKILL_SPACT) = 0
		}
	}
	if ( cdata(STARTING_CDATA_BUFF + 0 * ARRAY_CDATA_BUFF, chara_vomit_charid) != 0 ) {
		repeat MAX_BLESSINGS + MAX_HEXES
			if ( cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, chara_vomit_charid) == 0 ) {
				break
			}
			if ( bdataref(0, cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, chara_vomit_charid)) == 3 ) {
				delbuff chara_vomit_charid, cnt
				continue cnt
			}
		loop
	}
	if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
		inv_getheader -1
		locvar_chara_vomit_p = 2
		repeat invrange, invhead
			if ( inv(INV_ITEM_NUM, cnt) > 0 ) {
				if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_VOMIT ) {
					locvar_chara_vomit_p++
				}
			}
		loop
		if ( rnd(locvar_chara_vomit_p * locvar_chara_vomit_p * locvar_chara_vomit_p) == 0 | chara_vomit_charid == CHARA_PLAYER ) {
			if ( cfg_dust_select == 0 ) {
				flt
				itemcreate -1, ITEM_ID_VOMIT, cdata(CDATA_X, chara_vomit_charid), cdata(CDATA_Y, chara_vomit_charid), 0
				if ( stat != 0 ) {
					if ( chara_vomit_charid != CHARA_PLAYER ) {
						inv(INV_ITEM_SUB_NAME, ci) = cdata(CDATA_ID, chara_vomit_charid)
					}
				}
			}
		}
	}
	if ( cbit(CHARA_BIT_ANOREXIA, chara_vomit_charid) == 0 ) {
		if ( chara_vomit_charid < MAX_CHARA_FOLLOWER & cdata(CDATA_VOMIT, chara_vomit_charid) > 10 | (chara_vomit_charid >= MAX_CHARA_FOLLOWER & rnd(4) == 0) ) {
			if ( rnd(5) == 0 ) {
				cbitmod CHARA_BIT_ANOREXIA, chara_vomit_charid, 1
				if ( synccheck(chara_vomit_charid, -1) ) {
					txt lang(name(chara_vomit_charid) + "は拒食症になった。", name(chara_vomit_charid) + " develop" + _s(chara_vomit_charid) + " anorexia.")
					snd SOUNDLIST_OFFER1
				}
				if ( chara_vomit_charid == CHARA_PLAYER ) {
					item_find ITEM_ID_AMULET_OF_JURE, 3, 1
					if ( stat != (-1) ) {
						if ( inv(INV_ITEM_NUM, stat) >= 1 ) {
							if ( rnd(64) >= 1 ) {
								snd SOUNDLIST_PRAY2
								txtef COLOR_GREEN
								txt lang("しかし健康のお守りが輝き、瞬く間に拒食症が治った。", "But the Amulet of Jure shines brightly for a moment, instantly curing the anorexia.")
								cbitmod CHARA_BIT_ANOREXIA, chara_vomit_charid, 0
							}
						}
					}
				}
			}
		}
	}
	else {
		if ( cdata(CDATA_ALLIED, chara_vomit_charid) == 100 | chara_vomit_charid == CHARA_PLAYER & cdata(CDATA_QUALITY, chara_vomit_charid) < FIX_QUALITY_MIRACLE ) {
			skillmod SKILL_ATTR_STR, chara_vomit_charid, -50
			skillmod SKILL_ATTR_CON, chara_vomit_charid, -75
			skillmod SKILL_ATTR_CHA, chara_vomit_charid, -100
		}
	}
	dmgcon chara_vomit_charid, CONDITION_DIM, 100
	modweight chara_vomit_charid, (1 + rnd(5)) * (-1)
	if ( cdata(CDATA_HUNGER, chara_vomit_charid) <= 0 ) {
		if ( cdata(CDATA_VOMIT, chara_vomit_charid) > 0 ) {
			if ( chara_vomit_charid != CHARA_PLAYER & gdata(GDATA_FLAG_GAME_MODE) == 5 ) {
				dmghp chara_vomit_charid, 999999, DAMAGE_FROM_HUNGER
			}
			else {
				dmghp chara_vomit_charid, sdata(SKILL_ATTR_PER, chara_vomit_charid) / 10 * limit(cdata(CDATA_VOMIT, chara_vomit_charid), 1, 30) + 10, DAMAGE_FROM_HUNGER
			}
   	}
	}
	cdata(CDATA_HUNGER, chara_vomit_charid) -= 3000
	if ( TweakData(TWEAK_GAMEPLAY_CG_DISABLE_THIRST, TWEAK_CATEGORY_GAMEPLAY) == FALSE ) {
		cdata(CDATA_THIRST, chara_vomit_charid) -= 1000
	}
	return

#deffunc chara_morasi int chara_morasi_arg1
	if ( synccheck(chara_morasi_arg1, -1) ) {
		snd SOUNDLIST_WATERM
		txt lang(name(chara_morasi_arg1) + "は漏らした。", name(chara_morasi_arg1) + " is incontinent.")
		if ( chara_morasi_arg1 != 0 ) {
			txt lang("「…スッキリ！」", cnvtalk("Do not look at me!"))
		}
	}
	if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
		if ( cfg_dust_select == 0 ) {
			flt
			itemcreate -1, ITEM_ID_URINE, cdata(CDATA_X, chara_morasi_arg1), cdata(CDATA_Y, chara_morasi_arg1), 0
			if ( stat != 0 ) {
				if ( chara_morasi_arg1 != 0 ) {
					inv(INV_ITEM_SUB_NAME, ci) = cdata(CDATA_ID, chara_morasi_arg1)
					item_stack -1, ci
				}
			}
		}
	}
	cdata(CDATA_THIRST, chara_morasi_arg1) = 5000
	return

#deffunc gain_iden int gain_iden_charaid1, int gain_iden_charaid2, int gain_iden_amount
	if ( cdata(CDATA_SP_EARNED, gain_iden_charaid2) <= (-1000000) & cdata(CDATA_SP_EARNED, gain_iden_charaid2) > (-2000000) ) {
		snd SOUNDLIST_OFFER2
		locvar_gain_iden_generes = 0
		locvar_gain_iden_bvar = sorg(SKILL_RES_MAGIC, gain_iden_charaid1)
		locvar_gain_iden_generes = 60
		if ( sorg(SKILL_RES_FIRE, gain_iden_charaid1) > locvar_gain_iden_bvar ) {
			locvar_gain_iden_bvar = sorg(SKILL_RES_FIRE, gain_iden_charaid1)
			locvar_gain_iden_generes = 50
		}
		if ( sorg(SKILL_RES_COLD, gain_iden_charaid1) > locvar_gain_iden_bvar ) {
			locvar_gain_iden_bvar = sorg(SKILL_RES_COLD, gain_iden_charaid1)
			locvar_gain_iden_generes = 51
		}
		if ( sorg(SKILL_RES_LIGHTNING, gain_iden_charaid1) > locvar_gain_iden_bvar ) {
			locvar_gain_iden_bvar = sorg(SKILL_RES_LIGHTNING, gain_iden_charaid1)
			locvar_gain_iden_generes = 52
		}
		if ( sorg(SKILL_RES_DARKNESS, gain_iden_charaid1) > locvar_gain_iden_bvar ) {
			locvar_gain_iden_bvar = sorg(SKILL_RES_DARKNESS, gain_iden_charaid1)
			locvar_gain_iden_generes = 53
		}
		if ( sorg(SKILL_RES_MIND, gain_iden_charaid1) > locvar_gain_iden_bvar ) {
			locvar_gain_iden_bvar = sorg(SKILL_RES_MIND, gain_iden_charaid1)
			locvar_gain_iden_generes = 54
		}
		if ( sorg(SKILL_RES_POISON, gain_iden_charaid1) > locvar_gain_iden_bvar ) {
			locvar_gain_iden_bvar = sorg(SKILL_RES_POISON, gain_iden_charaid1)
			locvar_gain_iden_generes = 55
		}
		if ( sorg(SKILL_RES_NETHER, gain_iden_charaid1) > locvar_gain_iden_bvar ) {
			locvar_gain_iden_bvar = sorg(SKILL_RES_NETHER, gain_iden_charaid1)
			locvar_gain_iden_generes = 56
		}
		if ( sorg(SKILL_RES_SOUND, gain_iden_charaid1) > locvar_gain_iden_bvar ) {
			locvar_gain_iden_bvar = sorg(SKILL_RES_SOUND, gain_iden_charaid1)
			locvar_gain_iden_generes = 57
		}
		if ( sorg(SKILL_RES_NERVE, gain_iden_charaid1) > locvar_gain_iden_bvar ) {
			locvar_gain_iden_bvar = sorg(SKILL_RES_NERVE, gain_iden_charaid1)
			locvar_gain_iden_generes = 58
		}
		if ( sorg(SKILL_RES_CHAOS, gain_iden_charaid1) > locvar_gain_iden_bvar ) {
			locvar_gain_iden_bvar = sorg(SKILL_RES_CHAOS, gain_iden_charaid1)
			locvar_gain_iden_generes = 59
		}
		if ( sorg(SKILL_RES_MAGIC, gain_iden_charaid1) >= locvar_gain_iden_bvar ) {
			locvar_gain_iden_bvar = sorg(SKILL_RES_MAGIC, gain_iden_charaid1)
			locvar_gain_iden_generes = 60
		}
		cdata(CDATA_SP_EARNED, gain_iden_charaid2) -= limit(locvar_gain_iden_bvar / 100 + gain_iden_amount, 5, 20) * 10000
		if ( cdata(CDATA_SP_EARNED, gain_iden_charaid2) \ EXT_EQUIP_SLOTS == 0 ) {
			cdata(CDATA_SP_EARNED, gain_iden_charaid2) -= locvar_gain_iden_generes * 100
		}
		else {
			if ( cdata(CDATA_SP_EARNED, gain_iden_charaid2) \ 100 == 0 ) {
				cdata(CDATA_SP_EARNED, gain_iden_charaid2) -= locvar_gain_iden_generes
			}
		}
		if ( gain_iden_charaid1 != CREATURE_ID_BUG ) {
			cdata(CDATA_INFANT, gain_iden_charaid2) = cdata(CDATA_ID, gain_iden_charaid1)
		}
		txtef COLOR_YELLOW
		txt lang(name(gain_iden_charaid2) + "の生命核は" + name(gain_iden_charaid1) + "の遺伝子を獲得した。", name(gain_iden_charaid2) + " get genes of " + _s(gain_iden_charaid1) + ".")
		locvar_gain_iden_sintyoku = (cdata(CDATA_SP_EARNED, gain_iden_charaid2) + 1000000) * (-1) / 10000
		locvar_gain_iden_sintyoku += 50
		if ( cdata(CDATA_SP_EARNED, gain_iden_charaid2) > (-1500000) ) {
			txtef COLOR_YELLOW
			txt lang("[フェイズ1進捗率：" + locvar_gain_iden_sintyoku + "％]", "[Phase 1 progress " + locvar_gain_iden_sintyoku + " %]")
		}
		if ( cdata(CDATA_SP_EARNED, gain_iden_charaid2) <= (-1500000) ) {
			cdata(CDATA_SP_EARNED, gain_iden_charaid2) -= 500000
			snd SOUNDLIST_DING1
			txtef COLOR_GREEN
			txt lang("[SURVIVABILITY EXTENSION！]　フェイズ1が完了した。これからは、食事の栄養で成長させる必要がある。", "[SURVIVABILITY EXTENSION !] Phase 1 completed. From now on, it need to grow with the nutrition of foods.")
		}
		if ( 0 ) {
			txt lang("耐性" + locvar_gain_iden_generes + "でステージ" + cdata(CDATA_SP_EARNED, gain_iden_charaid2) + "。", name(gain_iden_charaid2) + " get genes of " + _s(gain_iden_charaid1) + ".")
		}
		locvar_gain_iden_generes = 0
		locvar_gain_iden_bvar = 0
		locvar_gain_iden_sintyoku = 0
	}
	return

#deffunc eatstatus int eatstatus_arg1, int eatstatus_arg2
	if ( cdata(CDATA_EXIST, eatstatus_arg2) != CHAR_STATE_ALIVE ) {
		return
	}
	if ( eatstatus_arg1 <= (-1) ) {
		cdata(CDATA_HUNGER, eatstatus_arg2) -= 1500
		if ( synccheck(eatstatus_arg2, -1) ) {
			txt lang(name(eatstatus_arg2) + "は嫌な感じがした。", name(eatstatus_arg2) + " feel" + _s(eatstatus_arg2) + " bad.")
		}
		chara_vomit eatstatus_arg2
	}
	if ( eatstatus_arg1 >= 1 ) {
		if ( synccheck(eatstatus_arg2, -1) ) {
			txt lang(name(eatstatus_arg2) + "は良い予感がした。", name(eatstatus_arg2) + " feel" + _s(eatstatus_arg2) + " good.")
		}
		if ( rnd(5) == 0 ) {
			addbuff eatstatus_arg2, BUFF_LUCK, 100, 500 + rnd(500)
		}
		healsan eatstatus_arg2, 2
	}
	return

#deffunc eatstatusfood int eatstatusfood_itemidx, int eatstatusfood_charaidx
	if ( cdata(CDATA_EXIST, eatstatusfood_charaidx) != CHAR_STATE_ALIVE ) {
		return
	}
	if ( eatstatusfood_itemidx <= (-1) ) {
		cdata(CDATA_HUNGER, eatstatusfood_charaidx) -= 1500
		if ( synccheck(eatstatusfood_charaidx, -1) ) {
			txt lang(name(eatstatusfood_charaidx) + "は嫌な感じがした。", name(eatstatusfood_charaidx) + " feel" + _s(eatstatusfood_charaidx) + " bad.")
		}
		chara_vomit eatstatusfood_charaidx
	}
	if ( eatstatusfood_itemidx >= 1 ) {
		if ( synccheck(eatstatusfood_charaidx, -1) ) {
			txt lang(name(eatstatusfood_charaidx) + "は良い予感がした。", name(eatstatusfood_charaidx) + " feel" + _s(eatstatusfood_charaidx) + " good.")
		}
		if ( rnd(5) == 0 ) {
			addbuff eatstatusfood_charaidx, BUFF_LUCK, 200, 700 + rnd(300)
		}
		healsan eatstatusfood_charaidx, 3
	}
	return

#deffunc chara_anorexia int chara_anorexia_arg1
	if ( cbit(CHARA_BIT_ANOREXIA, chara_anorexia_arg1) == 0 ) {
		return 0
	}
	chara_vomit chara_anorexia_arg1
	return 1

#deffunc sickifcursed int sickifcursed_arg1, int sickifcursed_arg2, int sickifcursed_arg3
	if ( sickifcursed_arg1 <= (-1) ) {
		if ( rnd(sickifcursed_arg3 + (sickifcursed_arg3 == 0)) == 0 ) {
			if ( synccheck(sickifcursed_arg2, -1) ) {
				txt lang(name(sickifcursed_arg2) + "は気分が悪くなった。", name(sickifcursed_arg2) + " feel" + _s(sickifcursed_arg2) + " grumpy.")
			}
			dmgcon sickifcursed_arg2, CONDITION_SICK, 200
		}
	}
	return

#defcfunc charaGivesExp int charaGivesExp_charidx
	if ( charaIsSummoned(charaGivesExp_charidx) | cbit(CHARA_BIT_NECRO, charaGivesExp_charidx) | cbit(CHARA_BIT_LIVESTOCK, charaGivesExp_charidx) ) {
		if ( TweakData(TWEAK_GAMEPLAY_SUMMONED_MONSTER_TRAINING, TWEAK_CATEGORY_GAMEPLAY) == FALSE ) {
			return FALSE
		}
	}
	if ( cbit(CHARA_BIT_SANDBAG, charaGivesExp_charidx) & TweakData(TWEAK_GAMEPLAY_SANDBAG_TRAINING, TWEAK_CATEGORY_GAMEPLAY) == FALSE ) {
		return FALSE
	}
	return TRUE

#defcfunc charaIsSummoned int charaIsSummoned_charidx
	if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, charaIsSummoned_charidx) | cbit(CHARA_BIT_SPLIT_NO_EFFECT, charaIsSummoned_charidx) | cbit(CHARA_BIT_SUMMONED, charaIsSummoned_charidx) ) {
		return TRUE
	}
	return FALSE
